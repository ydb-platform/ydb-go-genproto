// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: draft/protos/ydb_federated_query.proto

//go:build !protoopaque

package Ydb_FederatedQuery

import (
	Ydb "github.com/ydb-platform/ydb-go-genproto/protos/Ydb"
	Ydb_Issue "github.com/ydb-platform/ydb-go-genproto/protos/Ydb_Issue"
	Ydb_Operations "github.com/ydb-platform/ydb-go-genproto/protos/Ydb_Operations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExecuteMode int32

const (
	ExecuteMode_EXECUTE_MODE_UNSPECIFIED ExecuteMode = 0
	ExecuteMode_SAVE                     ExecuteMode = 1 // Save a query without changing its state
	ExecuteMode_PARSE                    ExecuteMode = 2 // Parse the query
	ExecuteMode_COMPILE                  ExecuteMode = 3 // Parse and compile the query
	ExecuteMode_VALIDATE                 ExecuteMode = 4 // Parse, compile and validate the query
	ExecuteMode_EXPLAIN                  ExecuteMode = 5 // High-level query plan that specifies only physical operations and non-temporary table names
	ExecuteMode_RUN                      ExecuteMode = 6 // Do all the previous + execution of the query
)

// Enum value maps for ExecuteMode.
var (
	ExecuteMode_name = map[int32]string{
		0: "EXECUTE_MODE_UNSPECIFIED",
		1: "SAVE",
		2: "PARSE",
		3: "COMPILE",
		4: "VALIDATE",
		5: "EXPLAIN",
		6: "RUN",
	}
	ExecuteMode_value = map[string]int32{
		"EXECUTE_MODE_UNSPECIFIED": 0,
		"SAVE":                     1,
		"PARSE":                    2,
		"COMPILE":                  3,
		"VALIDATE":                 4,
		"EXPLAIN":                  5,
		"RUN":                      6,
	}
)

func (x ExecuteMode) Enum() *ExecuteMode {
	p := new(ExecuteMode)
	*p = x
	return p
}

func (x ExecuteMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecuteMode) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_federated_query_proto_enumTypes[0].Descriptor()
}

func (ExecuteMode) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_federated_query_proto_enumTypes[0]
}

func (x ExecuteMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type QueryAction int32

const (
	QueryAction_QUERY_ACTION_UNSPECIFIED QueryAction = 0
	QueryAction_PAUSE                    QueryAction = 1 // Pause the query, with the possibility of its quick resumption
	QueryAction_PAUSE_GRACEFULLY         QueryAction = 2 // Similar to PAUSE, only suspends the query allowing it to pause in checkpoint. Can work for a long time
	QueryAction_ABORT                    QueryAction = 3 // Stop the query
	QueryAction_ABORT_GRACEFULLY         QueryAction = 4 // Similar to ABORT, only stops the query in checkpoint
	QueryAction_RESUME                   QueryAction = 5 // Resumes the execution of the query. Works only for PAUSE queries
)

// Enum value maps for QueryAction.
var (
	QueryAction_name = map[int32]string{
		0: "QUERY_ACTION_UNSPECIFIED",
		1: "PAUSE",
		2: "PAUSE_GRACEFULLY",
		3: "ABORT",
		4: "ABORT_GRACEFULLY",
		5: "RESUME",
	}
	QueryAction_value = map[string]int32{
		"QUERY_ACTION_UNSPECIFIED": 0,
		"PAUSE":                    1,
		"PAUSE_GRACEFULLY":         2,
		"ABORT":                    3,
		"ABORT_GRACEFULLY":         4,
		"RESUME":                   5,
	}
)

func (x QueryAction) Enum() *QueryAction {
	p := new(QueryAction)
	*p = x
	return p
}

func (x QueryAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryAction) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_federated_query_proto_enumTypes[1].Descriptor()
}

func (QueryAction) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_federated_query_proto_enumTypes[1]
}

func (x QueryAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type StateLoadMode int32

const (
	StateLoadMode_STATE_LOAD_MODE_UNSPECIFIED StateLoadMode = 0
	StateLoadMode_EMPTY                       StateLoadMode = 1 // Start the query with an empty state
	StateLoadMode_FROM_LAST_CHECKPOINT        StateLoadMode = 2 // Start the query with the state that is saved in the last checkpoint
)

// Enum value maps for StateLoadMode.
var (
	StateLoadMode_name = map[int32]string{
		0: "STATE_LOAD_MODE_UNSPECIFIED",
		1: "EMPTY",
		2: "FROM_LAST_CHECKPOINT",
	}
	StateLoadMode_value = map[string]int32{
		"STATE_LOAD_MODE_UNSPECIFIED": 0,
		"EMPTY":                       1,
		"FROM_LAST_CHECKPOINT":        2,
	}
)

func (x StateLoadMode) Enum() *StateLoadMode {
	p := new(StateLoadMode)
	*p = x
	return p
}

func (x StateLoadMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateLoadMode) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_federated_query_proto_enumTypes[2].Descriptor()
}

func (StateLoadMode) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_federated_query_proto_enumTypes[2]
}

func (x StateLoadMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type AutomaticType int32

const (
	AutomaticType_AUTOMATIC_TYPE_UNSPECIFIED AutomaticType = 0
	AutomaticType_AUTOMATIC                  AutomaticType = 1
	AutomaticType_NOT_AUTOMATIC              AutomaticType = 2
)

// Enum value maps for AutomaticType.
var (
	AutomaticType_name = map[int32]string{
		0: "AUTOMATIC_TYPE_UNSPECIFIED",
		1: "AUTOMATIC",
		2: "NOT_AUTOMATIC",
	}
	AutomaticType_value = map[string]int32{
		"AUTOMATIC_TYPE_UNSPECIFIED": 0,
		"AUTOMATIC":                  1,
		"NOT_AUTOMATIC":              2,
	}
)

func (x AutomaticType) Enum() *AutomaticType {
	p := new(AutomaticType)
	*p = x
	return p
}

func (x AutomaticType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AutomaticType) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_federated_query_proto_enumTypes[3].Descriptor()
}

func (AutomaticType) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_federated_query_proto_enumTypes[3]
}

func (x AutomaticType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Acl_Visibility int32

const (
	Acl_VISIBILITY_UNSPECIFIED Acl_Visibility = 0
	Acl_PRIVATE                Acl_Visibility = 1 // Visibility only for the creator of the entity
	Acl_SCOPE                  Acl_Visibility = 2 // Visibility for subjects within scope
)

// Enum value maps for Acl_Visibility.
var (
	Acl_Visibility_name = map[int32]string{
		0: "VISIBILITY_UNSPECIFIED",
		1: "PRIVATE",
		2: "SCOPE",
	}
	Acl_Visibility_value = map[string]int32{
		"VISIBILITY_UNSPECIFIED": 0,
		"PRIVATE":                1,
		"SCOPE":                  2,
	}
)

func (x Acl_Visibility) Enum() *Acl_Visibility {
	p := new(Acl_Visibility)
	*p = x
	return p
}

func (x Acl_Visibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Acl_Visibility) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_federated_query_proto_enumTypes[4].Descriptor()
}

func (Acl_Visibility) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_federated_query_proto_enumTypes[4]
}

func (x Acl_Visibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type QueryContent_QueryType int32

const (
	QueryContent_QUERY_TYPE_UNSPECIFIED QueryContent_QueryType = 0
	QueryContent_ANALYTICS              QueryContent_QueryType = 1 // Analytical query (used for analytical data processing for example to work with YDB, ClickHouse, ...)
	QueryContent_STREAMING              QueryContent_QueryType = 2 // Streaming query (used for streaming data processing, such as working with YDS)
)

// Enum value maps for QueryContent_QueryType.
var (
	QueryContent_QueryType_name = map[int32]string{
		0: "QUERY_TYPE_UNSPECIFIED",
		1: "ANALYTICS",
		2: "STREAMING",
	}
	QueryContent_QueryType_value = map[string]int32{
		"QUERY_TYPE_UNSPECIFIED": 0,
		"ANALYTICS":              1,
		"STREAMING":              2,
	}
)

func (x QueryContent_QueryType) Enum() *QueryContent_QueryType {
	p := new(QueryContent_QueryType)
	*p = x
	return p
}

func (x QueryContent_QueryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryContent_QueryType) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_federated_query_proto_enumTypes[5].Descriptor()
}

func (QueryContent_QueryType) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_federated_query_proto_enumTypes[5]
}

func (x QueryContent_QueryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type QueryContent_QuerySyntax int32

const (
	QueryContent_QUERY_SYNTAX_UNSPECIFIED QueryContent_QuerySyntax = 0
	QueryContent_YQL_V1                   QueryContent_QuerySyntax = 1 // YQL version 1
	QueryContent_PG                       QueryContent_QuerySyntax = 2 // PostgresQL
)

// Enum value maps for QueryContent_QuerySyntax.
var (
	QueryContent_QuerySyntax_name = map[int32]string{
		0: "QUERY_SYNTAX_UNSPECIFIED",
		1: "YQL_V1",
		2: "PG",
	}
	QueryContent_QuerySyntax_value = map[string]int32{
		"QUERY_SYNTAX_UNSPECIFIED": 0,
		"YQL_V1":                   1,
		"PG":                       2,
	}
)

func (x QueryContent_QuerySyntax) Enum() *QueryContent_QuerySyntax {
	p := new(QueryContent_QuerySyntax)
	*p = x
	return p
}

func (x QueryContent_QuerySyntax) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryContent_QuerySyntax) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_federated_query_proto_enumTypes[6].Descriptor()
}

func (QueryContent_QuerySyntax) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_federated_query_proto_enumTypes[6]
}

func (x QueryContent_QuerySyntax) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type QueryMeta_ComputeStatus int32

const (
	QueryMeta_COMPUTE_STATUS_UNSPECIFIED QueryMeta_ComputeStatus = 0
	QueryMeta_STARTING                   QueryMeta_ComputeStatus = 1  // Start execution of the action on query
	QueryMeta_ABORTED_BY_USER            QueryMeta_ComputeStatus = 2  // Query aborted by user
	QueryMeta_ABORTED_BY_SYSTEM          QueryMeta_ComputeStatus = 3  // Query aborted by system
	QueryMeta_ABORTING_BY_USER           QueryMeta_ComputeStatus = 4  // Query aborting by user
	QueryMeta_ABORTING_BY_SYSTEM         QueryMeta_ComputeStatus = 5  // Query aborting by system
	QueryMeta_RESUMING                   QueryMeta_ComputeStatus = 6  // Resuming query execution from PAUSED status
	QueryMeta_RUNNING                    QueryMeta_ComputeStatus = 7  // Query started for execution
	QueryMeta_COMPLETED                  QueryMeta_ComputeStatus = 8  // Query completed successfully
	QueryMeta_COMPLETING                 QueryMeta_ComputeStatus = 12 // Finalizing query before become COMPLETED
	QueryMeta_FAILED                     QueryMeta_ComputeStatus = 9  // Query completed with errors
	QueryMeta_FAILING                    QueryMeta_ComputeStatus = 13 // Finalizing query before become FAILED
	QueryMeta_PAUSED                     QueryMeta_ComputeStatus = 11 // Query paused
	QueryMeta_PAUSING                    QueryMeta_ComputeStatus = 10 // Query starts pausing
)

// Enum value maps for QueryMeta_ComputeStatus.
var (
	QueryMeta_ComputeStatus_name = map[int32]string{
		0:  "COMPUTE_STATUS_UNSPECIFIED",
		1:  "STARTING",
		2:  "ABORTED_BY_USER",
		3:  "ABORTED_BY_SYSTEM",
		4:  "ABORTING_BY_USER",
		5:  "ABORTING_BY_SYSTEM",
		6:  "RESUMING",
		7:  "RUNNING",
		8:  "COMPLETED",
		12: "COMPLETING",
		9:  "FAILED",
		13: "FAILING",
		11: "PAUSED",
		10: "PAUSING",
	}
	QueryMeta_ComputeStatus_value = map[string]int32{
		"COMPUTE_STATUS_UNSPECIFIED": 0,
		"STARTING":                   1,
		"ABORTED_BY_USER":            2,
		"ABORTED_BY_SYSTEM":          3,
		"ABORTING_BY_USER":           4,
		"ABORTING_BY_SYSTEM":         5,
		"RESUMING":                   6,
		"RUNNING":                    7,
		"COMPLETED":                  8,
		"COMPLETING":                 12,
		"FAILED":                     9,
		"FAILING":                    13,
		"PAUSED":                     11,
		"PAUSING":                    10,
	}
)

func (x QueryMeta_ComputeStatus) Enum() *QueryMeta_ComputeStatus {
	p := new(QueryMeta_ComputeStatus)
	*p = x
	return p
}

func (x QueryMeta_ComputeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryMeta_ComputeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_federated_query_proto_enumTypes[7].Descriptor()
}

func (QueryMeta_ComputeStatus) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_federated_query_proto_enumTypes[7]
}

func (x QueryMeta_ComputeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ConnectionSetting_ConnectionType int32

const (
	ConnectionSetting_CONNECTION_TYPE_UNSPECIFIED ConnectionSetting_ConnectionType = 0
	ConnectionSetting_YDB_DATABASE                ConnectionSetting_ConnectionType = 1
	ConnectionSetting_CLICKHOUSE_CLUSTER          ConnectionSetting_ConnectionType = 2
	ConnectionSetting_DATA_STREAMS                ConnectionSetting_ConnectionType = 3
	ConnectionSetting_OBJECT_STORAGE              ConnectionSetting_ConnectionType = 4
	ConnectionSetting_MONITORING                  ConnectionSetting_ConnectionType = 5
	ConnectionSetting_POSTGRESQL_CLUSTER          ConnectionSetting_ConnectionType = 6
)

// Enum value maps for ConnectionSetting_ConnectionType.
var (
	ConnectionSetting_ConnectionType_name = map[int32]string{
		0: "CONNECTION_TYPE_UNSPECIFIED",
		1: "YDB_DATABASE",
		2: "CLICKHOUSE_CLUSTER",
		3: "DATA_STREAMS",
		4: "OBJECT_STORAGE",
		5: "MONITORING",
		6: "POSTGRESQL_CLUSTER",
	}
	ConnectionSetting_ConnectionType_value = map[string]int32{
		"CONNECTION_TYPE_UNSPECIFIED": 0,
		"YDB_DATABASE":                1,
		"CLICKHOUSE_CLUSTER":          2,
		"DATA_STREAMS":                3,
		"OBJECT_STORAGE":              4,
		"MONITORING":                  5,
		"POSTGRESQL_CLUSTER":          6,
	}
)

func (x ConnectionSetting_ConnectionType) Enum() *ConnectionSetting_ConnectionType {
	p := new(ConnectionSetting_ConnectionType)
	*p = x
	return p
}

func (x ConnectionSetting_ConnectionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionSetting_ConnectionType) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_federated_query_proto_enumTypes[8].Descriptor()
}

func (ConnectionSetting_ConnectionType) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_federated_query_proto_enumTypes[8]
}

func (x ConnectionSetting_ConnectionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type BindingSetting_BindingType int32

const (
	BindingSetting_BINDING_TYPE_UNSPECIFIED BindingSetting_BindingType = 0
	BindingSetting_DATA_STREAMS             BindingSetting_BindingType = 1
	BindingSetting_OBJECT_STORAGE           BindingSetting_BindingType = 2
)

// Enum value maps for BindingSetting_BindingType.
var (
	BindingSetting_BindingType_name = map[int32]string{
		0: "BINDING_TYPE_UNSPECIFIED",
		1: "DATA_STREAMS",
		2: "OBJECT_STORAGE",
	}
	BindingSetting_BindingType_value = map[string]int32{
		"BINDING_TYPE_UNSPECIFIED": 0,
		"DATA_STREAMS":             1,
		"OBJECT_STORAGE":           2,
	}
)

func (x BindingSetting_BindingType) Enum() *BindingSetting_BindingType {
	p := new(BindingSetting_BindingType)
	*p = x
	return p
}

func (x BindingSetting_BindingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BindingSetting_BindingType) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_federated_query_proto_enumTypes[9].Descriptor()
}

func (BindingSetting_BindingType) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_federated_query_proto_enumTypes[9]
}

func (x BindingSetting_BindingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Acl struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Visibility    *Acl_Visibility        `protobuf:"varint,1,opt,name=visibility,enum=FederatedQuery.Acl_Visibility" json:"visibility,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Acl) Reset() {
	*x = Acl{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Acl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acl) ProtoMessage() {}

func (x *Acl) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Acl) GetVisibility() Acl_Visibility {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return Acl_VISIBILITY_UNSPECIFIED
}

func (x *Acl) SetVisibility(v Acl_Visibility) {
	x.Visibility = &v
}

func (x *Acl) HasVisibility() bool {
	if x == nil {
		return false
	}
	return x.Visibility != nil
}

func (x *Acl) ClearVisibility() {
	x.Visibility = nil
}

type Acl_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Visibility *Acl_Visibility
}

func (b0 Acl_builder) Build() *Acl {
	m0 := &Acl{}
	b, x := &b0, m0
	_, _ = b, x
	x.Visibility = b.Visibility
	return m0
}

type Limits struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	VcpuRateLimit *int64                 `protobuf:"varint,1,opt,name=vcpu_rate_limit,json=vcpuRateLimit" json:"vcpu_rate_limit,omitempty"` // 0.01 vcpu per second
	FlowRateLimit *int64                 `protobuf:"varint,2,opt,name=flow_rate_limit,json=flowRateLimit" json:"flow_rate_limit,omitempty"` // Bytes per second
	VcpuTimeLimit *int64                 `protobuf:"varint,3,opt,name=vcpu_time_limit,json=vcpuTimeLimit" json:"vcpu_time_limit,omitempty"` // Milliseconds per second
	// Used only for analytics queries
	MaxResultSize *int64 `protobuf:"varint,4,opt,name=max_result_size,json=maxResultSize" json:"max_result_size,omitempty"` // Bytes
	MaxResultRows *int64 `protobuf:"varint,5,opt,name=max_result_rows,json=maxResultRows" json:"max_result_rows,omitempty"` // Count
	// Common limits
	MemoryLimit *int64               `protobuf:"varint,6,opt,name=memory_limit,json=memoryLimit" json:"memory_limit,omitempty"` // Bytes
	ResultTtl   *durationpb.Duration `protobuf:"bytes,7,opt,name=result_ttl,json=resultTtl" json:"result_ttl,omitempty"`
	// Types that are valid to be assigned to Timeout:
	//
	//	*Limits_ExecutionTimeout
	//	*Limits_ExecutionDeadline
	Timeout       isLimits_Timeout `protobuf_oneof:"timeout"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Limits) Reset() {
	*x = Limits{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Limits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Limits) ProtoMessage() {}

func (x *Limits) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Limits) GetVcpuRateLimit() int64 {
	if x != nil && x.VcpuRateLimit != nil {
		return *x.VcpuRateLimit
	}
	return 0
}

func (x *Limits) GetFlowRateLimit() int64 {
	if x != nil && x.FlowRateLimit != nil {
		return *x.FlowRateLimit
	}
	return 0
}

func (x *Limits) GetVcpuTimeLimit() int64 {
	if x != nil && x.VcpuTimeLimit != nil {
		return *x.VcpuTimeLimit
	}
	return 0
}

func (x *Limits) GetMaxResultSize() int64 {
	if x != nil && x.MaxResultSize != nil {
		return *x.MaxResultSize
	}
	return 0
}

func (x *Limits) GetMaxResultRows() int64 {
	if x != nil && x.MaxResultRows != nil {
		return *x.MaxResultRows
	}
	return 0
}

func (x *Limits) GetMemoryLimit() int64 {
	if x != nil && x.MemoryLimit != nil {
		return *x.MemoryLimit
	}
	return 0
}

func (x *Limits) GetResultTtl() *durationpb.Duration {
	if x != nil {
		return x.ResultTtl
	}
	return nil
}

func (x *Limits) GetTimeout() isLimits_Timeout {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *Limits) GetExecutionTimeout() *durationpb.Duration {
	if x != nil {
		if x, ok := x.Timeout.(*Limits_ExecutionTimeout); ok {
			return x.ExecutionTimeout
		}
	}
	return nil
}

func (x *Limits) GetExecutionDeadline() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Timeout.(*Limits_ExecutionDeadline); ok {
			return x.ExecutionDeadline
		}
	}
	return nil
}

func (x *Limits) SetVcpuRateLimit(v int64) {
	x.VcpuRateLimit = &v
}

func (x *Limits) SetFlowRateLimit(v int64) {
	x.FlowRateLimit = &v
}

func (x *Limits) SetVcpuTimeLimit(v int64) {
	x.VcpuTimeLimit = &v
}

func (x *Limits) SetMaxResultSize(v int64) {
	x.MaxResultSize = &v
}

func (x *Limits) SetMaxResultRows(v int64) {
	x.MaxResultRows = &v
}

func (x *Limits) SetMemoryLimit(v int64) {
	x.MemoryLimit = &v
}

func (x *Limits) SetResultTtl(v *durationpb.Duration) {
	x.ResultTtl = v
}

func (x *Limits) SetExecutionTimeout(v *durationpb.Duration) {
	if v == nil {
		x.Timeout = nil
		return
	}
	x.Timeout = &Limits_ExecutionTimeout{v}
}

func (x *Limits) SetExecutionDeadline(v *timestamppb.Timestamp) {
	if v == nil {
		x.Timeout = nil
		return
	}
	x.Timeout = &Limits_ExecutionDeadline{v}
}

func (x *Limits) HasVcpuRateLimit() bool {
	if x == nil {
		return false
	}
	return x.VcpuRateLimit != nil
}

func (x *Limits) HasFlowRateLimit() bool {
	if x == nil {
		return false
	}
	return x.FlowRateLimit != nil
}

func (x *Limits) HasVcpuTimeLimit() bool {
	if x == nil {
		return false
	}
	return x.VcpuTimeLimit != nil
}

func (x *Limits) HasMaxResultSize() bool {
	if x == nil {
		return false
	}
	return x.MaxResultSize != nil
}

func (x *Limits) HasMaxResultRows() bool {
	if x == nil {
		return false
	}
	return x.MaxResultRows != nil
}

func (x *Limits) HasMemoryLimit() bool {
	if x == nil {
		return false
	}
	return x.MemoryLimit != nil
}

func (x *Limits) HasResultTtl() bool {
	if x == nil {
		return false
	}
	return x.ResultTtl != nil
}

func (x *Limits) HasTimeout() bool {
	if x == nil {
		return false
	}
	return x.Timeout != nil
}

func (x *Limits) HasExecutionTimeout() bool {
	if x == nil {
		return false
	}
	_, ok := x.Timeout.(*Limits_ExecutionTimeout)
	return ok
}

func (x *Limits) HasExecutionDeadline() bool {
	if x == nil {
		return false
	}
	_, ok := x.Timeout.(*Limits_ExecutionDeadline)
	return ok
}

func (x *Limits) ClearVcpuRateLimit() {
	x.VcpuRateLimit = nil
}

func (x *Limits) ClearFlowRateLimit() {
	x.FlowRateLimit = nil
}

func (x *Limits) ClearVcpuTimeLimit() {
	x.VcpuTimeLimit = nil
}

func (x *Limits) ClearMaxResultSize() {
	x.MaxResultSize = nil
}

func (x *Limits) ClearMaxResultRows() {
	x.MaxResultRows = nil
}

func (x *Limits) ClearMemoryLimit() {
	x.MemoryLimit = nil
}

func (x *Limits) ClearResultTtl() {
	x.ResultTtl = nil
}

func (x *Limits) ClearTimeout() {
	x.Timeout = nil
}

func (x *Limits) ClearExecutionTimeout() {
	if _, ok := x.Timeout.(*Limits_ExecutionTimeout); ok {
		x.Timeout = nil
	}
}

func (x *Limits) ClearExecutionDeadline() {
	if _, ok := x.Timeout.(*Limits_ExecutionDeadline); ok {
		x.Timeout = nil
	}
}

const Limits_Timeout_not_set_case case_Limits_Timeout = 0
const Limits_ExecutionTimeout_case case_Limits_Timeout = 8
const Limits_ExecutionDeadline_case case_Limits_Timeout = 9

func (x *Limits) WhichTimeout() case_Limits_Timeout {
	if x == nil {
		return Limits_Timeout_not_set_case
	}
	switch x.Timeout.(type) {
	case *Limits_ExecutionTimeout:
		return Limits_ExecutionTimeout_case
	case *Limits_ExecutionDeadline:
		return Limits_ExecutionDeadline_case
	default:
		return Limits_Timeout_not_set_case
	}
}

type Limits_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	VcpuRateLimit *int64
	FlowRateLimit *int64
	VcpuTimeLimit *int64
	// Used only for analytics queries
	MaxResultSize *int64
	MaxResultRows *int64
	// Common limits
	MemoryLimit *int64
	ResultTtl   *durationpb.Duration
	// Fields of oneof Timeout:
	ExecutionTimeout  *durationpb.Duration
	ExecutionDeadline *timestamppb.Timestamp
	// -- end of Timeout
}

func (b0 Limits_builder) Build() *Limits {
	m0 := &Limits{}
	b, x := &b0, m0
	_, _ = b, x
	x.VcpuRateLimit = b.VcpuRateLimit
	x.FlowRateLimit = b.FlowRateLimit
	x.VcpuTimeLimit = b.VcpuTimeLimit
	x.MaxResultSize = b.MaxResultSize
	x.MaxResultRows = b.MaxResultRows
	x.MemoryLimit = b.MemoryLimit
	x.ResultTtl = b.ResultTtl
	if b.ExecutionTimeout != nil {
		x.Timeout = &Limits_ExecutionTimeout{b.ExecutionTimeout}
	}
	if b.ExecutionDeadline != nil {
		x.Timeout = &Limits_ExecutionDeadline{b.ExecutionDeadline}
	}
	return m0
}

type case_Limits_Timeout protoreflect.FieldNumber

func (x case_Limits_Timeout) String() string {
	md := file_draft_protos_ydb_federated_query_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isLimits_Timeout interface {
	isLimits_Timeout()
}

type Limits_ExecutionTimeout struct {
	ExecutionTimeout *durationpb.Duration `protobuf:"bytes,8,opt,name=execution_timeout,json=executionTimeout,oneof"`
}

type Limits_ExecutionDeadline struct {
	ExecutionDeadline *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=execution_deadline,json=executionDeadline,oneof"`
}

func (*Limits_ExecutionTimeout) isLimits_Timeout() {}

func (*Limits_ExecutionDeadline) isLimits_Timeout() {}

// For streaming queries only
type StreamingDisposition struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Types that are valid to be assigned to Disposition:
	//
	//	*StreamingDisposition_Oldest
	//	*StreamingDisposition_Fresh
	//	*StreamingDisposition_FromTime_
	//	*StreamingDisposition_TimeAgo_
	//	*StreamingDisposition_FromLastCheckpoint_
	Disposition   isStreamingDisposition_Disposition `protobuf_oneof:"disposition"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingDisposition) Reset() {
	*x = StreamingDisposition{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingDisposition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingDisposition) ProtoMessage() {}

func (x *StreamingDisposition) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StreamingDisposition) GetDisposition() isStreamingDisposition_Disposition {
	if x != nil {
		return x.Disposition
	}
	return nil
}

func (x *StreamingDisposition) GetOldest() *emptypb.Empty {
	if x != nil {
		if x, ok := x.Disposition.(*StreamingDisposition_Oldest); ok {
			return x.Oldest
		}
	}
	return nil
}

func (x *StreamingDisposition) GetFresh() *emptypb.Empty {
	if x != nil {
		if x, ok := x.Disposition.(*StreamingDisposition_Fresh); ok {
			return x.Fresh
		}
	}
	return nil
}

func (x *StreamingDisposition) GetFromTime() *StreamingDisposition_FromTime {
	if x != nil {
		if x, ok := x.Disposition.(*StreamingDisposition_FromTime_); ok {
			return x.FromTime
		}
	}
	return nil
}

func (x *StreamingDisposition) GetTimeAgo() *StreamingDisposition_TimeAgo {
	if x != nil {
		if x, ok := x.Disposition.(*StreamingDisposition_TimeAgo_); ok {
			return x.TimeAgo
		}
	}
	return nil
}

func (x *StreamingDisposition) GetFromLastCheckpoint() *StreamingDisposition_FromLastCheckpoint {
	if x != nil {
		if x, ok := x.Disposition.(*StreamingDisposition_FromLastCheckpoint_); ok {
			return x.FromLastCheckpoint
		}
	}
	return nil
}

func (x *StreamingDisposition) SetOldest(v *emptypb.Empty) {
	if v == nil {
		x.Disposition = nil
		return
	}
	x.Disposition = &StreamingDisposition_Oldest{v}
}

func (x *StreamingDisposition) SetFresh(v *emptypb.Empty) {
	if v == nil {
		x.Disposition = nil
		return
	}
	x.Disposition = &StreamingDisposition_Fresh{v}
}

func (x *StreamingDisposition) SetFromTime(v *StreamingDisposition_FromTime) {
	if v == nil {
		x.Disposition = nil
		return
	}
	x.Disposition = &StreamingDisposition_FromTime_{v}
}

func (x *StreamingDisposition) SetTimeAgo(v *StreamingDisposition_TimeAgo) {
	if v == nil {
		x.Disposition = nil
		return
	}
	x.Disposition = &StreamingDisposition_TimeAgo_{v}
}

func (x *StreamingDisposition) SetFromLastCheckpoint(v *StreamingDisposition_FromLastCheckpoint) {
	if v == nil {
		x.Disposition = nil
		return
	}
	x.Disposition = &StreamingDisposition_FromLastCheckpoint_{v}
}

func (x *StreamingDisposition) HasDisposition() bool {
	if x == nil {
		return false
	}
	return x.Disposition != nil
}

func (x *StreamingDisposition) HasOldest() bool {
	if x == nil {
		return false
	}
	_, ok := x.Disposition.(*StreamingDisposition_Oldest)
	return ok
}

func (x *StreamingDisposition) HasFresh() bool {
	if x == nil {
		return false
	}
	_, ok := x.Disposition.(*StreamingDisposition_Fresh)
	return ok
}

func (x *StreamingDisposition) HasFromTime() bool {
	if x == nil {
		return false
	}
	_, ok := x.Disposition.(*StreamingDisposition_FromTime_)
	return ok
}

func (x *StreamingDisposition) HasTimeAgo() bool {
	if x == nil {
		return false
	}
	_, ok := x.Disposition.(*StreamingDisposition_TimeAgo_)
	return ok
}

func (x *StreamingDisposition) HasFromLastCheckpoint() bool {
	if x == nil {
		return false
	}
	_, ok := x.Disposition.(*StreamingDisposition_FromLastCheckpoint_)
	return ok
}

func (x *StreamingDisposition) ClearDisposition() {
	x.Disposition = nil
}

func (x *StreamingDisposition) ClearOldest() {
	if _, ok := x.Disposition.(*StreamingDisposition_Oldest); ok {
		x.Disposition = nil
	}
}

func (x *StreamingDisposition) ClearFresh() {
	if _, ok := x.Disposition.(*StreamingDisposition_Fresh); ok {
		x.Disposition = nil
	}
}

func (x *StreamingDisposition) ClearFromTime() {
	if _, ok := x.Disposition.(*StreamingDisposition_FromTime_); ok {
		x.Disposition = nil
	}
}

func (x *StreamingDisposition) ClearTimeAgo() {
	if _, ok := x.Disposition.(*StreamingDisposition_TimeAgo_); ok {
		x.Disposition = nil
	}
}

func (x *StreamingDisposition) ClearFromLastCheckpoint() {
	if _, ok := x.Disposition.(*StreamingDisposition_FromLastCheckpoint_); ok {
		x.Disposition = nil
	}
}

const StreamingDisposition_Disposition_not_set_case case_StreamingDisposition_Disposition = 0
const StreamingDisposition_Oldest_case case_StreamingDisposition_Disposition = 1
const StreamingDisposition_Fresh_case case_StreamingDisposition_Disposition = 2
const StreamingDisposition_FromTime_case case_StreamingDisposition_Disposition = 3
const StreamingDisposition_TimeAgo_case case_StreamingDisposition_Disposition = 4
const StreamingDisposition_FromLastCheckpoint_case case_StreamingDisposition_Disposition = 5

func (x *StreamingDisposition) WhichDisposition() case_StreamingDisposition_Disposition {
	if x == nil {
		return StreamingDisposition_Disposition_not_set_case
	}
	switch x.Disposition.(type) {
	case *StreamingDisposition_Oldest:
		return StreamingDisposition_Oldest_case
	case *StreamingDisposition_Fresh:
		return StreamingDisposition_Fresh_case
	case *StreamingDisposition_FromTime_:
		return StreamingDisposition_FromTime_case
	case *StreamingDisposition_TimeAgo_:
		return StreamingDisposition_TimeAgo_case
	case *StreamingDisposition_FromLastCheckpoint_:
		return StreamingDisposition_FromLastCheckpoint_case
	default:
		return StreamingDisposition_Disposition_not_set_case
	}
}

type StreamingDisposition_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof Disposition:
	Oldest             *emptypb.Empty
	Fresh              *emptypb.Empty
	FromTime           *StreamingDisposition_FromTime
	TimeAgo            *StreamingDisposition_TimeAgo
	FromLastCheckpoint *StreamingDisposition_FromLastCheckpoint
	// -- end of Disposition
}

func (b0 StreamingDisposition_builder) Build() *StreamingDisposition {
	m0 := &StreamingDisposition{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Oldest != nil {
		x.Disposition = &StreamingDisposition_Oldest{b.Oldest}
	}
	if b.Fresh != nil {
		x.Disposition = &StreamingDisposition_Fresh{b.Fresh}
	}
	if b.FromTime != nil {
		x.Disposition = &StreamingDisposition_FromTime_{b.FromTime}
	}
	if b.TimeAgo != nil {
		x.Disposition = &StreamingDisposition_TimeAgo_{b.TimeAgo}
	}
	if b.FromLastCheckpoint != nil {
		x.Disposition = &StreamingDisposition_FromLastCheckpoint_{b.FromLastCheckpoint}
	}
	return m0
}

type case_StreamingDisposition_Disposition protoreflect.FieldNumber

func (x case_StreamingDisposition_Disposition) String() string {
	md := file_draft_protos_ydb_federated_query_proto_msgTypes[2].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isStreamingDisposition_Disposition interface {
	isStreamingDisposition_Disposition()
}

type StreamingDisposition_Oldest struct {
	Oldest *emptypb.Empty `protobuf:"bytes,1,opt,name=oldest,oneof"` // Start processing with the oldest offset
}

type StreamingDisposition_Fresh struct {
	Fresh *emptypb.Empty `protobuf:"bytes,2,opt,name=fresh,oneof"` // Start processing with the fresh offset
}

type StreamingDisposition_FromTime_ struct {
	FromTime *StreamingDisposition_FromTime `protobuf:"bytes,3,opt,name=from_time,json=fromTime,oneof"` // Start processing with offset from the specified time
}

type StreamingDisposition_TimeAgo_ struct {
	TimeAgo *StreamingDisposition_TimeAgo `protobuf:"bytes,4,opt,name=time_ago,json=timeAgo,oneof"` // Start processing with offset some time ago
}

type StreamingDisposition_FromLastCheckpoint_ struct {
	FromLastCheckpoint *StreamingDisposition_FromLastCheckpoint `protobuf:"bytes,5,opt,name=from_last_checkpoint,json=fromLastCheckpoint,oneof"` // Start processing with offset which corresponds to the last checkpoint
}

func (*StreamingDisposition_Oldest) isStreamingDisposition_Disposition() {}

func (*StreamingDisposition_Fresh) isStreamingDisposition_Disposition() {}

func (*StreamingDisposition_FromTime_) isStreamingDisposition_Disposition() {}

func (*StreamingDisposition_TimeAgo_) isStreamingDisposition_Disposition() {}

func (*StreamingDisposition_FromLastCheckpoint_) isStreamingDisposition_Disposition() {}

// Query information that the subject can change
type QueryContent struct {
	state       protoimpl.MessageState  `protogen:"hybrid.v1"`
	Type        *QueryContent_QueryType `protobuf:"varint,1,opt,name=type,enum=FederatedQuery.QueryContent_QueryType" json:"type,omitempty"`
	Name        *string                 `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Acl         *Acl                    `protobuf:"bytes,3,opt,name=acl" json:"acl,omitempty"`
	Limits      *Limits                 `protobuf:"bytes,4,opt,name=limits" json:"limits,omitempty"`
	Text        *string                 `protobuf:"bytes,5,opt,name=text" json:"text,omitempty"`               // The text of the query itself
	Automatic   *bool                   `protobuf:"varint,6,opt,name=automatic" json:"automatic,omitempty"`    // Is used for queries that are created by automatic systems (robots, jdbc driver, ...)
	Description *string                 `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"` // Description of the query, there can be any text
	// Specified settings for query's executor
	// Well known settings are:
	// "executor" - type of executor for this query
	ExecutionSettings map[string]string `protobuf:"bytes,10,rep,name=execution_settings,json=executionSettings" json:"execution_settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Syntax of the text
	// By default it is "yql", but additional syntax "pg" (PostreSQL SQL frontend) is supported as well
	Syntax        *QueryContent_QuerySyntax `protobuf:"varint,11,opt,name=syntax,enum=FederatedQuery.QueryContent_QuerySyntax" json:"syntax,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryContent) Reset() {
	*x = QueryContent{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryContent) ProtoMessage() {}

func (x *QueryContent) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryContent) GetType() QueryContent_QueryType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return QueryContent_QUERY_TYPE_UNSPECIFIED
}

func (x *QueryContent) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *QueryContent) GetAcl() *Acl {
	if x != nil {
		return x.Acl
	}
	return nil
}

func (x *QueryContent) GetLimits() *Limits {
	if x != nil {
		return x.Limits
	}
	return nil
}

func (x *QueryContent) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *QueryContent) GetAutomatic() bool {
	if x != nil && x.Automatic != nil {
		return *x.Automatic
	}
	return false
}

func (x *QueryContent) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *QueryContent) GetExecutionSettings() map[string]string {
	if x != nil {
		return x.ExecutionSettings
	}
	return nil
}

func (x *QueryContent) GetSyntax() QueryContent_QuerySyntax {
	if x != nil && x.Syntax != nil {
		return *x.Syntax
	}
	return QueryContent_QUERY_SYNTAX_UNSPECIFIED
}

func (x *QueryContent) SetType(v QueryContent_QueryType) {
	x.Type = &v
}

func (x *QueryContent) SetName(v string) {
	x.Name = &v
}

func (x *QueryContent) SetAcl(v *Acl) {
	x.Acl = v
}

func (x *QueryContent) SetLimits(v *Limits) {
	x.Limits = v
}

func (x *QueryContent) SetText(v string) {
	x.Text = &v
}

func (x *QueryContent) SetAutomatic(v bool) {
	x.Automatic = &v
}

func (x *QueryContent) SetDescription(v string) {
	x.Description = &v
}

func (x *QueryContent) SetExecutionSettings(v map[string]string) {
	x.ExecutionSettings = v
}

func (x *QueryContent) SetSyntax(v QueryContent_QuerySyntax) {
	x.Syntax = &v
}

func (x *QueryContent) HasType() bool {
	if x == nil {
		return false
	}
	return x.Type != nil
}

func (x *QueryContent) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *QueryContent) HasAcl() bool {
	if x == nil {
		return false
	}
	return x.Acl != nil
}

func (x *QueryContent) HasLimits() bool {
	if x == nil {
		return false
	}
	return x.Limits != nil
}

func (x *QueryContent) HasText() bool {
	if x == nil {
		return false
	}
	return x.Text != nil
}

func (x *QueryContent) HasAutomatic() bool {
	if x == nil {
		return false
	}
	return x.Automatic != nil
}

func (x *QueryContent) HasDescription() bool {
	if x == nil {
		return false
	}
	return x.Description != nil
}

func (x *QueryContent) HasSyntax() bool {
	if x == nil {
		return false
	}
	return x.Syntax != nil
}

func (x *QueryContent) ClearType() {
	x.Type = nil
}

func (x *QueryContent) ClearName() {
	x.Name = nil
}

func (x *QueryContent) ClearAcl() {
	x.Acl = nil
}

func (x *QueryContent) ClearLimits() {
	x.Limits = nil
}

func (x *QueryContent) ClearText() {
	x.Text = nil
}

func (x *QueryContent) ClearAutomatic() {
	x.Automatic = nil
}

func (x *QueryContent) ClearDescription() {
	x.Description = nil
}

func (x *QueryContent) ClearSyntax() {
	x.Syntax = nil
}

type QueryContent_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type        *QueryContent_QueryType
	Name        *string
	Acl         *Acl
	Limits      *Limits
	Text        *string
	Automatic   *bool
	Description *string
	// Specified settings for query's executor
	// Well known settings are:
	// "executor" - type of executor for this query
	ExecutionSettings map[string]string
	// Syntax of the text
	// By default it is "yql", but additional syntax "pg" (PostreSQL SQL frontend) is supported as well
	Syntax *QueryContent_QuerySyntax
}

func (b0 QueryContent_builder) Build() *QueryContent {
	m0 := &QueryContent{}
	b, x := &b0, m0
	_, _ = b, x
	x.Type = b.Type
	x.Name = b.Name
	x.Acl = b.Acl
	x.Limits = b.Limits
	x.Text = b.Text
	x.Automatic = b.Automatic
	x.Description = b.Description
	x.ExecutionSettings = b.ExecutionSettings
	x.Syntax = b.Syntax
	return m0
}

type CommonMeta struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Id            *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	CreatedBy     *string                `protobuf:"bytes,2,opt,name=created_by,json=createdBy" json:"created_by,omitempty"`
	ModifiedBy    *string                `protobuf:"bytes,3,opt,name=modified_by,json=modifiedBy" json:"modified_by,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	ModifiedAt    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=modified_at,json=modifiedAt" json:"modified_at,omitempty"`
	Revision      *int64                 `protobuf:"varint,6,opt,name=revision" json:"revision,omitempty"` // Entity version, increases with each change
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommonMeta) Reset() {
	*x = CommonMeta{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommonMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonMeta) ProtoMessage() {}

func (x *CommonMeta) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommonMeta) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *CommonMeta) GetCreatedBy() string {
	if x != nil && x.CreatedBy != nil {
		return *x.CreatedBy
	}
	return ""
}

func (x *CommonMeta) GetModifiedBy() string {
	if x != nil && x.ModifiedBy != nil {
		return *x.ModifiedBy
	}
	return ""
}

func (x *CommonMeta) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CommonMeta) GetModifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ModifiedAt
	}
	return nil
}

func (x *CommonMeta) GetRevision() int64 {
	if x != nil && x.Revision != nil {
		return *x.Revision
	}
	return 0
}

func (x *CommonMeta) SetId(v string) {
	x.Id = &v
}

func (x *CommonMeta) SetCreatedBy(v string) {
	x.CreatedBy = &v
}

func (x *CommonMeta) SetModifiedBy(v string) {
	x.ModifiedBy = &v
}

func (x *CommonMeta) SetCreatedAt(v *timestamppb.Timestamp) {
	x.CreatedAt = v
}

func (x *CommonMeta) SetModifiedAt(v *timestamppb.Timestamp) {
	x.ModifiedAt = v
}

func (x *CommonMeta) SetRevision(v int64) {
	x.Revision = &v
}

func (x *CommonMeta) HasId() bool {
	if x == nil {
		return false
	}
	return x.Id != nil
}

func (x *CommonMeta) HasCreatedBy() bool {
	if x == nil {
		return false
	}
	return x.CreatedBy != nil
}

func (x *CommonMeta) HasModifiedBy() bool {
	if x == nil {
		return false
	}
	return x.ModifiedBy != nil
}

func (x *CommonMeta) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.CreatedAt != nil
}

func (x *CommonMeta) HasModifiedAt() bool {
	if x == nil {
		return false
	}
	return x.ModifiedAt != nil
}

func (x *CommonMeta) HasRevision() bool {
	if x == nil {
		return false
	}
	return x.Revision != nil
}

func (x *CommonMeta) ClearId() {
	x.Id = nil
}

func (x *CommonMeta) ClearCreatedBy() {
	x.CreatedBy = nil
}

func (x *CommonMeta) ClearModifiedBy() {
	x.ModifiedBy = nil
}

func (x *CommonMeta) ClearCreatedAt() {
	x.CreatedAt = nil
}

func (x *CommonMeta) ClearModifiedAt() {
	x.ModifiedAt = nil
}

func (x *CommonMeta) ClearRevision() {
	x.Revision = nil
}

type CommonMeta_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id         *string
	CreatedBy  *string
	ModifiedBy *string
	CreatedAt  *timestamppb.Timestamp
	ModifiedAt *timestamppb.Timestamp
	Revision   *int64
}

func (b0 CommonMeta_builder) Build() *CommonMeta {
	m0 := &CommonMeta{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	x.CreatedBy = b.CreatedBy
	x.ModifiedBy = b.ModifiedBy
	x.CreatedAt = b.CreatedAt
	x.ModifiedAt = b.ModifiedAt
	x.Revision = b.Revision
	return m0
}

type QueryMeta struct {
	state  protoimpl.MessageState `protogen:"hybrid.v1"`
	Common *CommonMeta            `protobuf:"bytes,1,opt,name=common" json:"common,omitempty"`
	// Timeline (submitted_at <= started_at <= finished_at)
	//
	//	sumbitted_at
	//	           \ -> started_at
	//	                            \ -> finished_at
	SubmittedAt          *timestamppb.Timestamp   `protobuf:"bytes,14,opt,name=submitted_at,json=submittedAt" json:"submitted_at,omitempty"` // Time when the query was queued for execution
	StartedAt            *timestamppb.Timestamp   `protobuf:"bytes,2,opt,name=started_at,json=startedAt" json:"started_at,omitempty"`        // Start time of query execution
	FinishedAt           *timestamppb.Timestamp   `protobuf:"bytes,3,opt,name=finished_at,json=finishedAt" json:"finished_at,omitempty"`     // Query completition time
	ExecuteMode          *ExecuteMode             `protobuf:"varint,4,opt,name=execute_mode,json=executeMode,enum=FederatedQuery.ExecuteMode" json:"execute_mode,omitempty"`
	Status               *QueryMeta_ComputeStatus `protobuf:"varint,5,opt,name=status,enum=FederatedQuery.QueryMeta_ComputeStatus" json:"status,omitempty"`
	LastJobQueryRevision *int64                   `protobuf:"varint,6,opt,name=last_job_query_revision,json=lastJobQueryRevision" json:"last_job_query_revision,omitempty"`
	LastJobId            *string                  `protobuf:"bytes,7,opt,name=last_job_id,json=lastJobId" json:"last_job_id,omitempty"`
	ExpireAt             *timestamppb.Timestamp   `protobuf:"bytes,8,opt,name=expire_at,json=expireAt" json:"expire_at,omitempty"`
	ResultExpireAt       *timestamppb.Timestamp   `protobuf:"bytes,9,opt,name=result_expire_at,json=resultExpireAt" json:"result_expire_at,omitempty"`
	StartedBy            *string                  `protobuf:"bytes,10,opt,name=started_by,json=startedBy" json:"started_by,omitempty"`
	// Types that are valid to be assigned to Action:
	//
	//	*QueryMeta_AbortedBy
	//	*QueryMeta_PausedBy
	Action isQueryMeta_Action `protobuf_oneof:"action"`
	// One of the versions of this query has fully saved checkpoint.
	// If this flag is not set streaming disposition mode "from last checkpoint" can't be used.
	HasSavedCheckpoints *bool `protobuf:"varint,13,opt,name=has_saved_checkpoints,json=hasSavedCheckpoints" json:"has_saved_checkpoints,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *QueryMeta) Reset() {
	*x = QueryMeta{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMeta) ProtoMessage() {}

func (x *QueryMeta) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryMeta) GetCommon() *CommonMeta {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *QueryMeta) GetSubmittedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmittedAt
	}
	return nil
}

func (x *QueryMeta) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *QueryMeta) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

func (x *QueryMeta) GetExecuteMode() ExecuteMode {
	if x != nil && x.ExecuteMode != nil {
		return *x.ExecuteMode
	}
	return ExecuteMode_EXECUTE_MODE_UNSPECIFIED
}

func (x *QueryMeta) GetStatus() QueryMeta_ComputeStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return QueryMeta_COMPUTE_STATUS_UNSPECIFIED
}

func (x *QueryMeta) GetLastJobQueryRevision() int64 {
	if x != nil && x.LastJobQueryRevision != nil {
		return *x.LastJobQueryRevision
	}
	return 0
}

func (x *QueryMeta) GetLastJobId() string {
	if x != nil && x.LastJobId != nil {
		return *x.LastJobId
	}
	return ""
}

func (x *QueryMeta) GetExpireAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireAt
	}
	return nil
}

func (x *QueryMeta) GetResultExpireAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ResultExpireAt
	}
	return nil
}

func (x *QueryMeta) GetStartedBy() string {
	if x != nil && x.StartedBy != nil {
		return *x.StartedBy
	}
	return ""
}

func (x *QueryMeta) GetAction() isQueryMeta_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *QueryMeta) GetAbortedBy() string {
	if x != nil {
		if x, ok := x.Action.(*QueryMeta_AbortedBy); ok {
			return x.AbortedBy
		}
	}
	return ""
}

func (x *QueryMeta) GetPausedBy() string {
	if x != nil {
		if x, ok := x.Action.(*QueryMeta_PausedBy); ok {
			return x.PausedBy
		}
	}
	return ""
}

func (x *QueryMeta) GetHasSavedCheckpoints() bool {
	if x != nil && x.HasSavedCheckpoints != nil {
		return *x.HasSavedCheckpoints
	}
	return false
}

func (x *QueryMeta) SetCommon(v *CommonMeta) {
	x.Common = v
}

func (x *QueryMeta) SetSubmittedAt(v *timestamppb.Timestamp) {
	x.SubmittedAt = v
}

func (x *QueryMeta) SetStartedAt(v *timestamppb.Timestamp) {
	x.StartedAt = v
}

func (x *QueryMeta) SetFinishedAt(v *timestamppb.Timestamp) {
	x.FinishedAt = v
}

func (x *QueryMeta) SetExecuteMode(v ExecuteMode) {
	x.ExecuteMode = &v
}

func (x *QueryMeta) SetStatus(v QueryMeta_ComputeStatus) {
	x.Status = &v
}

func (x *QueryMeta) SetLastJobQueryRevision(v int64) {
	x.LastJobQueryRevision = &v
}

func (x *QueryMeta) SetLastJobId(v string) {
	x.LastJobId = &v
}

func (x *QueryMeta) SetExpireAt(v *timestamppb.Timestamp) {
	x.ExpireAt = v
}

func (x *QueryMeta) SetResultExpireAt(v *timestamppb.Timestamp) {
	x.ResultExpireAt = v
}

func (x *QueryMeta) SetStartedBy(v string) {
	x.StartedBy = &v
}

func (x *QueryMeta) SetAbortedBy(v string) {
	x.Action = &QueryMeta_AbortedBy{v}
}

func (x *QueryMeta) SetPausedBy(v string) {
	x.Action = &QueryMeta_PausedBy{v}
}

func (x *QueryMeta) SetHasSavedCheckpoints(v bool) {
	x.HasSavedCheckpoints = &v
}

func (x *QueryMeta) HasCommon() bool {
	if x == nil {
		return false
	}
	return x.Common != nil
}

func (x *QueryMeta) HasSubmittedAt() bool {
	if x == nil {
		return false
	}
	return x.SubmittedAt != nil
}

func (x *QueryMeta) HasStartedAt() bool {
	if x == nil {
		return false
	}
	return x.StartedAt != nil
}

func (x *QueryMeta) HasFinishedAt() bool {
	if x == nil {
		return false
	}
	return x.FinishedAt != nil
}

func (x *QueryMeta) HasExecuteMode() bool {
	if x == nil {
		return false
	}
	return x.ExecuteMode != nil
}

func (x *QueryMeta) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *QueryMeta) HasLastJobQueryRevision() bool {
	if x == nil {
		return false
	}
	return x.LastJobQueryRevision != nil
}

func (x *QueryMeta) HasLastJobId() bool {
	if x == nil {
		return false
	}
	return x.LastJobId != nil
}

func (x *QueryMeta) HasExpireAt() bool {
	if x == nil {
		return false
	}
	return x.ExpireAt != nil
}

func (x *QueryMeta) HasResultExpireAt() bool {
	if x == nil {
		return false
	}
	return x.ResultExpireAt != nil
}

func (x *QueryMeta) HasStartedBy() bool {
	if x == nil {
		return false
	}
	return x.StartedBy != nil
}

func (x *QueryMeta) HasAction() bool {
	if x == nil {
		return false
	}
	return x.Action != nil
}

func (x *QueryMeta) HasAbortedBy() bool {
	if x == nil {
		return false
	}
	_, ok := x.Action.(*QueryMeta_AbortedBy)
	return ok
}

func (x *QueryMeta) HasPausedBy() bool {
	if x == nil {
		return false
	}
	_, ok := x.Action.(*QueryMeta_PausedBy)
	return ok
}

func (x *QueryMeta) HasHasSavedCheckpoints() bool {
	if x == nil {
		return false
	}
	return x.HasSavedCheckpoints != nil
}

func (x *QueryMeta) ClearCommon() {
	x.Common = nil
}

func (x *QueryMeta) ClearSubmittedAt() {
	x.SubmittedAt = nil
}

func (x *QueryMeta) ClearStartedAt() {
	x.StartedAt = nil
}

func (x *QueryMeta) ClearFinishedAt() {
	x.FinishedAt = nil
}

func (x *QueryMeta) ClearExecuteMode() {
	x.ExecuteMode = nil
}

func (x *QueryMeta) ClearStatus() {
	x.Status = nil
}

func (x *QueryMeta) ClearLastJobQueryRevision() {
	x.LastJobQueryRevision = nil
}

func (x *QueryMeta) ClearLastJobId() {
	x.LastJobId = nil
}

func (x *QueryMeta) ClearExpireAt() {
	x.ExpireAt = nil
}

func (x *QueryMeta) ClearResultExpireAt() {
	x.ResultExpireAt = nil
}

func (x *QueryMeta) ClearStartedBy() {
	x.StartedBy = nil
}

func (x *QueryMeta) ClearAction() {
	x.Action = nil
}

func (x *QueryMeta) ClearAbortedBy() {
	if _, ok := x.Action.(*QueryMeta_AbortedBy); ok {
		x.Action = nil
	}
}

func (x *QueryMeta) ClearPausedBy() {
	if _, ok := x.Action.(*QueryMeta_PausedBy); ok {
		x.Action = nil
	}
}

func (x *QueryMeta) ClearHasSavedCheckpoints() {
	x.HasSavedCheckpoints = nil
}

const QueryMeta_Action_not_set_case case_QueryMeta_Action = 0
const QueryMeta_AbortedBy_case case_QueryMeta_Action = 11
const QueryMeta_PausedBy_case case_QueryMeta_Action = 12

func (x *QueryMeta) WhichAction() case_QueryMeta_Action {
	if x == nil {
		return QueryMeta_Action_not_set_case
	}
	switch x.Action.(type) {
	case *QueryMeta_AbortedBy:
		return QueryMeta_AbortedBy_case
	case *QueryMeta_PausedBy:
		return QueryMeta_PausedBy_case
	default:
		return QueryMeta_Action_not_set_case
	}
}

type QueryMeta_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Common *CommonMeta
	// Timeline (submitted_at <= started_at <= finished_at)
	//
	//	sumbitted_at
	//	           \ -> started_at
	//	                            \ -> finished_at
	SubmittedAt          *timestamppb.Timestamp
	StartedAt            *timestamppb.Timestamp
	FinishedAt           *timestamppb.Timestamp
	ExecuteMode          *ExecuteMode
	Status               *QueryMeta_ComputeStatus
	LastJobQueryRevision *int64
	LastJobId            *string
	ExpireAt             *timestamppb.Timestamp
	ResultExpireAt       *timestamppb.Timestamp
	StartedBy            *string
	// Fields of oneof Action:
	AbortedBy *string
	PausedBy  *string
	// -- end of Action
	// One of the versions of this query has fully saved checkpoint.
	// If this flag is not set streaming disposition mode "from last checkpoint" can't be used.
	HasSavedCheckpoints *bool
}

func (b0 QueryMeta_builder) Build() *QueryMeta {
	m0 := &QueryMeta{}
	b, x := &b0, m0
	_, _ = b, x
	x.Common = b.Common
	x.SubmittedAt = b.SubmittedAt
	x.StartedAt = b.StartedAt
	x.FinishedAt = b.FinishedAt
	x.ExecuteMode = b.ExecuteMode
	x.Status = b.Status
	x.LastJobQueryRevision = b.LastJobQueryRevision
	x.LastJobId = b.LastJobId
	x.ExpireAt = b.ExpireAt
	x.ResultExpireAt = b.ResultExpireAt
	x.StartedBy = b.StartedBy
	if b.AbortedBy != nil {
		x.Action = &QueryMeta_AbortedBy{*b.AbortedBy}
	}
	if b.PausedBy != nil {
		x.Action = &QueryMeta_PausedBy{*b.PausedBy}
	}
	x.HasSavedCheckpoints = b.HasSavedCheckpoints
	return m0
}

type case_QueryMeta_Action protoreflect.FieldNumber

func (x case_QueryMeta_Action) String() string {
	md := file_draft_protos_ydb_federated_query_proto_msgTypes[5].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isQueryMeta_Action interface {
	isQueryMeta_Action()
}

type QueryMeta_AbortedBy struct {
	AbortedBy string `protobuf:"bytes,11,opt,name=aborted_by,json=abortedBy,oneof"`
}

type QueryMeta_PausedBy struct {
	PausedBy string `protobuf:"bytes,12,opt,name=paused_by,json=pausedBy,oneof"`
}

func (*QueryMeta_AbortedBy) isQueryMeta_Action() {}

func (*QueryMeta_PausedBy) isQueryMeta_Action() {}

type BriefQuery struct {
	state         protoimpl.MessageState  `protogen:"hybrid.v1"`
	Type          *QueryContent_QueryType `protobuf:"varint,1,opt,name=type,enum=FederatedQuery.QueryContent_QueryType" json:"type,omitempty"`
	Name          *string                 `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Meta          *QueryMeta              `protobuf:"bytes,3,opt,name=meta" json:"meta,omitempty"`
	Visibility    *Acl_Visibility         `protobuf:"varint,4,opt,name=visibility,enum=FederatedQuery.Acl_Visibility" json:"visibility,omitempty"`
	Automatic     *bool                   `protobuf:"varint,5,opt,name=automatic" json:"automatic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BriefQuery) Reset() {
	*x = BriefQuery{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BriefQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BriefQuery) ProtoMessage() {}

func (x *BriefQuery) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BriefQuery) GetType() QueryContent_QueryType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return QueryContent_QUERY_TYPE_UNSPECIFIED
}

func (x *BriefQuery) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BriefQuery) GetMeta() *QueryMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *BriefQuery) GetVisibility() Acl_Visibility {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return Acl_VISIBILITY_UNSPECIFIED
}

func (x *BriefQuery) GetAutomatic() bool {
	if x != nil && x.Automatic != nil {
		return *x.Automatic
	}
	return false
}

func (x *BriefQuery) SetType(v QueryContent_QueryType) {
	x.Type = &v
}

func (x *BriefQuery) SetName(v string) {
	x.Name = &v
}

func (x *BriefQuery) SetMeta(v *QueryMeta) {
	x.Meta = v
}

func (x *BriefQuery) SetVisibility(v Acl_Visibility) {
	x.Visibility = &v
}

func (x *BriefQuery) SetAutomatic(v bool) {
	x.Automatic = &v
}

func (x *BriefQuery) HasType() bool {
	if x == nil {
		return false
	}
	return x.Type != nil
}

func (x *BriefQuery) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *BriefQuery) HasMeta() bool {
	if x == nil {
		return false
	}
	return x.Meta != nil
}

func (x *BriefQuery) HasVisibility() bool {
	if x == nil {
		return false
	}
	return x.Visibility != nil
}

func (x *BriefQuery) HasAutomatic() bool {
	if x == nil {
		return false
	}
	return x.Automatic != nil
}

func (x *BriefQuery) ClearType() {
	x.Type = nil
}

func (x *BriefQuery) ClearName() {
	x.Name = nil
}

func (x *BriefQuery) ClearMeta() {
	x.Meta = nil
}

func (x *BriefQuery) ClearVisibility() {
	x.Visibility = nil
}

func (x *BriefQuery) ClearAutomatic() {
	x.Automatic = nil
}

type BriefQuery_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type       *QueryContent_QueryType
	Name       *string
	Meta       *QueryMeta
	Visibility *Acl_Visibility
	Automatic  *bool
}

func (b0 BriefQuery_builder) Build() *BriefQuery {
	m0 := &BriefQuery{}
	b, x := &b0, m0
	_, _ = b, x
	x.Type = b.Type
	x.Name = b.Name
	x.Meta = b.Meta
	x.Visibility = b.Visibility
	x.Automatic = b.Automatic
	return m0
}

type QueryPlan struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Json          *string                `protobuf:"bytes,1,opt,name=json" json:"json,omitempty"` // No validation because generated on server side
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPlan) Reset() {
	*x = QueryPlan{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPlan) ProtoMessage() {}

func (x *QueryPlan) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryPlan) GetJson() string {
	if x != nil && x.Json != nil {
		return *x.Json
	}
	return ""
}

func (x *QueryPlan) SetJson(v string) {
	x.Json = &v
}

func (x *QueryPlan) HasJson() bool {
	if x == nil {
		return false
	}
	return x.Json != nil
}

func (x *QueryPlan) ClearJson() {
	x.Json = nil
}

type QueryPlan_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Json *string
}

func (b0 QueryPlan_builder) Build() *QueryPlan {
	m0 := &QueryPlan{}
	b, x := &b0, m0
	_, _ = b, x
	x.Json = b.Json
	return m0
}

type QueryAst struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Data          *string                `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAst) Reset() {
	*x = QueryAst{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAst) ProtoMessage() {}

func (x *QueryAst) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryAst) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

func (x *QueryAst) SetData(v string) {
	x.Data = &v
}

func (x *QueryAst) HasData() bool {
	if x == nil {
		return false
	}
	return x.Data != nil
}

func (x *QueryAst) ClearData() {
	x.Data = nil
}

type QueryAst_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Data *string
}

func (b0 QueryAst_builder) Build() *QueryAst {
	m0 := &QueryAst{}
	b, x := &b0, m0
	_, _ = b, x
	x.Data = b.Data
	return m0
}

type ResultSetMeta struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Column        []*Ydb.Column          `protobuf:"bytes,1,rep,name=column" json:"column,omitempty"`
	RowsCount     *int64                 `protobuf:"varint,2,opt,name=rows_count,json=rowsCount" json:"rows_count,omitempty"`
	Truncated     *bool                  `protobuf:"varint,3,opt,name=truncated" json:"truncated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResultSetMeta) Reset() {
	*x = ResultSetMeta{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResultSetMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultSetMeta) ProtoMessage() {}

func (x *ResultSetMeta) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResultSetMeta) GetColumn() []*Ydb.Column {
	if x != nil {
		return x.Column
	}
	return nil
}

func (x *ResultSetMeta) GetRowsCount() int64 {
	if x != nil && x.RowsCount != nil {
		return *x.RowsCount
	}
	return 0
}

func (x *ResultSetMeta) GetTruncated() bool {
	if x != nil && x.Truncated != nil {
		return *x.Truncated
	}
	return false
}

func (x *ResultSetMeta) SetColumn(v []*Ydb.Column) {
	x.Column = v
}

func (x *ResultSetMeta) SetRowsCount(v int64) {
	x.RowsCount = &v
}

func (x *ResultSetMeta) SetTruncated(v bool) {
	x.Truncated = &v
}

func (x *ResultSetMeta) HasRowsCount() bool {
	if x == nil {
		return false
	}
	return x.RowsCount != nil
}

func (x *ResultSetMeta) HasTruncated() bool {
	if x == nil {
		return false
	}
	return x.Truncated != nil
}

func (x *ResultSetMeta) ClearRowsCount() {
	x.RowsCount = nil
}

func (x *ResultSetMeta) ClearTruncated() {
	x.Truncated = nil
}

type ResultSetMeta_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Column    []*Ydb.Column
	RowsCount *int64
	Truncated *bool
}

func (b0 ResultSetMeta_builder) Build() *ResultSetMeta {
	m0 := &ResultSetMeta{}
	b, x := &b0, m0
	_, _ = b, x
	x.Column = b.Column
	x.RowsCount = b.RowsCount
	x.Truncated = b.Truncated
	return m0
}

type Query struct {
	state          protoimpl.MessageState    `protogen:"hybrid.v1"`
	Meta           *QueryMeta                `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	Content        *QueryContent             `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	Plan           *QueryPlan                `protobuf:"bytes,3,opt,name=plan" json:"plan,omitempty"`
	Issue          []*Ydb_Issue.IssueMessage `protobuf:"bytes,4,rep,name=issue" json:"issue,omitempty"`
	TransientIssue []*Ydb_Issue.IssueMessage `protobuf:"bytes,5,rep,name=transient_issue,json=transientIssue" json:"transient_issue,omitempty"`
	Statistics     *QueryStatistics          `protobuf:"bytes,6,opt,name=statistics" json:"statistics,omitempty"`
	ResultSetMeta  []*ResultSetMeta          `protobuf:"bytes,7,rep,name=result_set_meta,json=resultSetMeta" json:"result_set_meta,omitempty"`
	Ast            *QueryAst                 `protobuf:"bytes,8,opt,name=ast" json:"ast,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Query) Reset() {
	*x = Query{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Query) GetMeta() *QueryMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Query) GetContent() *QueryContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Query) GetPlan() *QueryPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

func (x *Query) GetIssue() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issue
	}
	return nil
}

func (x *Query) GetTransientIssue() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.TransientIssue
	}
	return nil
}

func (x *Query) GetStatistics() *QueryStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *Query) GetResultSetMeta() []*ResultSetMeta {
	if x != nil {
		return x.ResultSetMeta
	}
	return nil
}

func (x *Query) GetAst() *QueryAst {
	if x != nil {
		return x.Ast
	}
	return nil
}

func (x *Query) SetMeta(v *QueryMeta) {
	x.Meta = v
}

func (x *Query) SetContent(v *QueryContent) {
	x.Content = v
}

func (x *Query) SetPlan(v *QueryPlan) {
	x.Plan = v
}

func (x *Query) SetIssue(v []*Ydb_Issue.IssueMessage) {
	x.Issue = v
}

func (x *Query) SetTransientIssue(v []*Ydb_Issue.IssueMessage) {
	x.TransientIssue = v
}

func (x *Query) SetStatistics(v *QueryStatistics) {
	x.Statistics = v
}

func (x *Query) SetResultSetMeta(v []*ResultSetMeta) {
	x.ResultSetMeta = v
}

func (x *Query) SetAst(v *QueryAst) {
	x.Ast = v
}

func (x *Query) HasMeta() bool {
	if x == nil {
		return false
	}
	return x.Meta != nil
}

func (x *Query) HasContent() bool {
	if x == nil {
		return false
	}
	return x.Content != nil
}

func (x *Query) HasPlan() bool {
	if x == nil {
		return false
	}
	return x.Plan != nil
}

func (x *Query) HasStatistics() bool {
	if x == nil {
		return false
	}
	return x.Statistics != nil
}

func (x *Query) HasAst() bool {
	if x == nil {
		return false
	}
	return x.Ast != nil
}

func (x *Query) ClearMeta() {
	x.Meta = nil
}

func (x *Query) ClearContent() {
	x.Content = nil
}

func (x *Query) ClearPlan() {
	x.Plan = nil
}

func (x *Query) ClearStatistics() {
	x.Statistics = nil
}

func (x *Query) ClearAst() {
	x.Ast = nil
}

type Query_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Meta           *QueryMeta
	Content        *QueryContent
	Plan           *QueryPlan
	Issue          []*Ydb_Issue.IssueMessage
	TransientIssue []*Ydb_Issue.IssueMessage
	Statistics     *QueryStatistics
	ResultSetMeta  []*ResultSetMeta
	Ast            *QueryAst
}

func (b0 Query_builder) Build() *Query {
	m0 := &Query{}
	b, x := &b0, m0
	_, _ = b, x
	x.Meta = b.Meta
	x.Content = b.Content
	x.Plan = b.Plan
	x.Issue = b.Issue
	x.TransientIssue = b.TransientIssue
	x.Statistics = b.Statistics
	x.ResultSetMeta = b.ResultSetMeta
	x.Ast = b.Ast
	return m0
}

type QueryStatistics struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Json          *string                `protobuf:"bytes,1,opt,name=json" json:"json,omitempty"` // No validation because generated on server side
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryStatistics) Reset() {
	*x = QueryStatistics{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStatistics) ProtoMessage() {}

func (x *QueryStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryStatistics) GetJson() string {
	if x != nil && x.Json != nil {
		return *x.Json
	}
	return ""
}

func (x *QueryStatistics) SetJson(v string) {
	x.Json = &v
}

func (x *QueryStatistics) HasJson() bool {
	if x == nil {
		return false
	}
	return x.Json != nil
}

func (x *QueryStatistics) ClearJson() {
	x.Json = nil
}

type QueryStatistics_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Json *string
}

func (b0 QueryStatistics_builder) Build() *QueryStatistics {
	m0 := &QueryStatistics{}
	b, x := &b0, m0
	_, _ = b, x
	x.Json = b.Json
	return m0
}

// Create a new query
type CreateQueryRequest struct {
	state           protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	Content         *QueryContent                   `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	ExecuteMode     *ExecuteMode                    `protobuf:"varint,3,opt,name=execute_mode,json=executeMode,enum=FederatedQuery.ExecuteMode" json:"execute_mode,omitempty"`
	Disposition     *StreamingDisposition           `protobuf:"bytes,4,opt,name=disposition" json:"disposition,omitempty"`
	IdempotencyKey  *string                         `protobuf:"bytes,5,opt,name=idempotency_key,json=idempotencyKey" json:"idempotency_key,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateQueryRequest) Reset() {
	*x = CreateQueryRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueryRequest) ProtoMessage() {}

func (x *CreateQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateQueryRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *CreateQueryRequest) GetContent() *QueryContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *CreateQueryRequest) GetExecuteMode() ExecuteMode {
	if x != nil && x.ExecuteMode != nil {
		return *x.ExecuteMode
	}
	return ExecuteMode_EXECUTE_MODE_UNSPECIFIED
}

func (x *CreateQueryRequest) GetDisposition() *StreamingDisposition {
	if x != nil {
		return x.Disposition
	}
	return nil
}

func (x *CreateQueryRequest) GetIdempotencyKey() string {
	if x != nil && x.IdempotencyKey != nil {
		return *x.IdempotencyKey
	}
	return ""
}

func (x *CreateQueryRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *CreateQueryRequest) SetContent(v *QueryContent) {
	x.Content = v
}

func (x *CreateQueryRequest) SetExecuteMode(v ExecuteMode) {
	x.ExecuteMode = &v
}

func (x *CreateQueryRequest) SetDisposition(v *StreamingDisposition) {
	x.Disposition = v
}

func (x *CreateQueryRequest) SetIdempotencyKey(v string) {
	x.IdempotencyKey = &v
}

func (x *CreateQueryRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *CreateQueryRequest) HasContent() bool {
	if x == nil {
		return false
	}
	return x.Content != nil
}

func (x *CreateQueryRequest) HasExecuteMode() bool {
	if x == nil {
		return false
	}
	return x.ExecuteMode != nil
}

func (x *CreateQueryRequest) HasDisposition() bool {
	if x == nil {
		return false
	}
	return x.Disposition != nil
}

func (x *CreateQueryRequest) HasIdempotencyKey() bool {
	if x == nil {
		return false
	}
	return x.IdempotencyKey != nil
}

func (x *CreateQueryRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *CreateQueryRequest) ClearContent() {
	x.Content = nil
}

func (x *CreateQueryRequest) ClearExecuteMode() {
	x.ExecuteMode = nil
}

func (x *CreateQueryRequest) ClearDisposition() {
	x.Disposition = nil
}

func (x *CreateQueryRequest) ClearIdempotencyKey() {
	x.IdempotencyKey = nil
}

type CreateQueryRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	Content         *QueryContent
	ExecuteMode     *ExecuteMode
	Disposition     *StreamingDisposition
	IdempotencyKey  *string
}

func (b0 CreateQueryRequest_builder) Build() *CreateQueryRequest {
	m0 := &CreateQueryRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.Content = b.Content
	x.ExecuteMode = b.ExecuteMode
	x.Disposition = b.Disposition
	x.IdempotencyKey = b.IdempotencyKey
	return m0
}

type CreateQueryResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // CreateQueryResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateQueryResponse) Reset() {
	*x = CreateQueryResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueryResponse) ProtoMessage() {}

func (x *CreateQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateQueryResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *CreateQueryResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *CreateQueryResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *CreateQueryResponse) ClearOperation() {
	x.Operation = nil
}

type CreateQueryResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 CreateQueryResponse_builder) Build() *CreateQueryResponse {
	m0 := &CreateQueryResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type CreateQueryResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	QueryId       *string                `protobuf:"bytes,1,opt,name=query_id,json=queryId" json:"query_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateQueryResult) Reset() {
	*x = CreateQueryResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueryResult) ProtoMessage() {}

func (x *CreateQueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateQueryResult) GetQueryId() string {
	if x != nil && x.QueryId != nil {
		return *x.QueryId
	}
	return ""
}

func (x *CreateQueryResult) SetQueryId(v string) {
	x.QueryId = &v
}

func (x *CreateQueryResult) HasQueryId() bool {
	if x == nil {
		return false
	}
	return x.QueryId != nil
}

func (x *CreateQueryResult) ClearQueryId() {
	x.QueryId = nil
}

type CreateQueryResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	QueryId *string
}

func (b0 CreateQueryResult_builder) Build() *CreateQueryResult {
	m0 := &CreateQueryResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.QueryId = b.QueryId
	return m0
}

// Getting brief information about queries
type ListQueriesRequest struct {
	state           protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	PageToken       *string                         `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Limit           *int32                          `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Filter          *ListQueriesRequest_Filter      `protobuf:"bytes,4,opt,name=filter" json:"filter,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListQueriesRequest) Reset() {
	*x = ListQueriesRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueriesRequest) ProtoMessage() {}

func (x *ListQueriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListQueriesRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *ListQueriesRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListQueriesRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ListQueriesRequest) GetFilter() *ListQueriesRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListQueriesRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *ListQueriesRequest) SetPageToken(v string) {
	x.PageToken = &v
}

func (x *ListQueriesRequest) SetLimit(v int32) {
	x.Limit = &v
}

func (x *ListQueriesRequest) SetFilter(v *ListQueriesRequest_Filter) {
	x.Filter = v
}

func (x *ListQueriesRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *ListQueriesRequest) HasPageToken() bool {
	if x == nil {
		return false
	}
	return x.PageToken != nil
}

func (x *ListQueriesRequest) HasLimit() bool {
	if x == nil {
		return false
	}
	return x.Limit != nil
}

func (x *ListQueriesRequest) HasFilter() bool {
	if x == nil {
		return false
	}
	return x.Filter != nil
}

func (x *ListQueriesRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *ListQueriesRequest) ClearPageToken() {
	x.PageToken = nil
}

func (x *ListQueriesRequest) ClearLimit() {
	x.Limit = nil
}

func (x *ListQueriesRequest) ClearFilter() {
	x.Filter = nil
}

type ListQueriesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	PageToken       *string
	Limit           *int32
	Filter          *ListQueriesRequest_Filter
}

func (b0 ListQueriesRequest_builder) Build() *ListQueriesRequest {
	m0 := &ListQueriesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.PageToken = b.PageToken
	x.Limit = b.Limit
	x.Filter = b.Filter
	return m0
}

type ListQueriesResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // ListQueriesResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListQueriesResponse) Reset() {
	*x = ListQueriesResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueriesResponse) ProtoMessage() {}

func (x *ListQueriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListQueriesResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ListQueriesResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *ListQueriesResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *ListQueriesResponse) ClearOperation() {
	x.Operation = nil
}

type ListQueriesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 ListQueriesResponse_builder) Build() *ListQueriesResponse {
	m0 := &ListQueriesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type ListQueriesResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Query         []*BriefQuery          `protobuf:"bytes,1,rep,name=query" json:"query,omitempty"`
	NextPageToken *string                `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListQueriesResult) Reset() {
	*x = ListQueriesResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueriesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueriesResult) ProtoMessage() {}

func (x *ListQueriesResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListQueriesResult) GetQuery() []*BriefQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListQueriesResult) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *ListQueriesResult) SetQuery(v []*BriefQuery) {
	x.Query = v
}

func (x *ListQueriesResult) SetNextPageToken(v string) {
	x.NextPageToken = &v
}

func (x *ListQueriesResult) HasNextPageToken() bool {
	if x == nil {
		return false
	}
	return x.NextPageToken != nil
}

func (x *ListQueriesResult) ClearNextPageToken() {
	x.NextPageToken = nil
}

type ListQueriesResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Query         []*BriefQuery
	NextPageToken *string
}

func (b0 ListQueriesResult_builder) Build() *ListQueriesResult {
	m0 := &ListQueriesResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.Query = b.Query
	x.NextPageToken = b.NextPageToken
	return m0
}

// Getting complete information about the query
type DescribeQueryRequest struct {
	state           protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	QueryId         *string                         `protobuf:"bytes,2,opt,name=query_id,json=queryId" json:"query_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DescribeQueryRequest) Reset() {
	*x = DescribeQueryRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeQueryRequest) ProtoMessage() {}

func (x *DescribeQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeQueryRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *DescribeQueryRequest) GetQueryId() string {
	if x != nil && x.QueryId != nil {
		return *x.QueryId
	}
	return ""
}

func (x *DescribeQueryRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *DescribeQueryRequest) SetQueryId(v string) {
	x.QueryId = &v
}

func (x *DescribeQueryRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *DescribeQueryRequest) HasQueryId() bool {
	if x == nil {
		return false
	}
	return x.QueryId != nil
}

func (x *DescribeQueryRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *DescribeQueryRequest) ClearQueryId() {
	x.QueryId = nil
}

type DescribeQueryRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	QueryId         *string
}

func (b0 DescribeQueryRequest_builder) Build() *DescribeQueryRequest {
	m0 := &DescribeQueryRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.QueryId = b.QueryId
	return m0
}

type DescribeQueryResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // DescribeQueryResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeQueryResponse) Reset() {
	*x = DescribeQueryResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeQueryResponse) ProtoMessage() {}

func (x *DescribeQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeQueryResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *DescribeQueryResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *DescribeQueryResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *DescribeQueryResponse) ClearOperation() {
	x.Operation = nil
}

type DescribeQueryResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 DescribeQueryResponse_builder) Build() *DescribeQueryResponse {
	m0 := &DescribeQueryResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type DescribeQueryResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Query         *Query                 `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeQueryResult) Reset() {
	*x = DescribeQueryResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeQueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeQueryResult) ProtoMessage() {}

func (x *DescribeQueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeQueryResult) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *DescribeQueryResult) SetQuery(v *Query) {
	x.Query = v
}

func (x *DescribeQueryResult) HasQuery() bool {
	if x == nil {
		return false
	}
	return x.Query != nil
}

func (x *DescribeQueryResult) ClearQuery() {
	x.Query = nil
}

type DescribeQueryResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Query *Query
}

func (b0 DescribeQueryResult_builder) Build() *DescribeQueryResult {
	m0 := &DescribeQueryResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.Query = b.Query
	return m0
}

// Getting status of the query
type GetQueryStatusRequest struct {
	state           protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	QueryId         *string                         `protobuf:"bytes,2,opt,name=query_id,json=queryId" json:"query_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetQueryStatusRequest) Reset() {
	*x = GetQueryStatusRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueryStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryStatusRequest) ProtoMessage() {}

func (x *GetQueryStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetQueryStatusRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *GetQueryStatusRequest) GetQueryId() string {
	if x != nil && x.QueryId != nil {
		return *x.QueryId
	}
	return ""
}

func (x *GetQueryStatusRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *GetQueryStatusRequest) SetQueryId(v string) {
	x.QueryId = &v
}

func (x *GetQueryStatusRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *GetQueryStatusRequest) HasQueryId() bool {
	if x == nil {
		return false
	}
	return x.QueryId != nil
}

func (x *GetQueryStatusRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *GetQueryStatusRequest) ClearQueryId() {
	x.QueryId = nil
}

type GetQueryStatusRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	QueryId         *string
}

func (b0 GetQueryStatusRequest_builder) Build() *GetQueryStatusRequest {
	m0 := &GetQueryStatusRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.QueryId = b.QueryId
	return m0
}

type GetQueryStatusResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // GetQueryStatusResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueryStatusResponse) Reset() {
	*x = GetQueryStatusResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueryStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryStatusResponse) ProtoMessage() {}

func (x *GetQueryStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetQueryStatusResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *GetQueryStatusResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *GetQueryStatusResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *GetQueryStatusResponse) ClearOperation() {
	x.Operation = nil
}

type GetQueryStatusResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 GetQueryStatusResponse_builder) Build() *GetQueryStatusResponse {
	m0 := &GetQueryStatusResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type GetQueryStatusResult struct {
	state         protoimpl.MessageState   `protogen:"hybrid.v1"`
	Status        *QueryMeta_ComputeStatus `protobuf:"varint,1,opt,name=status,enum=FederatedQuery.QueryMeta_ComputeStatus" json:"status,omitempty"`
	MetaRevision  *int64                   `protobuf:"varint,2,opt,name=meta_revision,json=metaRevision" json:"meta_revision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueryStatusResult) Reset() {
	*x = GetQueryStatusResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueryStatusResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryStatusResult) ProtoMessage() {}

func (x *GetQueryStatusResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetQueryStatusResult) GetStatus() QueryMeta_ComputeStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return QueryMeta_COMPUTE_STATUS_UNSPECIFIED
}

func (x *GetQueryStatusResult) GetMetaRevision() int64 {
	if x != nil && x.MetaRevision != nil {
		return *x.MetaRevision
	}
	return 0
}

func (x *GetQueryStatusResult) SetStatus(v QueryMeta_ComputeStatus) {
	x.Status = &v
}

func (x *GetQueryStatusResult) SetMetaRevision(v int64) {
	x.MetaRevision = &v
}

func (x *GetQueryStatusResult) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *GetQueryStatusResult) HasMetaRevision() bool {
	if x == nil {
		return false
	}
	return x.MetaRevision != nil
}

func (x *GetQueryStatusResult) ClearStatus() {
	x.Status = nil
}

func (x *GetQueryStatusResult) ClearMetaRevision() {
	x.MetaRevision = nil
}

type GetQueryStatusResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status       *QueryMeta_ComputeStatus
	MetaRevision *int64
}

func (b0 GetQueryStatusResult_builder) Build() *GetQueryStatusResult {
	m0 := &GetQueryStatusResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.Status = b.Status
	x.MetaRevision = b.MetaRevision
	return m0
}

// Complete removal of query. Recovery of the query after this operation is not possible
type DeleteQueryRequest struct {
	state            protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams  *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	QueryId          *string                         `protobuf:"bytes,2,opt,name=query_id,json=queryId" json:"query_id,omitempty"`
	PreviousRevision *int64                          `protobuf:"varint,3,opt,name=previous_revision,json=previousRevision" json:"previous_revision,omitempty"`
	IdempotencyKey   *string                         `protobuf:"bytes,4,opt,name=idempotency_key,json=idempotencyKey" json:"idempotency_key,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeleteQueryRequest) Reset() {
	*x = DeleteQueryRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQueryRequest) ProtoMessage() {}

func (x *DeleteQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteQueryRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *DeleteQueryRequest) GetQueryId() string {
	if x != nil && x.QueryId != nil {
		return *x.QueryId
	}
	return ""
}

func (x *DeleteQueryRequest) GetPreviousRevision() int64 {
	if x != nil && x.PreviousRevision != nil {
		return *x.PreviousRevision
	}
	return 0
}

func (x *DeleteQueryRequest) GetIdempotencyKey() string {
	if x != nil && x.IdempotencyKey != nil {
		return *x.IdempotencyKey
	}
	return ""
}

func (x *DeleteQueryRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *DeleteQueryRequest) SetQueryId(v string) {
	x.QueryId = &v
}

func (x *DeleteQueryRequest) SetPreviousRevision(v int64) {
	x.PreviousRevision = &v
}

func (x *DeleteQueryRequest) SetIdempotencyKey(v string) {
	x.IdempotencyKey = &v
}

func (x *DeleteQueryRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *DeleteQueryRequest) HasQueryId() bool {
	if x == nil {
		return false
	}
	return x.QueryId != nil
}

func (x *DeleteQueryRequest) HasPreviousRevision() bool {
	if x == nil {
		return false
	}
	return x.PreviousRevision != nil
}

func (x *DeleteQueryRequest) HasIdempotencyKey() bool {
	if x == nil {
		return false
	}
	return x.IdempotencyKey != nil
}

func (x *DeleteQueryRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *DeleteQueryRequest) ClearQueryId() {
	x.QueryId = nil
}

func (x *DeleteQueryRequest) ClearPreviousRevision() {
	x.PreviousRevision = nil
}

func (x *DeleteQueryRequest) ClearIdempotencyKey() {
	x.IdempotencyKey = nil
}

type DeleteQueryRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams  *Ydb_Operations.OperationParams
	QueryId          *string
	PreviousRevision *int64
	IdempotencyKey   *string
}

func (b0 DeleteQueryRequest_builder) Build() *DeleteQueryRequest {
	m0 := &DeleteQueryRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.QueryId = b.QueryId
	x.PreviousRevision = b.PreviousRevision
	x.IdempotencyKey = b.IdempotencyKey
	return m0
}

type DeleteQueryResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // DeleteQueryResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteQueryResponse) Reset() {
	*x = DeleteQueryResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQueryResponse) ProtoMessage() {}

func (x *DeleteQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteQueryResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *DeleteQueryResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *DeleteQueryResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *DeleteQueryResponse) ClearOperation() {
	x.Operation = nil
}

type DeleteQueryResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 DeleteQueryResponse_builder) Build() *DeleteQueryResponse {
	m0 := &DeleteQueryResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type DeleteQueryResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteQueryResult) Reset() {
	*x = DeleteQueryResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQueryResult) ProtoMessage() {}

func (x *DeleteQueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type DeleteQueryResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 DeleteQueryResult_builder) Build() *DeleteQueryResult {
	m0 := &DeleteQueryResult{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

// Change query information with launch policy option. All fields must be filled in the request. The query changes completely
type ModifyQueryRequest struct {
	state            protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams  *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	QueryId          *string                         `protobuf:"bytes,2,opt,name=query_id,json=queryId" json:"query_id,omitempty"`
	Content          *QueryContent                   `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	ExecuteMode      *ExecuteMode                    `protobuf:"varint,4,opt,name=execute_mode,json=executeMode,enum=FederatedQuery.ExecuteMode" json:"execute_mode,omitempty"`
	Disposition      *StreamingDisposition           `protobuf:"bytes,5,opt,name=disposition" json:"disposition,omitempty"`
	StateLoadMode    *StateLoadMode                  `protobuf:"varint,6,opt,name=state_load_mode,json=stateLoadMode,enum=FederatedQuery.StateLoadMode" json:"state_load_mode,omitempty"`
	PreviousRevision *int64                          `protobuf:"varint,7,opt,name=previous_revision,json=previousRevision" json:"previous_revision,omitempty"`
	IdempotencyKey   *string                         `protobuf:"bytes,8,opt,name=idempotency_key,json=idempotencyKey" json:"idempotency_key,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ModifyQueryRequest) Reset() {
	*x = ModifyQueryRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyQueryRequest) ProtoMessage() {}

func (x *ModifyQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ModifyQueryRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *ModifyQueryRequest) GetQueryId() string {
	if x != nil && x.QueryId != nil {
		return *x.QueryId
	}
	return ""
}

func (x *ModifyQueryRequest) GetContent() *QueryContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ModifyQueryRequest) GetExecuteMode() ExecuteMode {
	if x != nil && x.ExecuteMode != nil {
		return *x.ExecuteMode
	}
	return ExecuteMode_EXECUTE_MODE_UNSPECIFIED
}

func (x *ModifyQueryRequest) GetDisposition() *StreamingDisposition {
	if x != nil {
		return x.Disposition
	}
	return nil
}

func (x *ModifyQueryRequest) GetStateLoadMode() StateLoadMode {
	if x != nil && x.StateLoadMode != nil {
		return *x.StateLoadMode
	}
	return StateLoadMode_STATE_LOAD_MODE_UNSPECIFIED
}

func (x *ModifyQueryRequest) GetPreviousRevision() int64 {
	if x != nil && x.PreviousRevision != nil {
		return *x.PreviousRevision
	}
	return 0
}

func (x *ModifyQueryRequest) GetIdempotencyKey() string {
	if x != nil && x.IdempotencyKey != nil {
		return *x.IdempotencyKey
	}
	return ""
}

func (x *ModifyQueryRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *ModifyQueryRequest) SetQueryId(v string) {
	x.QueryId = &v
}

func (x *ModifyQueryRequest) SetContent(v *QueryContent) {
	x.Content = v
}

func (x *ModifyQueryRequest) SetExecuteMode(v ExecuteMode) {
	x.ExecuteMode = &v
}

func (x *ModifyQueryRequest) SetDisposition(v *StreamingDisposition) {
	x.Disposition = v
}

func (x *ModifyQueryRequest) SetStateLoadMode(v StateLoadMode) {
	x.StateLoadMode = &v
}

func (x *ModifyQueryRequest) SetPreviousRevision(v int64) {
	x.PreviousRevision = &v
}

func (x *ModifyQueryRequest) SetIdempotencyKey(v string) {
	x.IdempotencyKey = &v
}

func (x *ModifyQueryRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *ModifyQueryRequest) HasQueryId() bool {
	if x == nil {
		return false
	}
	return x.QueryId != nil
}

func (x *ModifyQueryRequest) HasContent() bool {
	if x == nil {
		return false
	}
	return x.Content != nil
}

func (x *ModifyQueryRequest) HasExecuteMode() bool {
	if x == nil {
		return false
	}
	return x.ExecuteMode != nil
}

func (x *ModifyQueryRequest) HasDisposition() bool {
	if x == nil {
		return false
	}
	return x.Disposition != nil
}

func (x *ModifyQueryRequest) HasStateLoadMode() bool {
	if x == nil {
		return false
	}
	return x.StateLoadMode != nil
}

func (x *ModifyQueryRequest) HasPreviousRevision() bool {
	if x == nil {
		return false
	}
	return x.PreviousRevision != nil
}

func (x *ModifyQueryRequest) HasIdempotencyKey() bool {
	if x == nil {
		return false
	}
	return x.IdempotencyKey != nil
}

func (x *ModifyQueryRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *ModifyQueryRequest) ClearQueryId() {
	x.QueryId = nil
}

func (x *ModifyQueryRequest) ClearContent() {
	x.Content = nil
}

func (x *ModifyQueryRequest) ClearExecuteMode() {
	x.ExecuteMode = nil
}

func (x *ModifyQueryRequest) ClearDisposition() {
	x.Disposition = nil
}

func (x *ModifyQueryRequest) ClearStateLoadMode() {
	x.StateLoadMode = nil
}

func (x *ModifyQueryRequest) ClearPreviousRevision() {
	x.PreviousRevision = nil
}

func (x *ModifyQueryRequest) ClearIdempotencyKey() {
	x.IdempotencyKey = nil
}

type ModifyQueryRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams  *Ydb_Operations.OperationParams
	QueryId          *string
	Content          *QueryContent
	ExecuteMode      *ExecuteMode
	Disposition      *StreamingDisposition
	StateLoadMode    *StateLoadMode
	PreviousRevision *int64
	IdempotencyKey   *string
}

func (b0 ModifyQueryRequest_builder) Build() *ModifyQueryRequest {
	m0 := &ModifyQueryRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.QueryId = b.QueryId
	x.Content = b.Content
	x.ExecuteMode = b.ExecuteMode
	x.Disposition = b.Disposition
	x.StateLoadMode = b.StateLoadMode
	x.PreviousRevision = b.PreviousRevision
	x.IdempotencyKey = b.IdempotencyKey
	return m0
}

type ModifyQueryResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // ModifyQueryResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyQueryResponse) Reset() {
	*x = ModifyQueryResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyQueryResponse) ProtoMessage() {}

func (x *ModifyQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ModifyQueryResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ModifyQueryResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *ModifyQueryResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *ModifyQueryResponse) ClearOperation() {
	x.Operation = nil
}

type ModifyQueryResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 ModifyQueryResponse_builder) Build() *ModifyQueryResponse {
	m0 := &ModifyQueryResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type ModifyQueryResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyQueryResult) Reset() {
	*x = ModifyQueryResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyQueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyQueryResult) ProtoMessage() {}

func (x *ModifyQueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ModifyQueryResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ModifyQueryResult_builder) Build() *ModifyQueryResult {
	m0 := &ModifyQueryResult{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

// Managing query status (pause, abort, resume, ...)
type ControlQueryRequest struct {
	state            protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams  *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	QueryId          *string                         `protobuf:"bytes,2,opt,name=query_id,json=queryId" json:"query_id,omitempty"`
	Action           *QueryAction                    `protobuf:"varint,3,opt,name=action,enum=FederatedQuery.QueryAction" json:"action,omitempty"`
	PreviousRevision *int64                          `protobuf:"varint,4,opt,name=previous_revision,json=previousRevision" json:"previous_revision,omitempty"`
	IdempotencyKey   *string                         `protobuf:"bytes,5,opt,name=idempotency_key,json=idempotencyKey" json:"idempotency_key,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ControlQueryRequest) Reset() {
	*x = ControlQueryRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlQueryRequest) ProtoMessage() {}

func (x *ControlQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ControlQueryRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *ControlQueryRequest) GetQueryId() string {
	if x != nil && x.QueryId != nil {
		return *x.QueryId
	}
	return ""
}

func (x *ControlQueryRequest) GetAction() QueryAction {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return QueryAction_QUERY_ACTION_UNSPECIFIED
}

func (x *ControlQueryRequest) GetPreviousRevision() int64 {
	if x != nil && x.PreviousRevision != nil {
		return *x.PreviousRevision
	}
	return 0
}

func (x *ControlQueryRequest) GetIdempotencyKey() string {
	if x != nil && x.IdempotencyKey != nil {
		return *x.IdempotencyKey
	}
	return ""
}

func (x *ControlQueryRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *ControlQueryRequest) SetQueryId(v string) {
	x.QueryId = &v
}

func (x *ControlQueryRequest) SetAction(v QueryAction) {
	x.Action = &v
}

func (x *ControlQueryRequest) SetPreviousRevision(v int64) {
	x.PreviousRevision = &v
}

func (x *ControlQueryRequest) SetIdempotencyKey(v string) {
	x.IdempotencyKey = &v
}

func (x *ControlQueryRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *ControlQueryRequest) HasQueryId() bool {
	if x == nil {
		return false
	}
	return x.QueryId != nil
}

func (x *ControlQueryRequest) HasAction() bool {
	if x == nil {
		return false
	}
	return x.Action != nil
}

func (x *ControlQueryRequest) HasPreviousRevision() bool {
	if x == nil {
		return false
	}
	return x.PreviousRevision != nil
}

func (x *ControlQueryRequest) HasIdempotencyKey() bool {
	if x == nil {
		return false
	}
	return x.IdempotencyKey != nil
}

func (x *ControlQueryRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *ControlQueryRequest) ClearQueryId() {
	x.QueryId = nil
}

func (x *ControlQueryRequest) ClearAction() {
	x.Action = nil
}

func (x *ControlQueryRequest) ClearPreviousRevision() {
	x.PreviousRevision = nil
}

func (x *ControlQueryRequest) ClearIdempotencyKey() {
	x.IdempotencyKey = nil
}

type ControlQueryRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams  *Ydb_Operations.OperationParams
	QueryId          *string
	Action           *QueryAction
	PreviousRevision *int64
	IdempotencyKey   *string
}

func (b0 ControlQueryRequest_builder) Build() *ControlQueryRequest {
	m0 := &ControlQueryRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.QueryId = b.QueryId
	x.Action = b.Action
	x.PreviousRevision = b.PreviousRevision
	x.IdempotencyKey = b.IdempotencyKey
	return m0
}

type ControlQueryResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // ControlQueryResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlQueryResponse) Reset() {
	*x = ControlQueryResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlQueryResponse) ProtoMessage() {}

func (x *ControlQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ControlQueryResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ControlQueryResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *ControlQueryResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *ControlQueryResponse) ClearOperation() {
	x.Operation = nil
}

type ControlQueryResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 ControlQueryResponse_builder) Build() *ControlQueryResponse {
	m0 := &ControlQueryResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type ControlQueryResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlQueryResult) Reset() {
	*x = ControlQueryResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlQueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlQueryResult) ProtoMessage() {}

func (x *ControlQueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ControlQueryResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ControlQueryResult_builder) Build() *ControlQueryResult {
	m0 := &ControlQueryResult{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type BriefJob struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Meta          *CommonMeta            `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	QueryMeta     *QueryMeta             `protobuf:"bytes,3,opt,name=query_meta,json=queryMeta" json:"query_meta,omitempty"`
	QueryName     *string                `protobuf:"bytes,9,opt,name=query_name,json=queryName" json:"query_name,omitempty"`
	Visibility    *Acl_Visibility        `protobuf:"varint,10,opt,name=visibility,enum=FederatedQuery.Acl_Visibility" json:"visibility,omitempty"`
	Automatic     *bool                  `protobuf:"varint,11,opt,name=automatic" json:"automatic,omitempty"`
	ExpireAt      *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=expire_at,json=expireAt" json:"expire_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BriefJob) Reset() {
	*x = BriefJob{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BriefJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BriefJob) ProtoMessage() {}

func (x *BriefJob) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BriefJob) GetMeta() *CommonMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *BriefJob) GetQueryMeta() *QueryMeta {
	if x != nil {
		return x.QueryMeta
	}
	return nil
}

func (x *BriefJob) GetQueryName() string {
	if x != nil && x.QueryName != nil {
		return *x.QueryName
	}
	return ""
}

func (x *BriefJob) GetVisibility() Acl_Visibility {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return Acl_VISIBILITY_UNSPECIFIED
}

func (x *BriefJob) GetAutomatic() bool {
	if x != nil && x.Automatic != nil {
		return *x.Automatic
	}
	return false
}

func (x *BriefJob) GetExpireAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireAt
	}
	return nil
}

func (x *BriefJob) SetMeta(v *CommonMeta) {
	x.Meta = v
}

func (x *BriefJob) SetQueryMeta(v *QueryMeta) {
	x.QueryMeta = v
}

func (x *BriefJob) SetQueryName(v string) {
	x.QueryName = &v
}

func (x *BriefJob) SetVisibility(v Acl_Visibility) {
	x.Visibility = &v
}

func (x *BriefJob) SetAutomatic(v bool) {
	x.Automatic = &v
}

func (x *BriefJob) SetExpireAt(v *timestamppb.Timestamp) {
	x.ExpireAt = v
}

func (x *BriefJob) HasMeta() bool {
	if x == nil {
		return false
	}
	return x.Meta != nil
}

func (x *BriefJob) HasQueryMeta() bool {
	if x == nil {
		return false
	}
	return x.QueryMeta != nil
}

func (x *BriefJob) HasQueryName() bool {
	if x == nil {
		return false
	}
	return x.QueryName != nil
}

func (x *BriefJob) HasVisibility() bool {
	if x == nil {
		return false
	}
	return x.Visibility != nil
}

func (x *BriefJob) HasAutomatic() bool {
	if x == nil {
		return false
	}
	return x.Automatic != nil
}

func (x *BriefJob) HasExpireAt() bool {
	if x == nil {
		return false
	}
	return x.ExpireAt != nil
}

func (x *BriefJob) ClearMeta() {
	x.Meta = nil
}

func (x *BriefJob) ClearQueryMeta() {
	x.QueryMeta = nil
}

func (x *BriefJob) ClearQueryName() {
	x.QueryName = nil
}

func (x *BriefJob) ClearVisibility() {
	x.Visibility = nil
}

func (x *BriefJob) ClearAutomatic() {
	x.Automatic = nil
}

func (x *BriefJob) ClearExpireAt() {
	x.ExpireAt = nil
}

type BriefJob_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Meta       *CommonMeta
	QueryMeta  *QueryMeta
	QueryName  *string
	Visibility *Acl_Visibility
	Automatic  *bool
	ExpireAt   *timestamppb.Timestamp
}

func (b0 BriefJob_builder) Build() *BriefJob {
	m0 := &BriefJob{}
	b, x := &b0, m0
	_, _ = b, x
	x.Meta = b.Meta
	x.QueryMeta = b.QueryMeta
	x.QueryName = b.QueryName
	x.Visibility = b.Visibility
	x.Automatic = b.Automatic
	x.ExpireAt = b.ExpireAt
	return m0
}

type Job struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Meta          *CommonMeta               `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	Text          *string                   `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	QueryMeta     *QueryMeta                `protobuf:"bytes,3,opt,name=query_meta,json=queryMeta" json:"query_meta,omitempty"`
	Plan          *QueryPlan                `protobuf:"bytes,4,opt,name=plan" json:"plan,omitempty"`
	Issue         []*Ydb_Issue.IssueMessage `protobuf:"bytes,5,rep,name=issue" json:"issue,omitempty"`
	Statistics    *QueryStatistics          `protobuf:"bytes,6,opt,name=statistics" json:"statistics,omitempty"`
	ResultSetMeta []*ResultSetMeta          `protobuf:"bytes,7,rep,name=result_set_meta,json=resultSetMeta" json:"result_set_meta,omitempty"`
	Ast           *QueryAst                 `protobuf:"bytes,8,opt,name=ast" json:"ast,omitempty"`
	QueryName     *string                   `protobuf:"bytes,9,opt,name=query_name,json=queryName" json:"query_name,omitempty"`
	Acl           *Acl                      `protobuf:"bytes,10,opt,name=acl" json:"acl,omitempty"`
	Automatic     *bool                     `protobuf:"varint,11,opt,name=automatic" json:"automatic,omitempty"`
	ExpireAt      *timestamppb.Timestamp    `protobuf:"bytes,12,opt,name=expire_at,json=expireAt" json:"expire_at,omitempty"`
	Syntax        *QueryContent_QuerySyntax `protobuf:"varint,13,opt,name=syntax,enum=FederatedQuery.QueryContent_QuerySyntax" json:"syntax,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Job) Reset() {
	*x = Job{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Job) GetMeta() *CommonMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Job) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *Job) GetQueryMeta() *QueryMeta {
	if x != nil {
		return x.QueryMeta
	}
	return nil
}

func (x *Job) GetPlan() *QueryPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

func (x *Job) GetIssue() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issue
	}
	return nil
}

func (x *Job) GetStatistics() *QueryStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *Job) GetResultSetMeta() []*ResultSetMeta {
	if x != nil {
		return x.ResultSetMeta
	}
	return nil
}

func (x *Job) GetAst() *QueryAst {
	if x != nil {
		return x.Ast
	}
	return nil
}

func (x *Job) GetQueryName() string {
	if x != nil && x.QueryName != nil {
		return *x.QueryName
	}
	return ""
}

func (x *Job) GetAcl() *Acl {
	if x != nil {
		return x.Acl
	}
	return nil
}

func (x *Job) GetAutomatic() bool {
	if x != nil && x.Automatic != nil {
		return *x.Automatic
	}
	return false
}

func (x *Job) GetExpireAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireAt
	}
	return nil
}

func (x *Job) GetSyntax() QueryContent_QuerySyntax {
	if x != nil && x.Syntax != nil {
		return *x.Syntax
	}
	return QueryContent_QUERY_SYNTAX_UNSPECIFIED
}

func (x *Job) SetMeta(v *CommonMeta) {
	x.Meta = v
}

func (x *Job) SetText(v string) {
	x.Text = &v
}

func (x *Job) SetQueryMeta(v *QueryMeta) {
	x.QueryMeta = v
}

func (x *Job) SetPlan(v *QueryPlan) {
	x.Plan = v
}

func (x *Job) SetIssue(v []*Ydb_Issue.IssueMessage) {
	x.Issue = v
}

func (x *Job) SetStatistics(v *QueryStatistics) {
	x.Statistics = v
}

func (x *Job) SetResultSetMeta(v []*ResultSetMeta) {
	x.ResultSetMeta = v
}

func (x *Job) SetAst(v *QueryAst) {
	x.Ast = v
}

func (x *Job) SetQueryName(v string) {
	x.QueryName = &v
}

func (x *Job) SetAcl(v *Acl) {
	x.Acl = v
}

func (x *Job) SetAutomatic(v bool) {
	x.Automatic = &v
}

func (x *Job) SetExpireAt(v *timestamppb.Timestamp) {
	x.ExpireAt = v
}

func (x *Job) SetSyntax(v QueryContent_QuerySyntax) {
	x.Syntax = &v
}

func (x *Job) HasMeta() bool {
	if x == nil {
		return false
	}
	return x.Meta != nil
}

func (x *Job) HasText() bool {
	if x == nil {
		return false
	}
	return x.Text != nil
}

func (x *Job) HasQueryMeta() bool {
	if x == nil {
		return false
	}
	return x.QueryMeta != nil
}

func (x *Job) HasPlan() bool {
	if x == nil {
		return false
	}
	return x.Plan != nil
}

func (x *Job) HasStatistics() bool {
	if x == nil {
		return false
	}
	return x.Statistics != nil
}

func (x *Job) HasAst() bool {
	if x == nil {
		return false
	}
	return x.Ast != nil
}

func (x *Job) HasQueryName() bool {
	if x == nil {
		return false
	}
	return x.QueryName != nil
}

func (x *Job) HasAcl() bool {
	if x == nil {
		return false
	}
	return x.Acl != nil
}

func (x *Job) HasAutomatic() bool {
	if x == nil {
		return false
	}
	return x.Automatic != nil
}

func (x *Job) HasExpireAt() bool {
	if x == nil {
		return false
	}
	return x.ExpireAt != nil
}

func (x *Job) HasSyntax() bool {
	if x == nil {
		return false
	}
	return x.Syntax != nil
}

func (x *Job) ClearMeta() {
	x.Meta = nil
}

func (x *Job) ClearText() {
	x.Text = nil
}

func (x *Job) ClearQueryMeta() {
	x.QueryMeta = nil
}

func (x *Job) ClearPlan() {
	x.Plan = nil
}

func (x *Job) ClearStatistics() {
	x.Statistics = nil
}

func (x *Job) ClearAst() {
	x.Ast = nil
}

func (x *Job) ClearQueryName() {
	x.QueryName = nil
}

func (x *Job) ClearAcl() {
	x.Acl = nil
}

func (x *Job) ClearAutomatic() {
	x.Automatic = nil
}

func (x *Job) ClearExpireAt() {
	x.ExpireAt = nil
}

func (x *Job) ClearSyntax() {
	x.Syntax = nil
}

type Job_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Meta          *CommonMeta
	Text          *string
	QueryMeta     *QueryMeta
	Plan          *QueryPlan
	Issue         []*Ydb_Issue.IssueMessage
	Statistics    *QueryStatistics
	ResultSetMeta []*ResultSetMeta
	Ast           *QueryAst
	QueryName     *string
	Acl           *Acl
	Automatic     *bool
	ExpireAt      *timestamppb.Timestamp
	Syntax        *QueryContent_QuerySyntax
}

func (b0 Job_builder) Build() *Job {
	m0 := &Job{}
	b, x := &b0, m0
	_, _ = b, x
	x.Meta = b.Meta
	x.Text = b.Text
	x.QueryMeta = b.QueryMeta
	x.Plan = b.Plan
	x.Issue = b.Issue
	x.Statistics = b.Statistics
	x.ResultSetMeta = b.ResultSetMeta
	x.Ast = b.Ast
	x.QueryName = b.QueryName
	x.Acl = b.Acl
	x.Automatic = b.Automatic
	x.ExpireAt = b.ExpireAt
	x.Syntax = b.Syntax
	return m0
}

// Information about recent query runs
type ListJobsRequest struct {
	state           protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	PageToken       *string                         `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Limit           *int32                          `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	QueryId         *string                         `protobuf:"bytes,5,opt,name=query_id,json=queryId" json:"query_id,omitempty"` // deprecated
	Filter          *ListJobsRequest_Filter         `protobuf:"bytes,4,opt,name=filter" json:"filter,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListJobsRequest) Reset() {
	*x = ListJobsRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsRequest) ProtoMessage() {}

func (x *ListJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListJobsRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *ListJobsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListJobsRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ListJobsRequest) GetQueryId() string {
	if x != nil && x.QueryId != nil {
		return *x.QueryId
	}
	return ""
}

func (x *ListJobsRequest) GetFilter() *ListJobsRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListJobsRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *ListJobsRequest) SetPageToken(v string) {
	x.PageToken = &v
}

func (x *ListJobsRequest) SetLimit(v int32) {
	x.Limit = &v
}

func (x *ListJobsRequest) SetQueryId(v string) {
	x.QueryId = &v
}

func (x *ListJobsRequest) SetFilter(v *ListJobsRequest_Filter) {
	x.Filter = v
}

func (x *ListJobsRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *ListJobsRequest) HasPageToken() bool {
	if x == nil {
		return false
	}
	return x.PageToken != nil
}

func (x *ListJobsRequest) HasLimit() bool {
	if x == nil {
		return false
	}
	return x.Limit != nil
}

func (x *ListJobsRequest) HasQueryId() bool {
	if x == nil {
		return false
	}
	return x.QueryId != nil
}

func (x *ListJobsRequest) HasFilter() bool {
	if x == nil {
		return false
	}
	return x.Filter != nil
}

func (x *ListJobsRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *ListJobsRequest) ClearPageToken() {
	x.PageToken = nil
}

func (x *ListJobsRequest) ClearLimit() {
	x.Limit = nil
}

func (x *ListJobsRequest) ClearQueryId() {
	x.QueryId = nil
}

func (x *ListJobsRequest) ClearFilter() {
	x.Filter = nil
}

type ListJobsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	PageToken       *string
	Limit           *int32
	QueryId         *string
	Filter          *ListJobsRequest_Filter
}

func (b0 ListJobsRequest_builder) Build() *ListJobsRequest {
	m0 := &ListJobsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.PageToken = b.PageToken
	x.Limit = b.Limit
	x.QueryId = b.QueryId
	x.Filter = b.Filter
	return m0
}

type ListJobsResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // ListJobsResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobsResponse) Reset() {
	*x = ListJobsResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsResponse) ProtoMessage() {}

func (x *ListJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListJobsResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ListJobsResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *ListJobsResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *ListJobsResponse) ClearOperation() {
	x.Operation = nil
}

type ListJobsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 ListJobsResponse_builder) Build() *ListJobsResponse {
	m0 := &ListJobsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type ListJobsResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Job           []*BriefJob            `protobuf:"bytes,1,rep,name=job" json:"job,omitempty"`
	NextPageToken *string                `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobsResult) Reset() {
	*x = ListJobsResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsResult) ProtoMessage() {}

func (x *ListJobsResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListJobsResult) GetJob() []*BriefJob {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *ListJobsResult) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *ListJobsResult) SetJob(v []*BriefJob) {
	x.Job = v
}

func (x *ListJobsResult) SetNextPageToken(v string) {
	x.NextPageToken = &v
}

func (x *ListJobsResult) HasNextPageToken() bool {
	if x == nil {
		return false
	}
	return x.NextPageToken != nil
}

func (x *ListJobsResult) ClearNextPageToken() {
	x.NextPageToken = nil
}

type ListJobsResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Job           []*BriefJob
	NextPageToken *string
}

func (b0 ListJobsResult_builder) Build() *ListJobsResult {
	m0 := &ListJobsResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.Job = b.Job
	x.NextPageToken = b.NextPageToken
	return m0
}

// Getting information about the job
type DescribeJobRequest struct {
	state           protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	JobId           *string                         `protobuf:"bytes,2,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DescribeJobRequest) Reset() {
	*x = DescribeJobRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeJobRequest) ProtoMessage() {}

func (x *DescribeJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeJobRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *DescribeJobRequest) GetJobId() string {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return ""
}

func (x *DescribeJobRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *DescribeJobRequest) SetJobId(v string) {
	x.JobId = &v
}

func (x *DescribeJobRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *DescribeJobRequest) HasJobId() bool {
	if x == nil {
		return false
	}
	return x.JobId != nil
}

func (x *DescribeJobRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *DescribeJobRequest) ClearJobId() {
	x.JobId = nil
}

type DescribeJobRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	JobId           *string
}

func (b0 DescribeJobRequest_builder) Build() *DescribeJobRequest {
	m0 := &DescribeJobRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.JobId = b.JobId
	return m0
}

type DescribeJobResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // DescribeJobResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeJobResponse) Reset() {
	*x = DescribeJobResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeJobResponse) ProtoMessage() {}

func (x *DescribeJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeJobResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *DescribeJobResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *DescribeJobResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *DescribeJobResponse) ClearOperation() {
	x.Operation = nil
}

type DescribeJobResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 DescribeJobResponse_builder) Build() *DescribeJobResponse {
	m0 := &DescribeJobResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type DescribeJobResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Job           *Job                   `protobuf:"bytes,1,opt,name=job" json:"job,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeJobResult) Reset() {
	*x = DescribeJobResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeJobResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeJobResult) ProtoMessage() {}

func (x *DescribeJobResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeJobResult) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *DescribeJobResult) SetJob(v *Job) {
	x.Job = v
}

func (x *DescribeJobResult) HasJob() bool {
	if x == nil {
		return false
	}
	return x.Job != nil
}

func (x *DescribeJobResult) ClearJob() {
	x.Job = nil
}

type DescribeJobResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Job *Job
}

func (b0 DescribeJobResult_builder) Build() *DescribeJobResult {
	m0 := &DescribeJobResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.Job = b.Job
	return m0
}

type CurrentIAMTokenAuth struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CurrentIAMTokenAuth) Reset() {
	*x = CurrentIAMTokenAuth{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentIAMTokenAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentIAMTokenAuth) ProtoMessage() {}

func (x *CurrentIAMTokenAuth) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type CurrentIAMTokenAuth_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 CurrentIAMTokenAuth_builder) Build() *CurrentIAMTokenAuth {
	m0 := &CurrentIAMTokenAuth{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type NoneAuth struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoneAuth) Reset() {
	*x = NoneAuth{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoneAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoneAuth) ProtoMessage() {}

func (x *NoneAuth) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type NoneAuth_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 NoneAuth_builder) Build() *NoneAuth {
	m0 := &NoneAuth{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ServiceAccountAuth struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Id            *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceAccountAuth) Reset() {
	*x = ServiceAccountAuth{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceAccountAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAccountAuth) ProtoMessage() {}

func (x *ServiceAccountAuth) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ServiceAccountAuth) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ServiceAccountAuth) SetId(v string) {
	x.Id = &v
}

func (x *ServiceAccountAuth) HasId() bool {
	if x == nil {
		return false
	}
	return x.Id != nil
}

func (x *ServiceAccountAuth) ClearId() {
	x.Id = nil
}

type ServiceAccountAuth_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *string
}

func (b0 ServiceAccountAuth_builder) Build() *ServiceAccountAuth {
	m0 := &ServiceAccountAuth{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	return m0
}

type IamAuth struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Types that are valid to be assigned to Identity:
	//
	//	*IamAuth_CurrentIam
	//	*IamAuth_ServiceAccount
	//	*IamAuth_None
	Identity      isIamAuth_Identity `protobuf_oneof:"identity"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IamAuth) Reset() {
	*x = IamAuth{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IamAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IamAuth) ProtoMessage() {}

func (x *IamAuth) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *IamAuth) GetIdentity() isIamAuth_Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *IamAuth) GetCurrentIam() *CurrentIAMTokenAuth {
	if x != nil {
		if x, ok := x.Identity.(*IamAuth_CurrentIam); ok {
			return x.CurrentIam
		}
	}
	return nil
}

func (x *IamAuth) GetServiceAccount() *ServiceAccountAuth {
	if x != nil {
		if x, ok := x.Identity.(*IamAuth_ServiceAccount); ok {
			return x.ServiceAccount
		}
	}
	return nil
}

func (x *IamAuth) GetNone() *NoneAuth {
	if x != nil {
		if x, ok := x.Identity.(*IamAuth_None); ok {
			return x.None
		}
	}
	return nil
}

func (x *IamAuth) SetCurrentIam(v *CurrentIAMTokenAuth) {
	if v == nil {
		x.Identity = nil
		return
	}
	x.Identity = &IamAuth_CurrentIam{v}
}

func (x *IamAuth) SetServiceAccount(v *ServiceAccountAuth) {
	if v == nil {
		x.Identity = nil
		return
	}
	x.Identity = &IamAuth_ServiceAccount{v}
}

func (x *IamAuth) SetNone(v *NoneAuth) {
	if v == nil {
		x.Identity = nil
		return
	}
	x.Identity = &IamAuth_None{v}
}

func (x *IamAuth) HasIdentity() bool {
	if x == nil {
		return false
	}
	return x.Identity != nil
}

func (x *IamAuth) HasCurrentIam() bool {
	if x == nil {
		return false
	}
	_, ok := x.Identity.(*IamAuth_CurrentIam)
	return ok
}

func (x *IamAuth) HasServiceAccount() bool {
	if x == nil {
		return false
	}
	_, ok := x.Identity.(*IamAuth_ServiceAccount)
	return ok
}

func (x *IamAuth) HasNone() bool {
	if x == nil {
		return false
	}
	_, ok := x.Identity.(*IamAuth_None)
	return ok
}

func (x *IamAuth) ClearIdentity() {
	x.Identity = nil
}

func (x *IamAuth) ClearCurrentIam() {
	if _, ok := x.Identity.(*IamAuth_CurrentIam); ok {
		x.Identity = nil
	}
}

func (x *IamAuth) ClearServiceAccount() {
	if _, ok := x.Identity.(*IamAuth_ServiceAccount); ok {
		x.Identity = nil
	}
}

func (x *IamAuth) ClearNone() {
	if _, ok := x.Identity.(*IamAuth_None); ok {
		x.Identity = nil
	}
}

const IamAuth_Identity_not_set_case case_IamAuth_Identity = 0
const IamAuth_CurrentIam_case case_IamAuth_Identity = 1
const IamAuth_ServiceAccount_case case_IamAuth_Identity = 2
const IamAuth_None_case case_IamAuth_Identity = 3

func (x *IamAuth) WhichIdentity() case_IamAuth_Identity {
	if x == nil {
		return IamAuth_Identity_not_set_case
	}
	switch x.Identity.(type) {
	case *IamAuth_CurrentIam:
		return IamAuth_CurrentIam_case
	case *IamAuth_ServiceAccount:
		return IamAuth_ServiceAccount_case
	case *IamAuth_None:
		return IamAuth_None_case
	default:
		return IamAuth_Identity_not_set_case
	}
}

type IamAuth_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof Identity:
	CurrentIam     *CurrentIAMTokenAuth
	ServiceAccount *ServiceAccountAuth
	None           *NoneAuth
	// -- end of Identity
}

func (b0 IamAuth_builder) Build() *IamAuth {
	m0 := &IamAuth{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CurrentIam != nil {
		x.Identity = &IamAuth_CurrentIam{b.CurrentIam}
	}
	if b.ServiceAccount != nil {
		x.Identity = &IamAuth_ServiceAccount{b.ServiceAccount}
	}
	if b.None != nil {
		x.Identity = &IamAuth_None{b.None}
	}
	return m0
}

type case_IamAuth_Identity protoreflect.FieldNumber

func (x case_IamAuth_Identity) String() string {
	md := file_draft_protos_ydb_federated_query_proto_msgTypes[44].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isIamAuth_Identity interface {
	isIamAuth_Identity()
}

type IamAuth_CurrentIam struct {
	CurrentIam *CurrentIAMTokenAuth `protobuf:"bytes,1,opt,name=current_iam,json=currentIam,oneof"`
}

type IamAuth_ServiceAccount struct {
	ServiceAccount *ServiceAccountAuth `protobuf:"bytes,2,opt,name=service_account,json=serviceAccount,oneof"`
}

type IamAuth_None struct {
	None *NoneAuth `protobuf:"bytes,3,opt,name=none,oneof"`
}

func (*IamAuth_CurrentIam) isIamAuth_Identity() {}

func (*IamAuth_ServiceAccount) isIamAuth_Identity() {}

func (*IamAuth_None) isIamAuth_Identity() {}

type DataStreams struct {
	state      protoimpl.MessageState `protogen:"hybrid.v1"`
	DatabaseId *string                `protobuf:"bytes,1,opt,name=database_id,json=databaseId" json:"database_id,omitempty"`
	Auth       *IamAuth               `protobuf:"bytes,2,opt,name=auth" json:"auth,omitempty"`
	// for internal usage
	Endpoint      *string `protobuf:"bytes,3,opt,name=endpoint" json:"endpoint,omitempty"`
	Database      *string `protobuf:"bytes,4,opt,name=database" json:"database,omitempty"`
	Secure        *bool   `protobuf:"varint,5,opt,name=secure" json:"secure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataStreams) Reset() {
	*x = DataStreams{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataStreams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataStreams) ProtoMessage() {}

func (x *DataStreams) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DataStreams) GetDatabaseId() string {
	if x != nil && x.DatabaseId != nil {
		return *x.DatabaseId
	}
	return ""
}

func (x *DataStreams) GetAuth() *IamAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *DataStreams) GetEndpoint() string {
	if x != nil && x.Endpoint != nil {
		return *x.Endpoint
	}
	return ""
}

func (x *DataStreams) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *DataStreams) GetSecure() bool {
	if x != nil && x.Secure != nil {
		return *x.Secure
	}
	return false
}

func (x *DataStreams) SetDatabaseId(v string) {
	x.DatabaseId = &v
}

func (x *DataStreams) SetAuth(v *IamAuth) {
	x.Auth = v
}

func (x *DataStreams) SetEndpoint(v string) {
	x.Endpoint = &v
}

func (x *DataStreams) SetDatabase(v string) {
	x.Database = &v
}

func (x *DataStreams) SetSecure(v bool) {
	x.Secure = &v
}

func (x *DataStreams) HasDatabaseId() bool {
	if x == nil {
		return false
	}
	return x.DatabaseId != nil
}

func (x *DataStreams) HasAuth() bool {
	if x == nil {
		return false
	}
	return x.Auth != nil
}

func (x *DataStreams) HasEndpoint() bool {
	if x == nil {
		return false
	}
	return x.Endpoint != nil
}

func (x *DataStreams) HasDatabase() bool {
	if x == nil {
		return false
	}
	return x.Database != nil
}

func (x *DataStreams) HasSecure() bool {
	if x == nil {
		return false
	}
	return x.Secure != nil
}

func (x *DataStreams) ClearDatabaseId() {
	x.DatabaseId = nil
}

func (x *DataStreams) ClearAuth() {
	x.Auth = nil
}

func (x *DataStreams) ClearEndpoint() {
	x.Endpoint = nil
}

func (x *DataStreams) ClearDatabase() {
	x.Database = nil
}

func (x *DataStreams) ClearSecure() {
	x.Secure = nil
}

type DataStreams_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DatabaseId *string
	Auth       *IamAuth
	// for internal usage
	Endpoint *string
	Database *string
	Secure   *bool
}

func (b0 DataStreams_builder) Build() *DataStreams {
	m0 := &DataStreams{}
	b, x := &b0, m0
	_, _ = b, x
	x.DatabaseId = b.DatabaseId
	x.Auth = b.Auth
	x.Endpoint = b.Endpoint
	x.Database = b.Database
	x.Secure = b.Secure
	return m0
}

type Monitoring struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Project       *string                `protobuf:"bytes,1,opt,name=project" json:"project,omitempty"`
	Cluster       *string                `protobuf:"bytes,2,opt,name=cluster" json:"cluster,omitempty"`
	Auth          *IamAuth               `protobuf:"bytes,3,opt,name=auth" json:"auth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Monitoring) Reset() {
	*x = Monitoring{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Monitoring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Monitoring) ProtoMessage() {}

func (x *Monitoring) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Monitoring) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

func (x *Monitoring) GetCluster() string {
	if x != nil && x.Cluster != nil {
		return *x.Cluster
	}
	return ""
}

func (x *Monitoring) GetAuth() *IamAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *Monitoring) SetProject(v string) {
	x.Project = &v
}

func (x *Monitoring) SetCluster(v string) {
	x.Cluster = &v
}

func (x *Monitoring) SetAuth(v *IamAuth) {
	x.Auth = v
}

func (x *Monitoring) HasProject() bool {
	if x == nil {
		return false
	}
	return x.Project != nil
}

func (x *Monitoring) HasCluster() bool {
	if x == nil {
		return false
	}
	return x.Cluster != nil
}

func (x *Monitoring) HasAuth() bool {
	if x == nil {
		return false
	}
	return x.Auth != nil
}

func (x *Monitoring) ClearProject() {
	x.Project = nil
}

func (x *Monitoring) ClearCluster() {
	x.Cluster = nil
}

func (x *Monitoring) ClearAuth() {
	x.Auth = nil
}

type Monitoring_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Project *string
	Cluster *string
	Auth    *IamAuth
}

func (b0 Monitoring_builder) Build() *Monitoring {
	m0 := &Monitoring{}
	b, x := &b0, m0
	_, _ = b, x
	x.Project = b.Project
	x.Cluster = b.Cluster
	x.Auth = b.Auth
	return m0
}

type YdbDatabase struct {
	state      protoimpl.MessageState `protogen:"hybrid.v1"`
	DatabaseId *string                `protobuf:"bytes,1,opt,name=database_id,json=databaseId" json:"database_id,omitempty"`
	Auth       *IamAuth               `protobuf:"bytes,2,opt,name=auth" json:"auth,omitempty"`
	// for internal usage
	Endpoint      *string `protobuf:"bytes,3,opt,name=endpoint" json:"endpoint,omitempty"`
	Database      *string `protobuf:"bytes,4,opt,name=database" json:"database,omitempty"`
	Secure        *bool   `protobuf:"varint,5,opt,name=secure" json:"secure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *YdbDatabase) Reset() {
	*x = YdbDatabase{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YdbDatabase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YdbDatabase) ProtoMessage() {}

func (x *YdbDatabase) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *YdbDatabase) GetDatabaseId() string {
	if x != nil && x.DatabaseId != nil {
		return *x.DatabaseId
	}
	return ""
}

func (x *YdbDatabase) GetAuth() *IamAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *YdbDatabase) GetEndpoint() string {
	if x != nil && x.Endpoint != nil {
		return *x.Endpoint
	}
	return ""
}

func (x *YdbDatabase) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *YdbDatabase) GetSecure() bool {
	if x != nil && x.Secure != nil {
		return *x.Secure
	}
	return false
}

func (x *YdbDatabase) SetDatabaseId(v string) {
	x.DatabaseId = &v
}

func (x *YdbDatabase) SetAuth(v *IamAuth) {
	x.Auth = v
}

func (x *YdbDatabase) SetEndpoint(v string) {
	x.Endpoint = &v
}

func (x *YdbDatabase) SetDatabase(v string) {
	x.Database = &v
}

func (x *YdbDatabase) SetSecure(v bool) {
	x.Secure = &v
}

func (x *YdbDatabase) HasDatabaseId() bool {
	if x == nil {
		return false
	}
	return x.DatabaseId != nil
}

func (x *YdbDatabase) HasAuth() bool {
	if x == nil {
		return false
	}
	return x.Auth != nil
}

func (x *YdbDatabase) HasEndpoint() bool {
	if x == nil {
		return false
	}
	return x.Endpoint != nil
}

func (x *YdbDatabase) HasDatabase() bool {
	if x == nil {
		return false
	}
	return x.Database != nil
}

func (x *YdbDatabase) HasSecure() bool {
	if x == nil {
		return false
	}
	return x.Secure != nil
}

func (x *YdbDatabase) ClearDatabaseId() {
	x.DatabaseId = nil
}

func (x *YdbDatabase) ClearAuth() {
	x.Auth = nil
}

func (x *YdbDatabase) ClearEndpoint() {
	x.Endpoint = nil
}

func (x *YdbDatabase) ClearDatabase() {
	x.Database = nil
}

func (x *YdbDatabase) ClearSecure() {
	x.Secure = nil
}

type YdbDatabase_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DatabaseId *string
	Auth       *IamAuth
	// for internal usage
	Endpoint *string
	Database *string
	Secure   *bool
}

func (b0 YdbDatabase_builder) Build() *YdbDatabase {
	m0 := &YdbDatabase{}
	b, x := &b0, m0
	_, _ = b, x
	x.DatabaseId = b.DatabaseId
	x.Auth = b.Auth
	x.Endpoint = b.Endpoint
	x.Database = b.Database
	x.Secure = b.Secure
	return m0
}

type ClickHouseCluster struct {
	state        protoimpl.MessageState `protogen:"hybrid.v1"`
	DatabaseId   *string                `protobuf:"bytes,1,opt,name=database_id,json=databaseId" json:"database_id,omitempty"`
	DatabaseName *string                `protobuf:"bytes,8,opt,name=database_name,json=databaseName" json:"database_name,omitempty"`
	Login        *string                `protobuf:"bytes,2,opt,name=login" json:"login,omitempty"`
	Password     *string                `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	Auth         *IamAuth               `protobuf:"bytes,4,opt,name=auth" json:"auth,omitempty"`
	// for internal usage
	Host          *string `protobuf:"bytes,5,opt,name=host" json:"host,omitempty"`
	Port          *int32  `protobuf:"varint,6,opt,name=port" json:"port,omitempty"`
	Secure        *bool   `protobuf:"varint,7,opt,name=secure" json:"secure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickHouseCluster) Reset() {
	*x = ClickHouseCluster{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickHouseCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickHouseCluster) ProtoMessage() {}

func (x *ClickHouseCluster) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClickHouseCluster) GetDatabaseId() string {
	if x != nil && x.DatabaseId != nil {
		return *x.DatabaseId
	}
	return ""
}

func (x *ClickHouseCluster) GetDatabaseName() string {
	if x != nil && x.DatabaseName != nil {
		return *x.DatabaseName
	}
	return ""
}

func (x *ClickHouseCluster) GetLogin() string {
	if x != nil && x.Login != nil {
		return *x.Login
	}
	return ""
}

func (x *ClickHouseCluster) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *ClickHouseCluster) GetAuth() *IamAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ClickHouseCluster) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *ClickHouseCluster) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *ClickHouseCluster) GetSecure() bool {
	if x != nil && x.Secure != nil {
		return *x.Secure
	}
	return false
}

func (x *ClickHouseCluster) SetDatabaseId(v string) {
	x.DatabaseId = &v
}

func (x *ClickHouseCluster) SetDatabaseName(v string) {
	x.DatabaseName = &v
}

func (x *ClickHouseCluster) SetLogin(v string) {
	x.Login = &v
}

func (x *ClickHouseCluster) SetPassword(v string) {
	x.Password = &v
}

func (x *ClickHouseCluster) SetAuth(v *IamAuth) {
	x.Auth = v
}

func (x *ClickHouseCluster) SetHost(v string) {
	x.Host = &v
}

func (x *ClickHouseCluster) SetPort(v int32) {
	x.Port = &v
}

func (x *ClickHouseCluster) SetSecure(v bool) {
	x.Secure = &v
}

func (x *ClickHouseCluster) HasDatabaseId() bool {
	if x == nil {
		return false
	}
	return x.DatabaseId != nil
}

func (x *ClickHouseCluster) HasDatabaseName() bool {
	if x == nil {
		return false
	}
	return x.DatabaseName != nil
}

func (x *ClickHouseCluster) HasLogin() bool {
	if x == nil {
		return false
	}
	return x.Login != nil
}

func (x *ClickHouseCluster) HasPassword() bool {
	if x == nil {
		return false
	}
	return x.Password != nil
}

func (x *ClickHouseCluster) HasAuth() bool {
	if x == nil {
		return false
	}
	return x.Auth != nil
}

func (x *ClickHouseCluster) HasHost() bool {
	if x == nil {
		return false
	}
	return x.Host != nil
}

func (x *ClickHouseCluster) HasPort() bool {
	if x == nil {
		return false
	}
	return x.Port != nil
}

func (x *ClickHouseCluster) HasSecure() bool {
	if x == nil {
		return false
	}
	return x.Secure != nil
}

func (x *ClickHouseCluster) ClearDatabaseId() {
	x.DatabaseId = nil
}

func (x *ClickHouseCluster) ClearDatabaseName() {
	x.DatabaseName = nil
}

func (x *ClickHouseCluster) ClearLogin() {
	x.Login = nil
}

func (x *ClickHouseCluster) ClearPassword() {
	x.Password = nil
}

func (x *ClickHouseCluster) ClearAuth() {
	x.Auth = nil
}

func (x *ClickHouseCluster) ClearHost() {
	x.Host = nil
}

func (x *ClickHouseCluster) ClearPort() {
	x.Port = nil
}

func (x *ClickHouseCluster) ClearSecure() {
	x.Secure = nil
}

type ClickHouseCluster_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DatabaseId   *string
	DatabaseName *string
	Login        *string
	Password     *string
	Auth         *IamAuth
	// for internal usage
	Host   *string
	Port   *int32
	Secure *bool
}

func (b0 ClickHouseCluster_builder) Build() *ClickHouseCluster {
	m0 := &ClickHouseCluster{}
	b, x := &b0, m0
	_, _ = b, x
	x.DatabaseId = b.DatabaseId
	x.DatabaseName = b.DatabaseName
	x.Login = b.Login
	x.Password = b.Password
	x.Auth = b.Auth
	x.Host = b.Host
	x.Port = b.Port
	x.Secure = b.Secure
	return m0
}

type ObjectStorageConnection struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Bucket        *string                `protobuf:"bytes,1,opt,name=bucket" json:"bucket,omitempty"`
	Auth          *IamAuth               `protobuf:"bytes,2,opt,name=auth" json:"auth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObjectStorageConnection) Reset() {
	*x = ObjectStorageConnection{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectStorageConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageConnection) ProtoMessage() {}

func (x *ObjectStorageConnection) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ObjectStorageConnection) GetBucket() string {
	if x != nil && x.Bucket != nil {
		return *x.Bucket
	}
	return ""
}

func (x *ObjectStorageConnection) GetAuth() *IamAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ObjectStorageConnection) SetBucket(v string) {
	x.Bucket = &v
}

func (x *ObjectStorageConnection) SetAuth(v *IamAuth) {
	x.Auth = v
}

func (x *ObjectStorageConnection) HasBucket() bool {
	if x == nil {
		return false
	}
	return x.Bucket != nil
}

func (x *ObjectStorageConnection) HasAuth() bool {
	if x == nil {
		return false
	}
	return x.Auth != nil
}

func (x *ObjectStorageConnection) ClearBucket() {
	x.Bucket = nil
}

func (x *ObjectStorageConnection) ClearAuth() {
	x.Auth = nil
}

type ObjectStorageConnection_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Bucket *string
	Auth   *IamAuth
}

func (b0 ObjectStorageConnection_builder) Build() *ObjectStorageConnection {
	m0 := &ObjectStorageConnection{}
	b, x := &b0, m0
	_, _ = b, x
	x.Bucket = b.Bucket
	x.Auth = b.Auth
	return m0
}

type PostgreSQLCluster struct {
	state        protoimpl.MessageState `protogen:"hybrid.v1"`
	DatabaseId   *string                `protobuf:"bytes,1,opt,name=database_id,json=databaseId" json:"database_id,omitempty"`
	DatabaseName *string                `protobuf:"bytes,8,opt,name=database_name,json=databaseName" json:"database_name,omitempty"`
	Login        *string                `protobuf:"bytes,2,opt,name=login" json:"login,omitempty"`
	Password     *string                `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	Schema       *string                `protobuf:"bytes,9,opt,name=schema" json:"schema,omitempty"`
	Auth         *IamAuth               `protobuf:"bytes,4,opt,name=auth" json:"auth,omitempty"`
	// Just for the sake of simmetry with existing ClickHouse code
	Host          *string `protobuf:"bytes,5,opt,name=host" json:"host,omitempty"`
	Port          *int32  `protobuf:"varint,6,opt,name=port" json:"port,omitempty"`
	Secure        *bool   `protobuf:"varint,7,opt,name=secure" json:"secure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostgreSQLCluster) Reset() {
	*x = PostgreSQLCluster{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostgreSQLCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostgreSQLCluster) ProtoMessage() {}

func (x *PostgreSQLCluster) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PostgreSQLCluster) GetDatabaseId() string {
	if x != nil && x.DatabaseId != nil {
		return *x.DatabaseId
	}
	return ""
}

func (x *PostgreSQLCluster) GetDatabaseName() string {
	if x != nil && x.DatabaseName != nil {
		return *x.DatabaseName
	}
	return ""
}

func (x *PostgreSQLCluster) GetLogin() string {
	if x != nil && x.Login != nil {
		return *x.Login
	}
	return ""
}

func (x *PostgreSQLCluster) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *PostgreSQLCluster) GetSchema() string {
	if x != nil && x.Schema != nil {
		return *x.Schema
	}
	return ""
}

func (x *PostgreSQLCluster) GetAuth() *IamAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *PostgreSQLCluster) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *PostgreSQLCluster) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *PostgreSQLCluster) GetSecure() bool {
	if x != nil && x.Secure != nil {
		return *x.Secure
	}
	return false
}

func (x *PostgreSQLCluster) SetDatabaseId(v string) {
	x.DatabaseId = &v
}

func (x *PostgreSQLCluster) SetDatabaseName(v string) {
	x.DatabaseName = &v
}

func (x *PostgreSQLCluster) SetLogin(v string) {
	x.Login = &v
}

func (x *PostgreSQLCluster) SetPassword(v string) {
	x.Password = &v
}

func (x *PostgreSQLCluster) SetSchema(v string) {
	x.Schema = &v
}

func (x *PostgreSQLCluster) SetAuth(v *IamAuth) {
	x.Auth = v
}

func (x *PostgreSQLCluster) SetHost(v string) {
	x.Host = &v
}

func (x *PostgreSQLCluster) SetPort(v int32) {
	x.Port = &v
}

func (x *PostgreSQLCluster) SetSecure(v bool) {
	x.Secure = &v
}

func (x *PostgreSQLCluster) HasDatabaseId() bool {
	if x == nil {
		return false
	}
	return x.DatabaseId != nil
}

func (x *PostgreSQLCluster) HasDatabaseName() bool {
	if x == nil {
		return false
	}
	return x.DatabaseName != nil
}

func (x *PostgreSQLCluster) HasLogin() bool {
	if x == nil {
		return false
	}
	return x.Login != nil
}

func (x *PostgreSQLCluster) HasPassword() bool {
	if x == nil {
		return false
	}
	return x.Password != nil
}

func (x *PostgreSQLCluster) HasSchema() bool {
	if x == nil {
		return false
	}
	return x.Schema != nil
}

func (x *PostgreSQLCluster) HasAuth() bool {
	if x == nil {
		return false
	}
	return x.Auth != nil
}

func (x *PostgreSQLCluster) HasHost() bool {
	if x == nil {
		return false
	}
	return x.Host != nil
}

func (x *PostgreSQLCluster) HasPort() bool {
	if x == nil {
		return false
	}
	return x.Port != nil
}

func (x *PostgreSQLCluster) HasSecure() bool {
	if x == nil {
		return false
	}
	return x.Secure != nil
}

func (x *PostgreSQLCluster) ClearDatabaseId() {
	x.DatabaseId = nil
}

func (x *PostgreSQLCluster) ClearDatabaseName() {
	x.DatabaseName = nil
}

func (x *PostgreSQLCluster) ClearLogin() {
	x.Login = nil
}

func (x *PostgreSQLCluster) ClearPassword() {
	x.Password = nil
}

func (x *PostgreSQLCluster) ClearSchema() {
	x.Schema = nil
}

func (x *PostgreSQLCluster) ClearAuth() {
	x.Auth = nil
}

func (x *PostgreSQLCluster) ClearHost() {
	x.Host = nil
}

func (x *PostgreSQLCluster) ClearPort() {
	x.Port = nil
}

func (x *PostgreSQLCluster) ClearSecure() {
	x.Secure = nil
}

type PostgreSQLCluster_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DatabaseId   *string
	DatabaseName *string
	Login        *string
	Password     *string
	Schema       *string
	Auth         *IamAuth
	// Just for the sake of simmetry with existing ClickHouse code
	Host   *string
	Port   *int32
	Secure *bool
}

func (b0 PostgreSQLCluster_builder) Build() *PostgreSQLCluster {
	m0 := &PostgreSQLCluster{}
	b, x := &b0, m0
	_, _ = b, x
	x.DatabaseId = b.DatabaseId
	x.DatabaseName = b.DatabaseName
	x.Login = b.Login
	x.Password = b.Password
	x.Schema = b.Schema
	x.Auth = b.Auth
	x.Host = b.Host
	x.Port = b.Port
	x.Secure = b.Secure
	return m0
}

type ConnectionSetting struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Types that are valid to be assigned to Connection:
	//
	//	*ConnectionSetting_YdbDatabase
	//	*ConnectionSetting_ClickhouseCluster
	//	*ConnectionSetting_DataStreams
	//	*ConnectionSetting_ObjectStorage
	//	*ConnectionSetting_Monitoring
	//	*ConnectionSetting_PostgresqlCluster
	Connection    isConnectionSetting_Connection `protobuf_oneof:"connection"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionSetting) Reset() {
	*x = ConnectionSetting{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionSetting) ProtoMessage() {}

func (x *ConnectionSetting) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConnectionSetting) GetConnection() isConnectionSetting_Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *ConnectionSetting) GetYdbDatabase() *YdbDatabase {
	if x != nil {
		if x, ok := x.Connection.(*ConnectionSetting_YdbDatabase); ok {
			return x.YdbDatabase
		}
	}
	return nil
}

func (x *ConnectionSetting) GetClickhouseCluster() *ClickHouseCluster {
	if x != nil {
		if x, ok := x.Connection.(*ConnectionSetting_ClickhouseCluster); ok {
			return x.ClickhouseCluster
		}
	}
	return nil
}

func (x *ConnectionSetting) GetDataStreams() *DataStreams {
	if x != nil {
		if x, ok := x.Connection.(*ConnectionSetting_DataStreams); ok {
			return x.DataStreams
		}
	}
	return nil
}

func (x *ConnectionSetting) GetObjectStorage() *ObjectStorageConnection {
	if x != nil {
		if x, ok := x.Connection.(*ConnectionSetting_ObjectStorage); ok {
			return x.ObjectStorage
		}
	}
	return nil
}

func (x *ConnectionSetting) GetMonitoring() *Monitoring {
	if x != nil {
		if x, ok := x.Connection.(*ConnectionSetting_Monitoring); ok {
			return x.Monitoring
		}
	}
	return nil
}

func (x *ConnectionSetting) GetPostgresqlCluster() *PostgreSQLCluster {
	if x != nil {
		if x, ok := x.Connection.(*ConnectionSetting_PostgresqlCluster); ok {
			return x.PostgresqlCluster
		}
	}
	return nil
}

func (x *ConnectionSetting) SetYdbDatabase(v *YdbDatabase) {
	if v == nil {
		x.Connection = nil
		return
	}
	x.Connection = &ConnectionSetting_YdbDatabase{v}
}

func (x *ConnectionSetting) SetClickhouseCluster(v *ClickHouseCluster) {
	if v == nil {
		x.Connection = nil
		return
	}
	x.Connection = &ConnectionSetting_ClickhouseCluster{v}
}

func (x *ConnectionSetting) SetDataStreams(v *DataStreams) {
	if v == nil {
		x.Connection = nil
		return
	}
	x.Connection = &ConnectionSetting_DataStreams{v}
}

func (x *ConnectionSetting) SetObjectStorage(v *ObjectStorageConnection) {
	if v == nil {
		x.Connection = nil
		return
	}
	x.Connection = &ConnectionSetting_ObjectStorage{v}
}

func (x *ConnectionSetting) SetMonitoring(v *Monitoring) {
	if v == nil {
		x.Connection = nil
		return
	}
	x.Connection = &ConnectionSetting_Monitoring{v}
}

func (x *ConnectionSetting) SetPostgresqlCluster(v *PostgreSQLCluster) {
	if v == nil {
		x.Connection = nil
		return
	}
	x.Connection = &ConnectionSetting_PostgresqlCluster{v}
}

func (x *ConnectionSetting) HasConnection() bool {
	if x == nil {
		return false
	}
	return x.Connection != nil
}

func (x *ConnectionSetting) HasYdbDatabase() bool {
	if x == nil {
		return false
	}
	_, ok := x.Connection.(*ConnectionSetting_YdbDatabase)
	return ok
}

func (x *ConnectionSetting) HasClickhouseCluster() bool {
	if x == nil {
		return false
	}
	_, ok := x.Connection.(*ConnectionSetting_ClickhouseCluster)
	return ok
}

func (x *ConnectionSetting) HasDataStreams() bool {
	if x == nil {
		return false
	}
	_, ok := x.Connection.(*ConnectionSetting_DataStreams)
	return ok
}

func (x *ConnectionSetting) HasObjectStorage() bool {
	if x == nil {
		return false
	}
	_, ok := x.Connection.(*ConnectionSetting_ObjectStorage)
	return ok
}

func (x *ConnectionSetting) HasMonitoring() bool {
	if x == nil {
		return false
	}
	_, ok := x.Connection.(*ConnectionSetting_Monitoring)
	return ok
}

func (x *ConnectionSetting) HasPostgresqlCluster() bool {
	if x == nil {
		return false
	}
	_, ok := x.Connection.(*ConnectionSetting_PostgresqlCluster)
	return ok
}

func (x *ConnectionSetting) ClearConnection() {
	x.Connection = nil
}

func (x *ConnectionSetting) ClearYdbDatabase() {
	if _, ok := x.Connection.(*ConnectionSetting_YdbDatabase); ok {
		x.Connection = nil
	}
}

func (x *ConnectionSetting) ClearClickhouseCluster() {
	if _, ok := x.Connection.(*ConnectionSetting_ClickhouseCluster); ok {
		x.Connection = nil
	}
}

func (x *ConnectionSetting) ClearDataStreams() {
	if _, ok := x.Connection.(*ConnectionSetting_DataStreams); ok {
		x.Connection = nil
	}
}

func (x *ConnectionSetting) ClearObjectStorage() {
	if _, ok := x.Connection.(*ConnectionSetting_ObjectStorage); ok {
		x.Connection = nil
	}
}

func (x *ConnectionSetting) ClearMonitoring() {
	if _, ok := x.Connection.(*ConnectionSetting_Monitoring); ok {
		x.Connection = nil
	}
}

func (x *ConnectionSetting) ClearPostgresqlCluster() {
	if _, ok := x.Connection.(*ConnectionSetting_PostgresqlCluster); ok {
		x.Connection = nil
	}
}

const ConnectionSetting_Connection_not_set_case case_ConnectionSetting_Connection = 0
const ConnectionSetting_YdbDatabase_case case_ConnectionSetting_Connection = 1
const ConnectionSetting_ClickhouseCluster_case case_ConnectionSetting_Connection = 2
const ConnectionSetting_DataStreams_case case_ConnectionSetting_Connection = 3
const ConnectionSetting_ObjectStorage_case case_ConnectionSetting_Connection = 4
const ConnectionSetting_Monitoring_case case_ConnectionSetting_Connection = 5
const ConnectionSetting_PostgresqlCluster_case case_ConnectionSetting_Connection = 6

func (x *ConnectionSetting) WhichConnection() case_ConnectionSetting_Connection {
	if x == nil {
		return ConnectionSetting_Connection_not_set_case
	}
	switch x.Connection.(type) {
	case *ConnectionSetting_YdbDatabase:
		return ConnectionSetting_YdbDatabase_case
	case *ConnectionSetting_ClickhouseCluster:
		return ConnectionSetting_ClickhouseCluster_case
	case *ConnectionSetting_DataStreams:
		return ConnectionSetting_DataStreams_case
	case *ConnectionSetting_ObjectStorage:
		return ConnectionSetting_ObjectStorage_case
	case *ConnectionSetting_Monitoring:
		return ConnectionSetting_Monitoring_case
	case *ConnectionSetting_PostgresqlCluster:
		return ConnectionSetting_PostgresqlCluster_case
	default:
		return ConnectionSetting_Connection_not_set_case
	}
}

type ConnectionSetting_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof Connection:
	YdbDatabase       *YdbDatabase
	ClickhouseCluster *ClickHouseCluster
	DataStreams       *DataStreams
	ObjectStorage     *ObjectStorageConnection
	Monitoring        *Monitoring
	PostgresqlCluster *PostgreSQLCluster
	// -- end of Connection
}

func (b0 ConnectionSetting_builder) Build() *ConnectionSetting {
	m0 := &ConnectionSetting{}
	b, x := &b0, m0
	_, _ = b, x
	if b.YdbDatabase != nil {
		x.Connection = &ConnectionSetting_YdbDatabase{b.YdbDatabase}
	}
	if b.ClickhouseCluster != nil {
		x.Connection = &ConnectionSetting_ClickhouseCluster{b.ClickhouseCluster}
	}
	if b.DataStreams != nil {
		x.Connection = &ConnectionSetting_DataStreams{b.DataStreams}
	}
	if b.ObjectStorage != nil {
		x.Connection = &ConnectionSetting_ObjectStorage{b.ObjectStorage}
	}
	if b.Monitoring != nil {
		x.Connection = &ConnectionSetting_Monitoring{b.Monitoring}
	}
	if b.PostgresqlCluster != nil {
		x.Connection = &ConnectionSetting_PostgresqlCluster{b.PostgresqlCluster}
	}
	return m0
}

type case_ConnectionSetting_Connection protoreflect.FieldNumber

func (x case_ConnectionSetting_Connection) String() string {
	md := file_draft_protos_ydb_federated_query_proto_msgTypes[51].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isConnectionSetting_Connection interface {
	isConnectionSetting_Connection()
}

type ConnectionSetting_YdbDatabase struct {
	YdbDatabase *YdbDatabase `protobuf:"bytes,1,opt,name=ydb_database,json=ydbDatabase,oneof"`
}

type ConnectionSetting_ClickhouseCluster struct {
	ClickhouseCluster *ClickHouseCluster `protobuf:"bytes,2,opt,name=clickhouse_cluster,json=clickhouseCluster,oneof"`
}

type ConnectionSetting_DataStreams struct {
	DataStreams *DataStreams `protobuf:"bytes,3,opt,name=data_streams,json=dataStreams,oneof"`
}

type ConnectionSetting_ObjectStorage struct {
	ObjectStorage *ObjectStorageConnection `protobuf:"bytes,4,opt,name=object_storage,json=objectStorage,oneof"`
}

type ConnectionSetting_Monitoring struct {
	Monitoring *Monitoring `protobuf:"bytes,5,opt,name=monitoring,oneof"`
}

type ConnectionSetting_PostgresqlCluster struct {
	PostgresqlCluster *PostgreSQLCluster `protobuf:"bytes,6,opt,name=postgresql_cluster,json=postgresqlCluster,oneof"`
}

func (*ConnectionSetting_YdbDatabase) isConnectionSetting_Connection() {}

func (*ConnectionSetting_ClickhouseCluster) isConnectionSetting_Connection() {}

func (*ConnectionSetting_DataStreams) isConnectionSetting_Connection() {}

func (*ConnectionSetting_ObjectStorage) isConnectionSetting_Connection() {}

func (*ConnectionSetting_Monitoring) isConnectionSetting_Connection() {}

func (*ConnectionSetting_PostgresqlCluster) isConnectionSetting_Connection() {}

type ConnectionContent struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Setting       *ConnectionSetting     `protobuf:"bytes,2,opt,name=setting" json:"setting,omitempty"`
	Acl           *Acl                   `protobuf:"bytes,3,opt,name=acl" json:"acl,omitempty"`
	Description   *string                `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionContent) Reset() {
	*x = ConnectionContent{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionContent) ProtoMessage() {}

func (x *ConnectionContent) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConnectionContent) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ConnectionContent) GetSetting() *ConnectionSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

func (x *ConnectionContent) GetAcl() *Acl {
	if x != nil {
		return x.Acl
	}
	return nil
}

func (x *ConnectionContent) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ConnectionContent) SetName(v string) {
	x.Name = &v
}

func (x *ConnectionContent) SetSetting(v *ConnectionSetting) {
	x.Setting = v
}

func (x *ConnectionContent) SetAcl(v *Acl) {
	x.Acl = v
}

func (x *ConnectionContent) SetDescription(v string) {
	x.Description = &v
}

func (x *ConnectionContent) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *ConnectionContent) HasSetting() bool {
	if x == nil {
		return false
	}
	return x.Setting != nil
}

func (x *ConnectionContent) HasAcl() bool {
	if x == nil {
		return false
	}
	return x.Acl != nil
}

func (x *ConnectionContent) HasDescription() bool {
	if x == nil {
		return false
	}
	return x.Description != nil
}

func (x *ConnectionContent) ClearName() {
	x.Name = nil
}

func (x *ConnectionContent) ClearSetting() {
	x.Setting = nil
}

func (x *ConnectionContent) ClearAcl() {
	x.Acl = nil
}

func (x *ConnectionContent) ClearDescription() {
	x.Description = nil
}

type ConnectionContent_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name        *string
	Setting     *ConnectionSetting
	Acl         *Acl
	Description *string
}

func (b0 ConnectionContent_builder) Build() *ConnectionContent {
	m0 := &ConnectionContent{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Setting = b.Setting
	x.Acl = b.Acl
	x.Description = b.Description
	return m0
}

type Connection struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Content       *ConnectionContent     `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	Meta          *CommonMeta            `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Connection) Reset() {
	*x = Connection{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Connection) GetContent() *ConnectionContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Connection) GetMeta() *CommonMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Connection) SetContent(v *ConnectionContent) {
	x.Content = v
}

func (x *Connection) SetMeta(v *CommonMeta) {
	x.Meta = v
}

func (x *Connection) HasContent() bool {
	if x == nil {
		return false
	}
	return x.Content != nil
}

func (x *Connection) HasMeta() bool {
	if x == nil {
		return false
	}
	return x.Meta != nil
}

func (x *Connection) ClearContent() {
	x.Content = nil
}

func (x *Connection) ClearMeta() {
	x.Meta = nil
}

type Connection_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Content *ConnectionContent
	Meta    *CommonMeta
}

func (b0 Connection_builder) Build() *Connection {
	m0 := &Connection{}
	b, x := &b0, m0
	_, _ = b, x
	x.Content = b.Content
	x.Meta = b.Meta
	return m0
}

// Create a new connection
type CreateConnectionRequest struct {
	state           protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	Content         *ConnectionContent              `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	IdempotencyKey  *string                         `protobuf:"bytes,3,opt,name=idempotency_key,json=idempotencyKey" json:"idempotency_key,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateConnectionRequest) Reset() {
	*x = CreateConnectionRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionRequest) ProtoMessage() {}

func (x *CreateConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateConnectionRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *CreateConnectionRequest) GetContent() *ConnectionContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *CreateConnectionRequest) GetIdempotencyKey() string {
	if x != nil && x.IdempotencyKey != nil {
		return *x.IdempotencyKey
	}
	return ""
}

func (x *CreateConnectionRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *CreateConnectionRequest) SetContent(v *ConnectionContent) {
	x.Content = v
}

func (x *CreateConnectionRequest) SetIdempotencyKey(v string) {
	x.IdempotencyKey = &v
}

func (x *CreateConnectionRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *CreateConnectionRequest) HasContent() bool {
	if x == nil {
		return false
	}
	return x.Content != nil
}

func (x *CreateConnectionRequest) HasIdempotencyKey() bool {
	if x == nil {
		return false
	}
	return x.IdempotencyKey != nil
}

func (x *CreateConnectionRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *CreateConnectionRequest) ClearContent() {
	x.Content = nil
}

func (x *CreateConnectionRequest) ClearIdempotencyKey() {
	x.IdempotencyKey = nil
}

type CreateConnectionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	Content         *ConnectionContent
	IdempotencyKey  *string
}

func (b0 CreateConnectionRequest_builder) Build() *CreateConnectionRequest {
	m0 := &CreateConnectionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.Content = b.Content
	x.IdempotencyKey = b.IdempotencyKey
	return m0
}

type CreateConnectionResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // CreateConnectionResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConnectionResponse) Reset() {
	*x = CreateConnectionResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionResponse) ProtoMessage() {}

func (x *CreateConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateConnectionResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *CreateConnectionResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *CreateConnectionResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *CreateConnectionResponse) ClearOperation() {
	x.Operation = nil
}

type CreateConnectionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 CreateConnectionResponse_builder) Build() *CreateConnectionResponse {
	m0 := &CreateConnectionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type CreateConnectionResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	ConnectionId  *string                `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConnectionResult) Reset() {
	*x = CreateConnectionResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConnectionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionResult) ProtoMessage() {}

func (x *CreateConnectionResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateConnectionResult) GetConnectionId() string {
	if x != nil && x.ConnectionId != nil {
		return *x.ConnectionId
	}
	return ""
}

func (x *CreateConnectionResult) SetConnectionId(v string) {
	x.ConnectionId = &v
}

func (x *CreateConnectionResult) HasConnectionId() bool {
	if x == nil {
		return false
	}
	return x.ConnectionId != nil
}

func (x *CreateConnectionResult) ClearConnectionId() {
	x.ConnectionId = nil
}

type CreateConnectionResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ConnectionId *string
}

func (b0 CreateConnectionResult_builder) Build() *CreateConnectionResult {
	m0 := &CreateConnectionResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.ConnectionId = b.ConnectionId
	return m0
}

// Getting information about connections
type ListConnectionsRequest struct {
	state           protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	PageToken       *string                         `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Limit           *int32                          `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Filter          *ListConnectionsRequest_Filter  `protobuf:"bytes,4,opt,name=filter" json:"filter,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListConnectionsRequest) Reset() {
	*x = ListConnectionsRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConnectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectionsRequest) ProtoMessage() {}

func (x *ListConnectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListConnectionsRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *ListConnectionsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListConnectionsRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ListConnectionsRequest) GetFilter() *ListConnectionsRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListConnectionsRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *ListConnectionsRequest) SetPageToken(v string) {
	x.PageToken = &v
}

func (x *ListConnectionsRequest) SetLimit(v int32) {
	x.Limit = &v
}

func (x *ListConnectionsRequest) SetFilter(v *ListConnectionsRequest_Filter) {
	x.Filter = v
}

func (x *ListConnectionsRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *ListConnectionsRequest) HasPageToken() bool {
	if x == nil {
		return false
	}
	return x.PageToken != nil
}

func (x *ListConnectionsRequest) HasLimit() bool {
	if x == nil {
		return false
	}
	return x.Limit != nil
}

func (x *ListConnectionsRequest) HasFilter() bool {
	if x == nil {
		return false
	}
	return x.Filter != nil
}

func (x *ListConnectionsRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *ListConnectionsRequest) ClearPageToken() {
	x.PageToken = nil
}

func (x *ListConnectionsRequest) ClearLimit() {
	x.Limit = nil
}

func (x *ListConnectionsRequest) ClearFilter() {
	x.Filter = nil
}

type ListConnectionsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	PageToken       *string
	Limit           *int32
	Filter          *ListConnectionsRequest_Filter
}

func (b0 ListConnectionsRequest_builder) Build() *ListConnectionsRequest {
	m0 := &ListConnectionsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.PageToken = b.PageToken
	x.Limit = b.Limit
	x.Filter = b.Filter
	return m0
}

type ListConnectionsResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // ListConnectionsResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConnectionsResponse) Reset() {
	*x = ListConnectionsResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectionsResponse) ProtoMessage() {}

func (x *ListConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListConnectionsResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ListConnectionsResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *ListConnectionsResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *ListConnectionsResponse) ClearOperation() {
	x.Operation = nil
}

type ListConnectionsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 ListConnectionsResponse_builder) Build() *ListConnectionsResponse {
	m0 := &ListConnectionsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type ListConnectionsResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Connection    []*Connection          `protobuf:"bytes,1,rep,name=connection" json:"connection,omitempty"`
	NextPageToken *string                `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConnectionsResult) Reset() {
	*x = ListConnectionsResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConnectionsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectionsResult) ProtoMessage() {}

func (x *ListConnectionsResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListConnectionsResult) GetConnection() []*Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *ListConnectionsResult) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *ListConnectionsResult) SetConnection(v []*Connection) {
	x.Connection = v
}

func (x *ListConnectionsResult) SetNextPageToken(v string) {
	x.NextPageToken = &v
}

func (x *ListConnectionsResult) HasNextPageToken() bool {
	if x == nil {
		return false
	}
	return x.NextPageToken != nil
}

func (x *ListConnectionsResult) ClearNextPageToken() {
	x.NextPageToken = nil
}

type ListConnectionsResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Connection    []*Connection
	NextPageToken *string
}

func (b0 ListConnectionsResult_builder) Build() *ListConnectionsResult {
	m0 := &ListConnectionsResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.Connection = b.Connection
	x.NextPageToken = b.NextPageToken
	return m0
}

// Getting information about the connection
type DescribeConnectionRequest struct {
	state           protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	ConnectionId    *string                         `protobuf:"bytes,2,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DescribeConnectionRequest) Reset() {
	*x = DescribeConnectionRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeConnectionRequest) ProtoMessage() {}

func (x *DescribeConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeConnectionRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *DescribeConnectionRequest) GetConnectionId() string {
	if x != nil && x.ConnectionId != nil {
		return *x.ConnectionId
	}
	return ""
}

func (x *DescribeConnectionRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *DescribeConnectionRequest) SetConnectionId(v string) {
	x.ConnectionId = &v
}

func (x *DescribeConnectionRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *DescribeConnectionRequest) HasConnectionId() bool {
	if x == nil {
		return false
	}
	return x.ConnectionId != nil
}

func (x *DescribeConnectionRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *DescribeConnectionRequest) ClearConnectionId() {
	x.ConnectionId = nil
}

type DescribeConnectionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	ConnectionId    *string
}

func (b0 DescribeConnectionRequest_builder) Build() *DescribeConnectionRequest {
	m0 := &DescribeConnectionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.ConnectionId = b.ConnectionId
	return m0
}

type DescribeConnectionResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // DescribeConnectionResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeConnectionResponse) Reset() {
	*x = DescribeConnectionResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeConnectionResponse) ProtoMessage() {}

func (x *DescribeConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeConnectionResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *DescribeConnectionResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *DescribeConnectionResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *DescribeConnectionResponse) ClearOperation() {
	x.Operation = nil
}

type DescribeConnectionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 DescribeConnectionResponse_builder) Build() *DescribeConnectionResponse {
	m0 := &DescribeConnectionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type DescribeConnectionResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Connection    *Connection            `protobuf:"bytes,1,opt,name=connection" json:"connection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeConnectionResult) Reset() {
	*x = DescribeConnectionResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeConnectionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeConnectionResult) ProtoMessage() {}

func (x *DescribeConnectionResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeConnectionResult) GetConnection() *Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *DescribeConnectionResult) SetConnection(v *Connection) {
	x.Connection = v
}

func (x *DescribeConnectionResult) HasConnection() bool {
	if x == nil {
		return false
	}
	return x.Connection != nil
}

func (x *DescribeConnectionResult) ClearConnection() {
	x.Connection = nil
}

type DescribeConnectionResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Connection *Connection
}

func (b0 DescribeConnectionResult_builder) Build() *DescribeConnectionResult {
	m0 := &DescribeConnectionResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.Connection = b.Connection
	return m0
}

// Change connection information. All fields must be filled in the request. The connection changes completely
type ModifyConnectionRequest struct {
	state            protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams  *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	ConnectionId     *string                         `protobuf:"bytes,2,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	Content          *ConnectionContent              `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	PreviousRevision *int64                          `protobuf:"varint,4,opt,name=previous_revision,json=previousRevision" json:"previous_revision,omitempty"`
	IdempotencyKey   *string                         `protobuf:"bytes,5,opt,name=idempotency_key,json=idempotencyKey" json:"idempotency_key,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ModifyConnectionRequest) Reset() {
	*x = ModifyConnectionRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyConnectionRequest) ProtoMessage() {}

func (x *ModifyConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ModifyConnectionRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *ModifyConnectionRequest) GetConnectionId() string {
	if x != nil && x.ConnectionId != nil {
		return *x.ConnectionId
	}
	return ""
}

func (x *ModifyConnectionRequest) GetContent() *ConnectionContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ModifyConnectionRequest) GetPreviousRevision() int64 {
	if x != nil && x.PreviousRevision != nil {
		return *x.PreviousRevision
	}
	return 0
}

func (x *ModifyConnectionRequest) GetIdempotencyKey() string {
	if x != nil && x.IdempotencyKey != nil {
		return *x.IdempotencyKey
	}
	return ""
}

func (x *ModifyConnectionRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *ModifyConnectionRequest) SetConnectionId(v string) {
	x.ConnectionId = &v
}

func (x *ModifyConnectionRequest) SetContent(v *ConnectionContent) {
	x.Content = v
}

func (x *ModifyConnectionRequest) SetPreviousRevision(v int64) {
	x.PreviousRevision = &v
}

func (x *ModifyConnectionRequest) SetIdempotencyKey(v string) {
	x.IdempotencyKey = &v
}

func (x *ModifyConnectionRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *ModifyConnectionRequest) HasConnectionId() bool {
	if x == nil {
		return false
	}
	return x.ConnectionId != nil
}

func (x *ModifyConnectionRequest) HasContent() bool {
	if x == nil {
		return false
	}
	return x.Content != nil
}

func (x *ModifyConnectionRequest) HasPreviousRevision() bool {
	if x == nil {
		return false
	}
	return x.PreviousRevision != nil
}

func (x *ModifyConnectionRequest) HasIdempotencyKey() bool {
	if x == nil {
		return false
	}
	return x.IdempotencyKey != nil
}

func (x *ModifyConnectionRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *ModifyConnectionRequest) ClearConnectionId() {
	x.ConnectionId = nil
}

func (x *ModifyConnectionRequest) ClearContent() {
	x.Content = nil
}

func (x *ModifyConnectionRequest) ClearPreviousRevision() {
	x.PreviousRevision = nil
}

func (x *ModifyConnectionRequest) ClearIdempotencyKey() {
	x.IdempotencyKey = nil
}

type ModifyConnectionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams  *Ydb_Operations.OperationParams
	ConnectionId     *string
	Content          *ConnectionContent
	PreviousRevision *int64
	IdempotencyKey   *string
}

func (b0 ModifyConnectionRequest_builder) Build() *ModifyConnectionRequest {
	m0 := &ModifyConnectionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.ConnectionId = b.ConnectionId
	x.Content = b.Content
	x.PreviousRevision = b.PreviousRevision
	x.IdempotencyKey = b.IdempotencyKey
	return m0
}

type ModifyConnectionResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // ModifyConnectionResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyConnectionResponse) Reset() {
	*x = ModifyConnectionResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyConnectionResponse) ProtoMessage() {}

func (x *ModifyConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ModifyConnectionResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ModifyConnectionResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *ModifyConnectionResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *ModifyConnectionResponse) ClearOperation() {
	x.Operation = nil
}

type ModifyConnectionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 ModifyConnectionResponse_builder) Build() *ModifyConnectionResponse {
	m0 := &ModifyConnectionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type ModifyConnectionResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyConnectionResult) Reset() {
	*x = ModifyConnectionResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyConnectionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyConnectionResult) ProtoMessage() {}

func (x *ModifyConnectionResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ModifyConnectionResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ModifyConnectionResult_builder) Build() *ModifyConnectionResult {
	m0 := &ModifyConnectionResult{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

// Complete removal of connection. Recovery of the connection after this operation is not possible
type DeleteConnectionRequest struct {
	state            protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams  *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	ConnectionId     *string                         `protobuf:"bytes,2,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	PreviousRevision *int64                          `protobuf:"varint,3,opt,name=previous_revision,json=previousRevision" json:"previous_revision,omitempty"`
	IdempotencyKey   *string                         `protobuf:"bytes,4,opt,name=idempotency_key,json=idempotencyKey" json:"idempotency_key,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeleteConnectionRequest) Reset() {
	*x = DeleteConnectionRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionRequest) ProtoMessage() {}

func (x *DeleteConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteConnectionRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *DeleteConnectionRequest) GetConnectionId() string {
	if x != nil && x.ConnectionId != nil {
		return *x.ConnectionId
	}
	return ""
}

func (x *DeleteConnectionRequest) GetPreviousRevision() int64 {
	if x != nil && x.PreviousRevision != nil {
		return *x.PreviousRevision
	}
	return 0
}

func (x *DeleteConnectionRequest) GetIdempotencyKey() string {
	if x != nil && x.IdempotencyKey != nil {
		return *x.IdempotencyKey
	}
	return ""
}

func (x *DeleteConnectionRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *DeleteConnectionRequest) SetConnectionId(v string) {
	x.ConnectionId = &v
}

func (x *DeleteConnectionRequest) SetPreviousRevision(v int64) {
	x.PreviousRevision = &v
}

func (x *DeleteConnectionRequest) SetIdempotencyKey(v string) {
	x.IdempotencyKey = &v
}

func (x *DeleteConnectionRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *DeleteConnectionRequest) HasConnectionId() bool {
	if x == nil {
		return false
	}
	return x.ConnectionId != nil
}

func (x *DeleteConnectionRequest) HasPreviousRevision() bool {
	if x == nil {
		return false
	}
	return x.PreviousRevision != nil
}

func (x *DeleteConnectionRequest) HasIdempotencyKey() bool {
	if x == nil {
		return false
	}
	return x.IdempotencyKey != nil
}

func (x *DeleteConnectionRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *DeleteConnectionRequest) ClearConnectionId() {
	x.ConnectionId = nil
}

func (x *DeleteConnectionRequest) ClearPreviousRevision() {
	x.PreviousRevision = nil
}

func (x *DeleteConnectionRequest) ClearIdempotencyKey() {
	x.IdempotencyKey = nil
}

type DeleteConnectionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams  *Ydb_Operations.OperationParams
	ConnectionId     *string
	PreviousRevision *int64
	IdempotencyKey   *string
}

func (b0 DeleteConnectionRequest_builder) Build() *DeleteConnectionRequest {
	m0 := &DeleteConnectionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.ConnectionId = b.ConnectionId
	x.PreviousRevision = b.PreviousRevision
	x.IdempotencyKey = b.IdempotencyKey
	return m0
}

type DeleteConnectionResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // DeleteConnectionResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteConnectionResponse) Reset() {
	*x = DeleteConnectionResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionResponse) ProtoMessage() {}

func (x *DeleteConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteConnectionResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *DeleteConnectionResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *DeleteConnectionResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *DeleteConnectionResponse) ClearOperation() {
	x.Operation = nil
}

type DeleteConnectionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 DeleteConnectionResponse_builder) Build() *DeleteConnectionResponse {
	m0 := &DeleteConnectionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type DeleteConnectionResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteConnectionResult) Reset() {
	*x = DeleteConnectionResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConnectionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionResult) ProtoMessage() {}

func (x *DeleteConnectionResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type DeleteConnectionResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 DeleteConnectionResult_builder) Build() *DeleteConnectionResult {
	m0 := &DeleteConnectionResult{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type TestConnectionRequest struct {
	state           protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	Setting         *ConnectionSetting              `protobuf:"bytes,2,opt,name=setting" json:"setting,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TestConnectionRequest) Reset() {
	*x = TestConnectionRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestConnectionRequest) ProtoMessage() {}

func (x *TestConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TestConnectionRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *TestConnectionRequest) GetSetting() *ConnectionSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

func (x *TestConnectionRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *TestConnectionRequest) SetSetting(v *ConnectionSetting) {
	x.Setting = v
}

func (x *TestConnectionRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *TestConnectionRequest) HasSetting() bool {
	if x == nil {
		return false
	}
	return x.Setting != nil
}

func (x *TestConnectionRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *TestConnectionRequest) ClearSetting() {
	x.Setting = nil
}

type TestConnectionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	Setting         *ConnectionSetting
}

func (b0 TestConnectionRequest_builder) Build() *TestConnectionRequest {
	m0 := &TestConnectionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.Setting = b.Setting
	return m0
}

type TestConnectionResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // TestConnectionResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestConnectionResponse) Reset() {
	*x = TestConnectionResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestConnectionResponse) ProtoMessage() {}

func (x *TestConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TestConnectionResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *TestConnectionResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *TestConnectionResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *TestConnectionResponse) ClearOperation() {
	x.Operation = nil
}

type TestConnectionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 TestConnectionResponse_builder) Build() *TestConnectionResponse {
	m0 := &TestConnectionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type TestConnectionResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestConnectionResult) Reset() {
	*x = TestConnectionResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestConnectionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestConnectionResult) ProtoMessage() {}

func (x *TestConnectionResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type TestConnectionResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 TestConnectionResult_builder) Build() *TestConnectionResult {
	m0 := &TestConnectionResult{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

// Getting the result of the query execution
type GetResultDataRequest struct {
	state           protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	QueryId         *string                         `protobuf:"bytes,2,opt,name=query_id,json=queryId" json:"query_id,omitempty"`
	ResultSetIndex  *int32                          `protobuf:"varint,3,opt,name=result_set_index,json=resultSetIndex" json:"result_set_index,omitempty"`
	Offset          *int64                          `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	Limit           *int64                          `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetResultDataRequest) Reset() {
	*x = GetResultDataRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResultDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResultDataRequest) ProtoMessage() {}

func (x *GetResultDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetResultDataRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *GetResultDataRequest) GetQueryId() string {
	if x != nil && x.QueryId != nil {
		return *x.QueryId
	}
	return ""
}

func (x *GetResultDataRequest) GetResultSetIndex() int32 {
	if x != nil && x.ResultSetIndex != nil {
		return *x.ResultSetIndex
	}
	return 0
}

func (x *GetResultDataRequest) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *GetResultDataRequest) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetResultDataRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *GetResultDataRequest) SetQueryId(v string) {
	x.QueryId = &v
}

func (x *GetResultDataRequest) SetResultSetIndex(v int32) {
	x.ResultSetIndex = &v
}

func (x *GetResultDataRequest) SetOffset(v int64) {
	x.Offset = &v
}

func (x *GetResultDataRequest) SetLimit(v int64) {
	x.Limit = &v
}

func (x *GetResultDataRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *GetResultDataRequest) HasQueryId() bool {
	if x == nil {
		return false
	}
	return x.QueryId != nil
}

func (x *GetResultDataRequest) HasResultSetIndex() bool {
	if x == nil {
		return false
	}
	return x.ResultSetIndex != nil
}

func (x *GetResultDataRequest) HasOffset() bool {
	if x == nil {
		return false
	}
	return x.Offset != nil
}

func (x *GetResultDataRequest) HasLimit() bool {
	if x == nil {
		return false
	}
	return x.Limit != nil
}

func (x *GetResultDataRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *GetResultDataRequest) ClearQueryId() {
	x.QueryId = nil
}

func (x *GetResultDataRequest) ClearResultSetIndex() {
	x.ResultSetIndex = nil
}

func (x *GetResultDataRequest) ClearOffset() {
	x.Offset = nil
}

func (x *GetResultDataRequest) ClearLimit() {
	x.Limit = nil
}

type GetResultDataRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	QueryId         *string
	ResultSetIndex  *int32
	Offset          *int64
	Limit           *int64
}

func (b0 GetResultDataRequest_builder) Build() *GetResultDataRequest {
	m0 := &GetResultDataRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.QueryId = b.QueryId
	x.ResultSetIndex = b.ResultSetIndex
	x.Offset = b.Offset
	x.Limit = b.Limit
	return m0
}

type GetResultDataResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // GetResultDataResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResultDataResponse) Reset() {
	*x = GetResultDataResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResultDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResultDataResponse) ProtoMessage() {}

func (x *GetResultDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetResultDataResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *GetResultDataResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *GetResultDataResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *GetResultDataResponse) ClearOperation() {
	x.Operation = nil
}

type GetResultDataResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 GetResultDataResponse_builder) Build() *GetResultDataResponse {
	m0 := &GetResultDataResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type GetResultDataResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	ResultSet     *Ydb.ResultSet         `protobuf:"bytes,1,opt,name=result_set,json=resultSet" json:"result_set,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResultDataResult) Reset() {
	*x = GetResultDataResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResultDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResultDataResult) ProtoMessage() {}

func (x *GetResultDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetResultDataResult) GetResultSet() *Ydb.ResultSet {
	if x != nil {
		return x.ResultSet
	}
	return nil
}

func (x *GetResultDataResult) SetResultSet(v *Ydb.ResultSet) {
	x.ResultSet = v
}

func (x *GetResultDataResult) HasResultSet() bool {
	if x == nil {
		return false
	}
	return x.ResultSet != nil
}

func (x *GetResultDataResult) ClearResultSet() {
	x.ResultSet = nil
}

type GetResultDataResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ResultSet *Ydb.ResultSet
}

func (b0 GetResultDataResult_builder) Build() *GetResultDataResult {
	m0 := &GetResultDataResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.ResultSet = b.ResultSet
	return m0
}

type Schema struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Column        []*Ydb.Column          `protobuf:"bytes,1,rep,name=column" json:"column,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Schema) Reset() {
	*x = Schema{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema) ProtoMessage() {}

func (x *Schema) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Schema) GetColumn() []*Ydb.Column {
	if x != nil {
		return x.Column
	}
	return nil
}

func (x *Schema) SetColumn(v []*Ydb.Column) {
	x.Column = v
}

type Schema_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Column []*Ydb.Column
}

func (b0 Schema_builder) Build() *Schema {
	m0 := &Schema{}
	b, x := &b0, m0
	_, _ = b, x
	x.Column = b.Column
	return m0
}

type DataStreamsBinding struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	StreamName    *string                `protobuf:"bytes,1,opt,name=stream_name,json=streamName" json:"stream_name,omitempty"`
	Format        *string                `protobuf:"bytes,2,opt,name=format" json:"format,omitempty"`
	Compression   *string                `protobuf:"bytes,3,opt,name=compression" json:"compression,omitempty"`
	Schema        *Schema                `protobuf:"bytes,4,opt,name=schema" json:"schema,omitempty"`
	FormatSetting map[string]string      `protobuf:"bytes,5,rep,name=format_setting,json=formatSetting" json:"format_setting,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataStreamsBinding) Reset() {
	*x = DataStreamsBinding{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataStreamsBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataStreamsBinding) ProtoMessage() {}

func (x *DataStreamsBinding) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DataStreamsBinding) GetStreamName() string {
	if x != nil && x.StreamName != nil {
		return *x.StreamName
	}
	return ""
}

func (x *DataStreamsBinding) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *DataStreamsBinding) GetCompression() string {
	if x != nil && x.Compression != nil {
		return *x.Compression
	}
	return ""
}

func (x *DataStreamsBinding) GetSchema() *Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *DataStreamsBinding) GetFormatSetting() map[string]string {
	if x != nil {
		return x.FormatSetting
	}
	return nil
}

func (x *DataStreamsBinding) SetStreamName(v string) {
	x.StreamName = &v
}

func (x *DataStreamsBinding) SetFormat(v string) {
	x.Format = &v
}

func (x *DataStreamsBinding) SetCompression(v string) {
	x.Compression = &v
}

func (x *DataStreamsBinding) SetSchema(v *Schema) {
	x.Schema = v
}

func (x *DataStreamsBinding) SetFormatSetting(v map[string]string) {
	x.FormatSetting = v
}

func (x *DataStreamsBinding) HasStreamName() bool {
	if x == nil {
		return false
	}
	return x.StreamName != nil
}

func (x *DataStreamsBinding) HasFormat() bool {
	if x == nil {
		return false
	}
	return x.Format != nil
}

func (x *DataStreamsBinding) HasCompression() bool {
	if x == nil {
		return false
	}
	return x.Compression != nil
}

func (x *DataStreamsBinding) HasSchema() bool {
	if x == nil {
		return false
	}
	return x.Schema != nil
}

func (x *DataStreamsBinding) ClearStreamName() {
	x.StreamName = nil
}

func (x *DataStreamsBinding) ClearFormat() {
	x.Format = nil
}

func (x *DataStreamsBinding) ClearCompression() {
	x.Compression = nil
}

func (x *DataStreamsBinding) ClearSchema() {
	x.Schema = nil
}

type DataStreamsBinding_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	StreamName    *string
	Format        *string
	Compression   *string
	Schema        *Schema
	FormatSetting map[string]string
}

func (b0 DataStreamsBinding_builder) Build() *DataStreamsBinding {
	m0 := &DataStreamsBinding{}
	b, x := &b0, m0
	_, _ = b, x
	x.StreamName = b.StreamName
	x.Format = b.Format
	x.Compression = b.Compression
	x.Schema = b.Schema
	x.FormatSetting = b.FormatSetting
	return m0
}

type ObjectStorageBinding struct {
	state         protoimpl.MessageState         `protogen:"hybrid.v1"`
	Subset        []*ObjectStorageBinding_Subset `protobuf:"bytes,1,rep,name=subset" json:"subset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObjectStorageBinding) Reset() {
	*x = ObjectStorageBinding{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectStorageBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageBinding) ProtoMessage() {}

func (x *ObjectStorageBinding) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ObjectStorageBinding) GetSubset() []*ObjectStorageBinding_Subset {
	if x != nil {
		return x.Subset
	}
	return nil
}

func (x *ObjectStorageBinding) SetSubset(v []*ObjectStorageBinding_Subset) {
	x.Subset = v
}

type ObjectStorageBinding_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Subset []*ObjectStorageBinding_Subset
}

func (b0 ObjectStorageBinding_builder) Build() *ObjectStorageBinding {
	m0 := &ObjectStorageBinding{}
	b, x := &b0, m0
	_, _ = b, x
	x.Subset = b.Subset
	return m0
}

type BindingSetting struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Types that are valid to be assigned to Binding:
	//
	//	*BindingSetting_DataStreams
	//	*BindingSetting_ObjectStorage
	Binding       isBindingSetting_Binding `protobuf_oneof:"binding"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BindingSetting) Reset() {
	*x = BindingSetting{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BindingSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindingSetting) ProtoMessage() {}

func (x *BindingSetting) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BindingSetting) GetBinding() isBindingSetting_Binding {
	if x != nil {
		return x.Binding
	}
	return nil
}

func (x *BindingSetting) GetDataStreams() *DataStreamsBinding {
	if x != nil {
		if x, ok := x.Binding.(*BindingSetting_DataStreams); ok {
			return x.DataStreams
		}
	}
	return nil
}

func (x *BindingSetting) GetObjectStorage() *ObjectStorageBinding {
	if x != nil {
		if x, ok := x.Binding.(*BindingSetting_ObjectStorage); ok {
			return x.ObjectStorage
		}
	}
	return nil
}

func (x *BindingSetting) SetDataStreams(v *DataStreamsBinding) {
	if v == nil {
		x.Binding = nil
		return
	}
	x.Binding = &BindingSetting_DataStreams{v}
}

func (x *BindingSetting) SetObjectStorage(v *ObjectStorageBinding) {
	if v == nil {
		x.Binding = nil
		return
	}
	x.Binding = &BindingSetting_ObjectStorage{v}
}

func (x *BindingSetting) HasBinding() bool {
	if x == nil {
		return false
	}
	return x.Binding != nil
}

func (x *BindingSetting) HasDataStreams() bool {
	if x == nil {
		return false
	}
	_, ok := x.Binding.(*BindingSetting_DataStreams)
	return ok
}

func (x *BindingSetting) HasObjectStorage() bool {
	if x == nil {
		return false
	}
	_, ok := x.Binding.(*BindingSetting_ObjectStorage)
	return ok
}

func (x *BindingSetting) ClearBinding() {
	x.Binding = nil
}

func (x *BindingSetting) ClearDataStreams() {
	if _, ok := x.Binding.(*BindingSetting_DataStreams); ok {
		x.Binding = nil
	}
}

func (x *BindingSetting) ClearObjectStorage() {
	if _, ok := x.Binding.(*BindingSetting_ObjectStorage); ok {
		x.Binding = nil
	}
}

const BindingSetting_Binding_not_set_case case_BindingSetting_Binding = 0
const BindingSetting_DataStreams_case case_BindingSetting_Binding = 1
const BindingSetting_ObjectStorage_case case_BindingSetting_Binding = 2

func (x *BindingSetting) WhichBinding() case_BindingSetting_Binding {
	if x == nil {
		return BindingSetting_Binding_not_set_case
	}
	switch x.Binding.(type) {
	case *BindingSetting_DataStreams:
		return BindingSetting_DataStreams_case
	case *BindingSetting_ObjectStorage:
		return BindingSetting_ObjectStorage_case
	default:
		return BindingSetting_Binding_not_set_case
	}
}

type BindingSetting_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof Binding:
	DataStreams   *DataStreamsBinding
	ObjectStorage *ObjectStorageBinding
	// -- end of Binding
}

func (b0 BindingSetting_builder) Build() *BindingSetting {
	m0 := &BindingSetting{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DataStreams != nil {
		x.Binding = &BindingSetting_DataStreams{b.DataStreams}
	}
	if b.ObjectStorage != nil {
		x.Binding = &BindingSetting_ObjectStorage{b.ObjectStorage}
	}
	return m0
}

type case_BindingSetting_Binding protoreflect.FieldNumber

func (x case_BindingSetting_Binding) String() string {
	md := file_draft_protos_ydb_federated_query_proto_msgTypes[78].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isBindingSetting_Binding interface {
	isBindingSetting_Binding()
}

type BindingSetting_DataStreams struct {
	DataStreams *DataStreamsBinding `protobuf:"bytes,1,opt,name=data_streams,json=dataStreams,oneof"`
}

type BindingSetting_ObjectStorage struct {
	ObjectStorage *ObjectStorageBinding `protobuf:"bytes,2,opt,name=object_storage,json=objectStorage,oneof"`
}

func (*BindingSetting_DataStreams) isBindingSetting_Binding() {}

func (*BindingSetting_ObjectStorage) isBindingSetting_Binding() {}

type BriefBinding struct {
	state         protoimpl.MessageState      `protogen:"hybrid.v1"`
	Name          *string                     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ConnectionId  *string                     `protobuf:"bytes,2,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	Meta          *CommonMeta                 `protobuf:"bytes,3,opt,name=meta" json:"meta,omitempty"`
	Type          *BindingSetting_BindingType `protobuf:"varint,4,opt,name=type,enum=FederatedQuery.BindingSetting_BindingType" json:"type,omitempty"`
	Visibility    *Acl_Visibility             `protobuf:"varint,5,opt,name=visibility,enum=FederatedQuery.Acl_Visibility" json:"visibility,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BriefBinding) Reset() {
	*x = BriefBinding{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BriefBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BriefBinding) ProtoMessage() {}

func (x *BriefBinding) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BriefBinding) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BriefBinding) GetConnectionId() string {
	if x != nil && x.ConnectionId != nil {
		return *x.ConnectionId
	}
	return ""
}

func (x *BriefBinding) GetMeta() *CommonMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *BriefBinding) GetType() BindingSetting_BindingType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return BindingSetting_BINDING_TYPE_UNSPECIFIED
}

func (x *BriefBinding) GetVisibility() Acl_Visibility {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return Acl_VISIBILITY_UNSPECIFIED
}

func (x *BriefBinding) SetName(v string) {
	x.Name = &v
}

func (x *BriefBinding) SetConnectionId(v string) {
	x.ConnectionId = &v
}

func (x *BriefBinding) SetMeta(v *CommonMeta) {
	x.Meta = v
}

func (x *BriefBinding) SetType(v BindingSetting_BindingType) {
	x.Type = &v
}

func (x *BriefBinding) SetVisibility(v Acl_Visibility) {
	x.Visibility = &v
}

func (x *BriefBinding) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *BriefBinding) HasConnectionId() bool {
	if x == nil {
		return false
	}
	return x.ConnectionId != nil
}

func (x *BriefBinding) HasMeta() bool {
	if x == nil {
		return false
	}
	return x.Meta != nil
}

func (x *BriefBinding) HasType() bool {
	if x == nil {
		return false
	}
	return x.Type != nil
}

func (x *BriefBinding) HasVisibility() bool {
	if x == nil {
		return false
	}
	return x.Visibility != nil
}

func (x *BriefBinding) ClearName() {
	x.Name = nil
}

func (x *BriefBinding) ClearConnectionId() {
	x.ConnectionId = nil
}

func (x *BriefBinding) ClearMeta() {
	x.Meta = nil
}

func (x *BriefBinding) ClearType() {
	x.Type = nil
}

func (x *BriefBinding) ClearVisibility() {
	x.Visibility = nil
}

type BriefBinding_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name         *string
	ConnectionId *string
	Meta         *CommonMeta
	Type         *BindingSetting_BindingType
	Visibility   *Acl_Visibility
}

func (b0 BriefBinding_builder) Build() *BriefBinding {
	m0 := &BriefBinding{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.ConnectionId = b.ConnectionId
	x.Meta = b.Meta
	x.Type = b.Type
	x.Visibility = b.Visibility
	return m0
}

type BindingContent struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ConnectionId  *string                `protobuf:"bytes,2,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	Setting       *BindingSetting        `protobuf:"bytes,3,opt,name=setting" json:"setting,omitempty"`
	Acl           *Acl                   `protobuf:"bytes,4,opt,name=acl" json:"acl,omitempty"`
	Description   *string                `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BindingContent) Reset() {
	*x = BindingContent{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BindingContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindingContent) ProtoMessage() {}

func (x *BindingContent) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BindingContent) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BindingContent) GetConnectionId() string {
	if x != nil && x.ConnectionId != nil {
		return *x.ConnectionId
	}
	return ""
}

func (x *BindingContent) GetSetting() *BindingSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

func (x *BindingContent) GetAcl() *Acl {
	if x != nil {
		return x.Acl
	}
	return nil
}

func (x *BindingContent) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *BindingContent) SetName(v string) {
	x.Name = &v
}

func (x *BindingContent) SetConnectionId(v string) {
	x.ConnectionId = &v
}

func (x *BindingContent) SetSetting(v *BindingSetting) {
	x.Setting = v
}

func (x *BindingContent) SetAcl(v *Acl) {
	x.Acl = v
}

func (x *BindingContent) SetDescription(v string) {
	x.Description = &v
}

func (x *BindingContent) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *BindingContent) HasConnectionId() bool {
	if x == nil {
		return false
	}
	return x.ConnectionId != nil
}

func (x *BindingContent) HasSetting() bool {
	if x == nil {
		return false
	}
	return x.Setting != nil
}

func (x *BindingContent) HasAcl() bool {
	if x == nil {
		return false
	}
	return x.Acl != nil
}

func (x *BindingContent) HasDescription() bool {
	if x == nil {
		return false
	}
	return x.Description != nil
}

func (x *BindingContent) ClearName() {
	x.Name = nil
}

func (x *BindingContent) ClearConnectionId() {
	x.ConnectionId = nil
}

func (x *BindingContent) ClearSetting() {
	x.Setting = nil
}

func (x *BindingContent) ClearAcl() {
	x.Acl = nil
}

func (x *BindingContent) ClearDescription() {
	x.Description = nil
}

type BindingContent_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name         *string
	ConnectionId *string
	Setting      *BindingSetting
	Acl          *Acl
	Description  *string
}

func (b0 BindingContent_builder) Build() *BindingContent {
	m0 := &BindingContent{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.ConnectionId = b.ConnectionId
	x.Setting = b.Setting
	x.Acl = b.Acl
	x.Description = b.Description
	return m0
}

type Binding struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Content       *BindingContent        `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	Meta          *CommonMeta            `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Binding) Reset() {
	*x = Binding{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Binding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Binding) ProtoMessage() {}

func (x *Binding) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Binding) GetContent() *BindingContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Binding) GetMeta() *CommonMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Binding) SetContent(v *BindingContent) {
	x.Content = v
}

func (x *Binding) SetMeta(v *CommonMeta) {
	x.Meta = v
}

func (x *Binding) HasContent() bool {
	if x == nil {
		return false
	}
	return x.Content != nil
}

func (x *Binding) HasMeta() bool {
	if x == nil {
		return false
	}
	return x.Meta != nil
}

func (x *Binding) ClearContent() {
	x.Content = nil
}

func (x *Binding) ClearMeta() {
	x.Meta = nil
}

type Binding_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Content *BindingContent
	Meta    *CommonMeta
}

func (b0 Binding_builder) Build() *Binding {
	m0 := &Binding{}
	b, x := &b0, m0
	_, _ = b, x
	x.Content = b.Content
	x.Meta = b.Meta
	return m0
}

// Create a new binding
type CreateBindingRequest struct {
	state           protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	Content         *BindingContent                 `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	IdempotencyKey  *string                         `protobuf:"bytes,3,opt,name=idempotency_key,json=idempotencyKey" json:"idempotency_key,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateBindingRequest) Reset() {
	*x = CreateBindingRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBindingRequest) ProtoMessage() {}

func (x *CreateBindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateBindingRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *CreateBindingRequest) GetContent() *BindingContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *CreateBindingRequest) GetIdempotencyKey() string {
	if x != nil && x.IdempotencyKey != nil {
		return *x.IdempotencyKey
	}
	return ""
}

func (x *CreateBindingRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *CreateBindingRequest) SetContent(v *BindingContent) {
	x.Content = v
}

func (x *CreateBindingRequest) SetIdempotencyKey(v string) {
	x.IdempotencyKey = &v
}

func (x *CreateBindingRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *CreateBindingRequest) HasContent() bool {
	if x == nil {
		return false
	}
	return x.Content != nil
}

func (x *CreateBindingRequest) HasIdempotencyKey() bool {
	if x == nil {
		return false
	}
	return x.IdempotencyKey != nil
}

func (x *CreateBindingRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *CreateBindingRequest) ClearContent() {
	x.Content = nil
}

func (x *CreateBindingRequest) ClearIdempotencyKey() {
	x.IdempotencyKey = nil
}

type CreateBindingRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	Content         *BindingContent
	IdempotencyKey  *string
}

func (b0 CreateBindingRequest_builder) Build() *CreateBindingRequest {
	m0 := &CreateBindingRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.Content = b.Content
	x.IdempotencyKey = b.IdempotencyKey
	return m0
}

type CreateBindingResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // CreateBindingResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBindingResponse) Reset() {
	*x = CreateBindingResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBindingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBindingResponse) ProtoMessage() {}

func (x *CreateBindingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateBindingResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *CreateBindingResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *CreateBindingResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *CreateBindingResponse) ClearOperation() {
	x.Operation = nil
}

type CreateBindingResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 CreateBindingResponse_builder) Build() *CreateBindingResponse {
	m0 := &CreateBindingResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type CreateBindingResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	BindingId     *string                `protobuf:"bytes,1,opt,name=binding_id,json=bindingId" json:"binding_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBindingResult) Reset() {
	*x = CreateBindingResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBindingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBindingResult) ProtoMessage() {}

func (x *CreateBindingResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateBindingResult) GetBindingId() string {
	if x != nil && x.BindingId != nil {
		return *x.BindingId
	}
	return ""
}

func (x *CreateBindingResult) SetBindingId(v string) {
	x.BindingId = &v
}

func (x *CreateBindingResult) HasBindingId() bool {
	if x == nil {
		return false
	}
	return x.BindingId != nil
}

func (x *CreateBindingResult) ClearBindingId() {
	x.BindingId = nil
}

type CreateBindingResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	BindingId *string
}

func (b0 CreateBindingResult_builder) Build() *CreateBindingResult {
	m0 := &CreateBindingResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.BindingId = b.BindingId
	return m0
}

// Getting information about bindings
type ListBindingsRequest struct {
	state           protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	PageToken       *string                         `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	Limit           *int32                          `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Filter          *ListBindingsRequest_Filter     `protobuf:"bytes,4,opt,name=filter" json:"filter,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListBindingsRequest) Reset() {
	*x = ListBindingsRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBindingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBindingsRequest) ProtoMessage() {}

func (x *ListBindingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListBindingsRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *ListBindingsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

func (x *ListBindingsRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ListBindingsRequest) GetFilter() *ListBindingsRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListBindingsRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *ListBindingsRequest) SetPageToken(v string) {
	x.PageToken = &v
}

func (x *ListBindingsRequest) SetLimit(v int32) {
	x.Limit = &v
}

func (x *ListBindingsRequest) SetFilter(v *ListBindingsRequest_Filter) {
	x.Filter = v
}

func (x *ListBindingsRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *ListBindingsRequest) HasPageToken() bool {
	if x == nil {
		return false
	}
	return x.PageToken != nil
}

func (x *ListBindingsRequest) HasLimit() bool {
	if x == nil {
		return false
	}
	return x.Limit != nil
}

func (x *ListBindingsRequest) HasFilter() bool {
	if x == nil {
		return false
	}
	return x.Filter != nil
}

func (x *ListBindingsRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *ListBindingsRequest) ClearPageToken() {
	x.PageToken = nil
}

func (x *ListBindingsRequest) ClearLimit() {
	x.Limit = nil
}

func (x *ListBindingsRequest) ClearFilter() {
	x.Filter = nil
}

type ListBindingsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	PageToken       *string
	Limit           *int32
	Filter          *ListBindingsRequest_Filter
}

func (b0 ListBindingsRequest_builder) Build() *ListBindingsRequest {
	m0 := &ListBindingsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.PageToken = b.PageToken
	x.Limit = b.Limit
	x.Filter = b.Filter
	return m0
}

type ListBindingsResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // ListBindingsResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBindingsResponse) Reset() {
	*x = ListBindingsResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBindingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBindingsResponse) ProtoMessage() {}

func (x *ListBindingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListBindingsResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ListBindingsResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *ListBindingsResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *ListBindingsResponse) ClearOperation() {
	x.Operation = nil
}

type ListBindingsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 ListBindingsResponse_builder) Build() *ListBindingsResponse {
	m0 := &ListBindingsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type ListBindingsResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Binding       []*BriefBinding        `protobuf:"bytes,1,rep,name=binding" json:"binding,omitempty"`
	NextPageToken *string                `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBindingsResult) Reset() {
	*x = ListBindingsResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBindingsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBindingsResult) ProtoMessage() {}

func (x *ListBindingsResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListBindingsResult) GetBinding() []*BriefBinding {
	if x != nil {
		return x.Binding
	}
	return nil
}

func (x *ListBindingsResult) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

func (x *ListBindingsResult) SetBinding(v []*BriefBinding) {
	x.Binding = v
}

func (x *ListBindingsResult) SetNextPageToken(v string) {
	x.NextPageToken = &v
}

func (x *ListBindingsResult) HasNextPageToken() bool {
	if x == nil {
		return false
	}
	return x.NextPageToken != nil
}

func (x *ListBindingsResult) ClearNextPageToken() {
	x.NextPageToken = nil
}

type ListBindingsResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Binding       []*BriefBinding
	NextPageToken *string
}

func (b0 ListBindingsResult_builder) Build() *ListBindingsResult {
	m0 := &ListBindingsResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.Binding = b.Binding
	x.NextPageToken = b.NextPageToken
	return m0
}

// Getting information about the binding
type DescribeBindingRequest struct {
	state           protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	BindingId       *string                         `protobuf:"bytes,2,opt,name=binding_id,json=bindingId" json:"binding_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DescribeBindingRequest) Reset() {
	*x = DescribeBindingRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeBindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeBindingRequest) ProtoMessage() {}

func (x *DescribeBindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeBindingRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *DescribeBindingRequest) GetBindingId() string {
	if x != nil && x.BindingId != nil {
		return *x.BindingId
	}
	return ""
}

func (x *DescribeBindingRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *DescribeBindingRequest) SetBindingId(v string) {
	x.BindingId = &v
}

func (x *DescribeBindingRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *DescribeBindingRequest) HasBindingId() bool {
	if x == nil {
		return false
	}
	return x.BindingId != nil
}

func (x *DescribeBindingRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *DescribeBindingRequest) ClearBindingId() {
	x.BindingId = nil
}

type DescribeBindingRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	BindingId       *string
}

func (b0 DescribeBindingRequest_builder) Build() *DescribeBindingRequest {
	m0 := &DescribeBindingRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.BindingId = b.BindingId
	return m0
}

type DescribeBindingResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // DescribeBindingResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeBindingResponse) Reset() {
	*x = DescribeBindingResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeBindingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeBindingResponse) ProtoMessage() {}

func (x *DescribeBindingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeBindingResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *DescribeBindingResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *DescribeBindingResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *DescribeBindingResponse) ClearOperation() {
	x.Operation = nil
}

type DescribeBindingResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 DescribeBindingResponse_builder) Build() *DescribeBindingResponse {
	m0 := &DescribeBindingResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type DescribeBindingResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Binding       *Binding               `protobuf:"bytes,1,opt,name=binding" json:"binding,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeBindingResult) Reset() {
	*x = DescribeBindingResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeBindingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeBindingResult) ProtoMessage() {}

func (x *DescribeBindingResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeBindingResult) GetBinding() *Binding {
	if x != nil {
		return x.Binding
	}
	return nil
}

func (x *DescribeBindingResult) SetBinding(v *Binding) {
	x.Binding = v
}

func (x *DescribeBindingResult) HasBinding() bool {
	if x == nil {
		return false
	}
	return x.Binding != nil
}

func (x *DescribeBindingResult) ClearBinding() {
	x.Binding = nil
}

type DescribeBindingResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Binding *Binding
}

func (b0 DescribeBindingResult_builder) Build() *DescribeBindingResult {
	m0 := &DescribeBindingResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.Binding = b.Binding
	return m0
}

// Change binding information. All fields must be filled in the request. The binding changes completely
type ModifyBindingRequest struct {
	state            protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams  *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	BindingId        *string                         `protobuf:"bytes,2,opt,name=binding_id,json=bindingId" json:"binding_id,omitempty"`
	Content          *BindingContent                 `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	PreviousRevision *int64                          `protobuf:"varint,4,opt,name=previous_revision,json=previousRevision" json:"previous_revision,omitempty"`
	IdempotencyKey   *string                         `protobuf:"bytes,5,opt,name=idempotency_key,json=idempotencyKey" json:"idempotency_key,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ModifyBindingRequest) Reset() {
	*x = ModifyBindingRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyBindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyBindingRequest) ProtoMessage() {}

func (x *ModifyBindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ModifyBindingRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *ModifyBindingRequest) GetBindingId() string {
	if x != nil && x.BindingId != nil {
		return *x.BindingId
	}
	return ""
}

func (x *ModifyBindingRequest) GetContent() *BindingContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ModifyBindingRequest) GetPreviousRevision() int64 {
	if x != nil && x.PreviousRevision != nil {
		return *x.PreviousRevision
	}
	return 0
}

func (x *ModifyBindingRequest) GetIdempotencyKey() string {
	if x != nil && x.IdempotencyKey != nil {
		return *x.IdempotencyKey
	}
	return ""
}

func (x *ModifyBindingRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *ModifyBindingRequest) SetBindingId(v string) {
	x.BindingId = &v
}

func (x *ModifyBindingRequest) SetContent(v *BindingContent) {
	x.Content = v
}

func (x *ModifyBindingRequest) SetPreviousRevision(v int64) {
	x.PreviousRevision = &v
}

func (x *ModifyBindingRequest) SetIdempotencyKey(v string) {
	x.IdempotencyKey = &v
}

func (x *ModifyBindingRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *ModifyBindingRequest) HasBindingId() bool {
	if x == nil {
		return false
	}
	return x.BindingId != nil
}

func (x *ModifyBindingRequest) HasContent() bool {
	if x == nil {
		return false
	}
	return x.Content != nil
}

func (x *ModifyBindingRequest) HasPreviousRevision() bool {
	if x == nil {
		return false
	}
	return x.PreviousRevision != nil
}

func (x *ModifyBindingRequest) HasIdempotencyKey() bool {
	if x == nil {
		return false
	}
	return x.IdempotencyKey != nil
}

func (x *ModifyBindingRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *ModifyBindingRequest) ClearBindingId() {
	x.BindingId = nil
}

func (x *ModifyBindingRequest) ClearContent() {
	x.Content = nil
}

func (x *ModifyBindingRequest) ClearPreviousRevision() {
	x.PreviousRevision = nil
}

func (x *ModifyBindingRequest) ClearIdempotencyKey() {
	x.IdempotencyKey = nil
}

type ModifyBindingRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams  *Ydb_Operations.OperationParams
	BindingId        *string
	Content          *BindingContent
	PreviousRevision *int64
	IdempotencyKey   *string
}

func (b0 ModifyBindingRequest_builder) Build() *ModifyBindingRequest {
	m0 := &ModifyBindingRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.BindingId = b.BindingId
	x.Content = b.Content
	x.PreviousRevision = b.PreviousRevision
	x.IdempotencyKey = b.IdempotencyKey
	return m0
}

type ModifyBindingResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // ModifyBindingResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyBindingResponse) Reset() {
	*x = ModifyBindingResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyBindingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyBindingResponse) ProtoMessage() {}

func (x *ModifyBindingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ModifyBindingResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ModifyBindingResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *ModifyBindingResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *ModifyBindingResponse) ClearOperation() {
	x.Operation = nil
}

type ModifyBindingResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 ModifyBindingResponse_builder) Build() *ModifyBindingResponse {
	m0 := &ModifyBindingResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type ModifyBindingResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyBindingResult) Reset() {
	*x = ModifyBindingResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyBindingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyBindingResult) ProtoMessage() {}

func (x *ModifyBindingResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ModifyBindingResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ModifyBindingResult_builder) Build() *ModifyBindingResult {
	m0 := &ModifyBindingResult{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

// Complete removal of binding. Recovery of the binding after this operation is not possible
type DeleteBindingRequest struct {
	state            protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams  *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	BindingId        *string                         `protobuf:"bytes,2,opt,name=binding_id,json=bindingId" json:"binding_id,omitempty"`
	PreviousRevision *int64                          `protobuf:"varint,3,opt,name=previous_revision,json=previousRevision" json:"previous_revision,omitempty"`
	IdempotencyKey   *string                         `protobuf:"bytes,4,opt,name=idempotency_key,json=idempotencyKey" json:"idempotency_key,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeleteBindingRequest) Reset() {
	*x = DeleteBindingRequest{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBindingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBindingRequest) ProtoMessage() {}

func (x *DeleteBindingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteBindingRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *DeleteBindingRequest) GetBindingId() string {
	if x != nil && x.BindingId != nil {
		return *x.BindingId
	}
	return ""
}

func (x *DeleteBindingRequest) GetPreviousRevision() int64 {
	if x != nil && x.PreviousRevision != nil {
		return *x.PreviousRevision
	}
	return 0
}

func (x *DeleteBindingRequest) GetIdempotencyKey() string {
	if x != nil && x.IdempotencyKey != nil {
		return *x.IdempotencyKey
	}
	return ""
}

func (x *DeleteBindingRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *DeleteBindingRequest) SetBindingId(v string) {
	x.BindingId = &v
}

func (x *DeleteBindingRequest) SetPreviousRevision(v int64) {
	x.PreviousRevision = &v
}

func (x *DeleteBindingRequest) SetIdempotencyKey(v string) {
	x.IdempotencyKey = &v
}

func (x *DeleteBindingRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *DeleteBindingRequest) HasBindingId() bool {
	if x == nil {
		return false
	}
	return x.BindingId != nil
}

func (x *DeleteBindingRequest) HasPreviousRevision() bool {
	if x == nil {
		return false
	}
	return x.PreviousRevision != nil
}

func (x *DeleteBindingRequest) HasIdempotencyKey() bool {
	if x == nil {
		return false
	}
	return x.IdempotencyKey != nil
}

func (x *DeleteBindingRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *DeleteBindingRequest) ClearBindingId() {
	x.BindingId = nil
}

func (x *DeleteBindingRequest) ClearPreviousRevision() {
	x.PreviousRevision = nil
}

func (x *DeleteBindingRequest) ClearIdempotencyKey() {
	x.IdempotencyKey = nil
}

type DeleteBindingRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams  *Ydb_Operations.OperationParams
	BindingId        *string
	PreviousRevision *int64
	IdempotencyKey   *string
}

func (b0 DeleteBindingRequest_builder) Build() *DeleteBindingRequest {
	m0 := &DeleteBindingRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.BindingId = b.BindingId
	x.PreviousRevision = b.PreviousRevision
	x.IdempotencyKey = b.IdempotencyKey
	return m0
}

type DeleteBindingResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Operation     *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"` // DeleteBindingResult
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBindingResponse) Reset() {
	*x = DeleteBindingResponse{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBindingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBindingResponse) ProtoMessage() {}

func (x *DeleteBindingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteBindingResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *DeleteBindingResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.Operation = v
}

func (x *DeleteBindingResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.Operation != nil
}

func (x *DeleteBindingResponse) ClearOperation() {
	x.Operation = nil
}

type DeleteBindingResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 DeleteBindingResponse_builder) Build() *DeleteBindingResponse {
	m0 := &DeleteBindingResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Operation = b.Operation
	return m0
}

type DeleteBindingResult struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBindingResult) Reset() {
	*x = DeleteBindingResult{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBindingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBindingResult) ProtoMessage() {}

func (x *DeleteBindingResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type DeleteBindingResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 DeleteBindingResult_builder) Build() *DeleteBindingResult {
	m0 := &DeleteBindingResult{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type StreamingDisposition_FromTime struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingDisposition_FromTime) Reset() {
	*x = StreamingDisposition_FromTime{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingDisposition_FromTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingDisposition_FromTime) ProtoMessage() {}

func (x *StreamingDisposition_FromTime) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StreamingDisposition_FromTime) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *StreamingDisposition_FromTime) SetTimestamp(v *timestamppb.Timestamp) {
	x.Timestamp = v
}

func (x *StreamingDisposition_FromTime) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.Timestamp != nil
}

func (x *StreamingDisposition_FromTime) ClearTimestamp() {
	x.Timestamp = nil
}

type StreamingDisposition_FromTime_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Timestamp *timestamppb.Timestamp
}

func (b0 StreamingDisposition_FromTime_builder) Build() *StreamingDisposition_FromTime {
	m0 := &StreamingDisposition_FromTime{}
	b, x := &b0, m0
	_, _ = b, x
	x.Timestamp = b.Timestamp
	return m0
}

type StreamingDisposition_TimeAgo struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Duration      *durationpb.Duration   `protobuf:"bytes,1,opt,name=duration" json:"duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingDisposition_TimeAgo) Reset() {
	*x = StreamingDisposition_TimeAgo{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingDisposition_TimeAgo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingDisposition_TimeAgo) ProtoMessage() {}

func (x *StreamingDisposition_TimeAgo) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StreamingDisposition_TimeAgo) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *StreamingDisposition_TimeAgo) SetDuration(v *durationpb.Duration) {
	x.Duration = v
}

func (x *StreamingDisposition_TimeAgo) HasDuration() bool {
	if x == nil {
		return false
	}
	return x.Duration != nil
}

func (x *StreamingDisposition_TimeAgo) ClearDuration() {
	x.Duration = nil
}

type StreamingDisposition_TimeAgo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Duration *durationpb.Duration
}

func (b0 StreamingDisposition_TimeAgo_builder) Build() *StreamingDisposition_TimeAgo {
	m0 := &StreamingDisposition_TimeAgo{}
	b, x := &b0, m0
	_, _ = b, x
	x.Duration = b.Duration
	return m0
}

type StreamingDisposition_FromLastCheckpoint struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// By default if new query streams set doesn't equal to old query streams set,
	// error will occur and query won't be allowed to load offsets for streams for the last checkpoint.
	// If this flag is set all offsets that can be matched with previous query checkpoint will be matched.
	// Others will use "fresh" streaming disposition.
	Force         *bool `protobuf:"varint,1,opt,name=force" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingDisposition_FromLastCheckpoint) Reset() {
	*x = StreamingDisposition_FromLastCheckpoint{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingDisposition_FromLastCheckpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingDisposition_FromLastCheckpoint) ProtoMessage() {}

func (x *StreamingDisposition_FromLastCheckpoint) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StreamingDisposition_FromLastCheckpoint) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

func (x *StreamingDisposition_FromLastCheckpoint) SetForce(v bool) {
	x.Force = &v
}

func (x *StreamingDisposition_FromLastCheckpoint) HasForce() bool {
	if x == nil {
		return false
	}
	return x.Force != nil
}

func (x *StreamingDisposition_FromLastCheckpoint) ClearForce() {
	x.Force = nil
}

type StreamingDisposition_FromLastCheckpoint_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// By default if new query streams set doesn't equal to old query streams set,
	// error will occur and query won't be allowed to load offsets for streams for the last checkpoint.
	// If this flag is set all offsets that can be matched with previous query checkpoint will be matched.
	// Others will use "fresh" streaming disposition.
	Force *bool
}

func (b0 StreamingDisposition_FromLastCheckpoint_builder) Build() *StreamingDisposition_FromLastCheckpoint {
	m0 := &StreamingDisposition_FromLastCheckpoint{}
	b, x := &b0, m0
	_, _ = b, x
	x.Force = b.Force
	return m0
}

type ListQueriesRequest_Filter struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	QueryType     *QueryContent_QueryType   `protobuf:"varint,1,opt,name=query_type,json=queryType,enum=FederatedQuery.QueryContent_QueryType" json:"query_type,omitempty"`
	Status        []QueryMeta_ComputeStatus `protobuf:"varint,2,rep,packed,name=status,enum=FederatedQuery.QueryMeta_ComputeStatus" json:"status,omitempty"`
	Mode          []ExecuteMode             `protobuf:"varint,3,rep,packed,name=mode,enum=FederatedQuery.ExecuteMode" json:"mode,omitempty"`
	Name          *string                   `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"` // queries whose name contains the filter.name substring
	CreatedByMe   *bool                     `protobuf:"varint,5,opt,name=created_by_me,json=createdByMe" json:"created_by_me,omitempty"`
	Visibility    *Acl_Visibility           `protobuf:"varint,6,opt,name=visibility,enum=FederatedQuery.Acl_Visibility" json:"visibility,omitempty"`
	Automatic     *AutomaticType            `protobuf:"varint,7,opt,name=automatic,enum=FederatedQuery.AutomaticType" json:"automatic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListQueriesRequest_Filter) Reset() {
	*x = ListQueriesRequest_Filter{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueriesRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueriesRequest_Filter) ProtoMessage() {}

func (x *ListQueriesRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListQueriesRequest_Filter) GetQueryType() QueryContent_QueryType {
	if x != nil && x.QueryType != nil {
		return *x.QueryType
	}
	return QueryContent_QUERY_TYPE_UNSPECIFIED
}

func (x *ListQueriesRequest_Filter) GetStatus() []QueryMeta_ComputeStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListQueriesRequest_Filter) GetMode() []ExecuteMode {
	if x != nil {
		return x.Mode
	}
	return nil
}

func (x *ListQueriesRequest_Filter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ListQueriesRequest_Filter) GetCreatedByMe() bool {
	if x != nil && x.CreatedByMe != nil {
		return *x.CreatedByMe
	}
	return false
}

func (x *ListQueriesRequest_Filter) GetVisibility() Acl_Visibility {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return Acl_VISIBILITY_UNSPECIFIED
}

func (x *ListQueriesRequest_Filter) GetAutomatic() AutomaticType {
	if x != nil && x.Automatic != nil {
		return *x.Automatic
	}
	return AutomaticType_AUTOMATIC_TYPE_UNSPECIFIED
}

func (x *ListQueriesRequest_Filter) SetQueryType(v QueryContent_QueryType) {
	x.QueryType = &v
}

func (x *ListQueriesRequest_Filter) SetStatus(v []QueryMeta_ComputeStatus) {
	x.Status = v
}

func (x *ListQueriesRequest_Filter) SetMode(v []ExecuteMode) {
	x.Mode = v
}

func (x *ListQueriesRequest_Filter) SetName(v string) {
	x.Name = &v
}

func (x *ListQueriesRequest_Filter) SetCreatedByMe(v bool) {
	x.CreatedByMe = &v
}

func (x *ListQueriesRequest_Filter) SetVisibility(v Acl_Visibility) {
	x.Visibility = &v
}

func (x *ListQueriesRequest_Filter) SetAutomatic(v AutomaticType) {
	x.Automatic = &v
}

func (x *ListQueriesRequest_Filter) HasQueryType() bool {
	if x == nil {
		return false
	}
	return x.QueryType != nil
}

func (x *ListQueriesRequest_Filter) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *ListQueriesRequest_Filter) HasCreatedByMe() bool {
	if x == nil {
		return false
	}
	return x.CreatedByMe != nil
}

func (x *ListQueriesRequest_Filter) HasVisibility() bool {
	if x == nil {
		return false
	}
	return x.Visibility != nil
}

func (x *ListQueriesRequest_Filter) HasAutomatic() bool {
	if x == nil {
		return false
	}
	return x.Automatic != nil
}

func (x *ListQueriesRequest_Filter) ClearQueryType() {
	x.QueryType = nil
}

func (x *ListQueriesRequest_Filter) ClearName() {
	x.Name = nil
}

func (x *ListQueriesRequest_Filter) ClearCreatedByMe() {
	x.CreatedByMe = nil
}

func (x *ListQueriesRequest_Filter) ClearVisibility() {
	x.Visibility = nil
}

func (x *ListQueriesRequest_Filter) ClearAutomatic() {
	x.Automatic = nil
}

type ListQueriesRequest_Filter_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	QueryType   *QueryContent_QueryType
	Status      []QueryMeta_ComputeStatus
	Mode        []ExecuteMode
	Name        *string
	CreatedByMe *bool
	Visibility  *Acl_Visibility
	Automatic   *AutomaticType
}

func (b0 ListQueriesRequest_Filter_builder) Build() *ListQueriesRequest_Filter {
	m0 := &ListQueriesRequest_Filter{}
	b, x := &b0, m0
	_, _ = b, x
	x.QueryType = b.QueryType
	x.Status = b.Status
	x.Mode = b.Mode
	x.Name = b.Name
	x.CreatedByMe = b.CreatedByMe
	x.Visibility = b.Visibility
	x.Automatic = b.Automatic
	return m0
}

type ListJobsRequest_Filter struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	QueryId       *string                `protobuf:"bytes,1,opt,name=query_id,json=queryId" json:"query_id,omitempty"`
	CreatedByMe   *bool                  `protobuf:"varint,2,opt,name=created_by_me,json=createdByMe" json:"created_by_me,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobsRequest_Filter) Reset() {
	*x = ListJobsRequest_Filter{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobsRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsRequest_Filter) ProtoMessage() {}

func (x *ListJobsRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListJobsRequest_Filter) GetQueryId() string {
	if x != nil && x.QueryId != nil {
		return *x.QueryId
	}
	return ""
}

func (x *ListJobsRequest_Filter) GetCreatedByMe() bool {
	if x != nil && x.CreatedByMe != nil {
		return *x.CreatedByMe
	}
	return false
}

func (x *ListJobsRequest_Filter) SetQueryId(v string) {
	x.QueryId = &v
}

func (x *ListJobsRequest_Filter) SetCreatedByMe(v bool) {
	x.CreatedByMe = &v
}

func (x *ListJobsRequest_Filter) HasQueryId() bool {
	if x == nil {
		return false
	}
	return x.QueryId != nil
}

func (x *ListJobsRequest_Filter) HasCreatedByMe() bool {
	if x == nil {
		return false
	}
	return x.CreatedByMe != nil
}

func (x *ListJobsRequest_Filter) ClearQueryId() {
	x.QueryId = nil
}

func (x *ListJobsRequest_Filter) ClearCreatedByMe() {
	x.CreatedByMe = nil
}

type ListJobsRequest_Filter_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	QueryId     *string
	CreatedByMe *bool
}

func (b0 ListJobsRequest_Filter_builder) Build() *ListJobsRequest_Filter {
	m0 := &ListJobsRequest_Filter{}
	b, x := &b0, m0
	_, _ = b, x
	x.QueryId = b.QueryId
	x.CreatedByMe = b.CreatedByMe
	return m0
}

type ListConnectionsRequest_Filter struct {
	state          protoimpl.MessageState            `protogen:"hybrid.v1"`
	Name           *string                           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"` // connections whose name contains the filter.name substring
	CreatedByMe    *bool                             `protobuf:"varint,2,opt,name=created_by_me,json=createdByMe" json:"created_by_me,omitempty"`
	ConnectionType *ConnectionSetting_ConnectionType `protobuf:"varint,3,opt,name=connection_type,json=connectionType,enum=FederatedQuery.ConnectionSetting_ConnectionType" json:"connection_type,omitempty"`
	Visibility     *Acl_Visibility                   `protobuf:"varint,4,opt,name=visibility,enum=FederatedQuery.Acl_Visibility" json:"visibility,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListConnectionsRequest_Filter) Reset() {
	*x = ListConnectionsRequest_Filter{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConnectionsRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectionsRequest_Filter) ProtoMessage() {}

func (x *ListConnectionsRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListConnectionsRequest_Filter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ListConnectionsRequest_Filter) GetCreatedByMe() bool {
	if x != nil && x.CreatedByMe != nil {
		return *x.CreatedByMe
	}
	return false
}

func (x *ListConnectionsRequest_Filter) GetConnectionType() ConnectionSetting_ConnectionType {
	if x != nil && x.ConnectionType != nil {
		return *x.ConnectionType
	}
	return ConnectionSetting_CONNECTION_TYPE_UNSPECIFIED
}

func (x *ListConnectionsRequest_Filter) GetVisibility() Acl_Visibility {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return Acl_VISIBILITY_UNSPECIFIED
}

func (x *ListConnectionsRequest_Filter) SetName(v string) {
	x.Name = &v
}

func (x *ListConnectionsRequest_Filter) SetCreatedByMe(v bool) {
	x.CreatedByMe = &v
}

func (x *ListConnectionsRequest_Filter) SetConnectionType(v ConnectionSetting_ConnectionType) {
	x.ConnectionType = &v
}

func (x *ListConnectionsRequest_Filter) SetVisibility(v Acl_Visibility) {
	x.Visibility = &v
}

func (x *ListConnectionsRequest_Filter) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *ListConnectionsRequest_Filter) HasCreatedByMe() bool {
	if x == nil {
		return false
	}
	return x.CreatedByMe != nil
}

func (x *ListConnectionsRequest_Filter) HasConnectionType() bool {
	if x == nil {
		return false
	}
	return x.ConnectionType != nil
}

func (x *ListConnectionsRequest_Filter) HasVisibility() bool {
	if x == nil {
		return false
	}
	return x.Visibility != nil
}

func (x *ListConnectionsRequest_Filter) ClearName() {
	x.Name = nil
}

func (x *ListConnectionsRequest_Filter) ClearCreatedByMe() {
	x.CreatedByMe = nil
}

func (x *ListConnectionsRequest_Filter) ClearConnectionType() {
	x.ConnectionType = nil
}

func (x *ListConnectionsRequest_Filter) ClearVisibility() {
	x.Visibility = nil
}

type ListConnectionsRequest_Filter_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name           *string
	CreatedByMe    *bool
	ConnectionType *ConnectionSetting_ConnectionType
	Visibility     *Acl_Visibility
}

func (b0 ListConnectionsRequest_Filter_builder) Build() *ListConnectionsRequest_Filter {
	m0 := &ListConnectionsRequest_Filter{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.CreatedByMe = b.CreatedByMe
	x.ConnectionType = b.ConnectionType
	x.Visibility = b.Visibility
	return m0
}

type ObjectStorageBinding_Subset struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	PathPattern   *string                `protobuf:"bytes,1,opt,name=path_pattern,json=pathPattern" json:"path_pattern,omitempty"`
	Format        *string                `protobuf:"bytes,2,opt,name=format" json:"format,omitempty"`
	FormatSetting map[string]string      `protobuf:"bytes,3,rep,name=format_setting,json=formatSetting" json:"format_setting,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Compression   *string                `protobuf:"bytes,4,opt,name=compression" json:"compression,omitempty"`
	Schema        *Schema                `protobuf:"bytes,5,opt,name=schema" json:"schema,omitempty"`
	// Partition projection is used to speed up the processing of highly partitioned
	// storages and automate the management of partitions. In partition projection, partition values and
	// locations are calculated from configuration rather than read from an object storage. Depending on the
	// specific characteristics of the query and underlying data, partition projection can significantly
	// reduce query execution time if it uses partitioning constraints on partition metadata retrieval. Similar
	// functionality is implemented in Athena: https://docs.aws.amazon.com/athena/latest/ug/partition-projection.html
	// Only enum, integer and date types are supported for path generation. When using projection, there must
	// be at least one element in partitioned_by. This behavior is introduced for symmetric query usage and
	// compatibility with Athena behavior.
	//
	// Example:
	// projection = {
	// "projection.enabled" : "true", // used to enable and disable partitioning
	// "projection.city.type" : "enum", // to generate the city column, the enum type will be used (enumeration of objects separated by commas)
	// "projection.city.values" : "Washington,Roma", // column values city Washington or Roma
	// "projection.code.type" : "enum", // to generate the code column, the enum type will be used (enumeration of objects separated by commas)
	// "projection.code.values" : "0,1", // column values code 0 or 1
	// "storage.location.template" : "/${city}/${code}/${device_id}" // the template to which the generated values will be substituted
	// }
	// partitioned_by = [ "city", "device_id" ] // a subset of columns that are included in partitioning
	// - If storage.location.template and partitioned_by are specified together, then the rule from storage.location.template will be used.
	// - If only partitioned_by is specified, then the Hive Metastore format will be used for storage.location.template: "/city=${city}/device_id=${device_id}"
	// The list of paths that correspond to described projection and partitioned_by values are:
	// "/Washington/0/${device_id}", "/Washington/1/${device_id}", "/Roma/0/${device_id}", "/Roma/1/${device_id}"
	Projection map[string]string `protobuf:"bytes,6,rep,name=projection" json:"projection,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// By separating the data, it is possible to limit the amount of data scanned by each query, thereby improving
	// performance and reducing costs. Therefore, user data is partition by key (in practice, this is a partition by time).
	// The partitioned_by defines the keys on which to partition data. The columns described in partitioned_by
	// must be specified in the schema. If projection is not specified, the template will be generated according to
	// partitioned_by. Similar functionality is implemented in Athena: https://docs.aws.amazon.com/athena/latest/ug/partitions.html
	//
	// Example:
	// partitioned_by = [ "city", "code", "device_id" ]
	// The corresponding storage.location.template will be as follows:
	// "/city=${city}/code=${code}/device_id=${device_id}"
	PartitionedBy []string `protobuf:"bytes,7,rep,name=partitioned_by,json=partitionedBy" json:"partitioned_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObjectStorageBinding_Subset) Reset() {
	*x = ObjectStorageBinding_Subset{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectStorageBinding_Subset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStorageBinding_Subset) ProtoMessage() {}

func (x *ObjectStorageBinding_Subset) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ObjectStorageBinding_Subset) GetPathPattern() string {
	if x != nil && x.PathPattern != nil {
		return *x.PathPattern
	}
	return ""
}

func (x *ObjectStorageBinding_Subset) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *ObjectStorageBinding_Subset) GetFormatSetting() map[string]string {
	if x != nil {
		return x.FormatSetting
	}
	return nil
}

func (x *ObjectStorageBinding_Subset) GetCompression() string {
	if x != nil && x.Compression != nil {
		return *x.Compression
	}
	return ""
}

func (x *ObjectStorageBinding_Subset) GetSchema() *Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *ObjectStorageBinding_Subset) GetProjection() map[string]string {
	if x != nil {
		return x.Projection
	}
	return nil
}

func (x *ObjectStorageBinding_Subset) GetPartitionedBy() []string {
	if x != nil {
		return x.PartitionedBy
	}
	return nil
}

func (x *ObjectStorageBinding_Subset) SetPathPattern(v string) {
	x.PathPattern = &v
}

func (x *ObjectStorageBinding_Subset) SetFormat(v string) {
	x.Format = &v
}

func (x *ObjectStorageBinding_Subset) SetFormatSetting(v map[string]string) {
	x.FormatSetting = v
}

func (x *ObjectStorageBinding_Subset) SetCompression(v string) {
	x.Compression = &v
}

func (x *ObjectStorageBinding_Subset) SetSchema(v *Schema) {
	x.Schema = v
}

func (x *ObjectStorageBinding_Subset) SetProjection(v map[string]string) {
	x.Projection = v
}

func (x *ObjectStorageBinding_Subset) SetPartitionedBy(v []string) {
	x.PartitionedBy = v
}

func (x *ObjectStorageBinding_Subset) HasPathPattern() bool {
	if x == nil {
		return false
	}
	return x.PathPattern != nil
}

func (x *ObjectStorageBinding_Subset) HasFormat() bool {
	if x == nil {
		return false
	}
	return x.Format != nil
}

func (x *ObjectStorageBinding_Subset) HasCompression() bool {
	if x == nil {
		return false
	}
	return x.Compression != nil
}

func (x *ObjectStorageBinding_Subset) HasSchema() bool {
	if x == nil {
		return false
	}
	return x.Schema != nil
}

func (x *ObjectStorageBinding_Subset) ClearPathPattern() {
	x.PathPattern = nil
}

func (x *ObjectStorageBinding_Subset) ClearFormat() {
	x.Format = nil
}

func (x *ObjectStorageBinding_Subset) ClearCompression() {
	x.Compression = nil
}

func (x *ObjectStorageBinding_Subset) ClearSchema() {
	x.Schema = nil
}

type ObjectStorageBinding_Subset_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PathPattern   *string
	Format        *string
	FormatSetting map[string]string
	Compression   *string
	Schema        *Schema
	// Partition projection is used to speed up the processing of highly partitioned
	// storages and automate the management of partitions. In partition projection, partition values and
	// locations are calculated from configuration rather than read from an object storage. Depending on the
	// specific characteristics of the query and underlying data, partition projection can significantly
	// reduce query execution time if it uses partitioning constraints on partition metadata retrieval. Similar
	// functionality is implemented in Athena: https://docs.aws.amazon.com/athena/latest/ug/partition-projection.html
	// Only enum, integer and date types are supported for path generation. When using projection, there must
	// be at least one element in partitioned_by. This behavior is introduced for symmetric query usage and
	// compatibility with Athena behavior.
	//
	// Example:
	// projection = {
	// "projection.enabled" : "true", // used to enable and disable partitioning
	// "projection.city.type" : "enum", // to generate the city column, the enum type will be used (enumeration of objects separated by commas)
	// "projection.city.values" : "Washington,Roma", // column values city Washington or Roma
	// "projection.code.type" : "enum", // to generate the code column, the enum type will be used (enumeration of objects separated by commas)
	// "projection.code.values" : "0,1", // column values code 0 or 1
	// "storage.location.template" : "/${city}/${code}/${device_id}" // the template to which the generated values will be substituted
	// }
	// partitioned_by = [ "city", "device_id" ] // a subset of columns that are included in partitioning
	// - If storage.location.template and partitioned_by are specified together, then the rule from storage.location.template will be used.
	// - If only partitioned_by is specified, then the Hive Metastore format will be used for storage.location.template: "/city=${city}/device_id=${device_id}"
	// The list of paths that correspond to described projection and partitioned_by values are:
	// "/Washington/0/${device_id}", "/Washington/1/${device_id}", "/Roma/0/${device_id}", "/Roma/1/${device_id}"
	Projection map[string]string
	// By separating the data, it is possible to limit the amount of data scanned by each query, thereby improving
	// performance and reducing costs. Therefore, user data is partition by key (in practice, this is a partition by time).
	// The partitioned_by defines the keys on which to partition data. The columns described in partitioned_by
	// must be specified in the schema. If projection is not specified, the template will be generated according to
	// partitioned_by. Similar functionality is implemented in Athena: https://docs.aws.amazon.com/athena/latest/ug/partitions.html
	//
	// Example:
	// partitioned_by = [ "city", "code", "device_id" ]
	// The corresponding storage.location.template will be as follows:
	// "/city=${city}/code=${code}/device_id=${device_id}"
	PartitionedBy []string
}

func (b0 ObjectStorageBinding_Subset_builder) Build() *ObjectStorageBinding_Subset {
	m0 := &ObjectStorageBinding_Subset{}
	b, x := &b0, m0
	_, _ = b, x
	x.PathPattern = b.PathPattern
	x.Format = b.Format
	x.FormatSetting = b.FormatSetting
	x.Compression = b.Compression
	x.Schema = b.Schema
	x.Projection = b.Projection
	x.PartitionedBy = b.PartitionedBy
	return m0
}

type ListBindingsRequest_Filter struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	ConnectionId  *string                `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"` // bindings whose name contains the filter.name substring
	CreatedByMe   *bool                  `protobuf:"varint,3,opt,name=created_by_me,json=createdByMe" json:"created_by_me,omitempty"`
	Visibility    *Acl_Visibility        `protobuf:"varint,4,opt,name=visibility,enum=FederatedQuery.Acl_Visibility" json:"visibility,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBindingsRequest_Filter) Reset() {
	*x = ListBindingsRequest_Filter{}
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBindingsRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBindingsRequest_Filter) ProtoMessage() {}

func (x *ListBindingsRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_federated_query_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListBindingsRequest_Filter) GetConnectionId() string {
	if x != nil && x.ConnectionId != nil {
		return *x.ConnectionId
	}
	return ""
}

func (x *ListBindingsRequest_Filter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ListBindingsRequest_Filter) GetCreatedByMe() bool {
	if x != nil && x.CreatedByMe != nil {
		return *x.CreatedByMe
	}
	return false
}

func (x *ListBindingsRequest_Filter) GetVisibility() Acl_Visibility {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return Acl_VISIBILITY_UNSPECIFIED
}

func (x *ListBindingsRequest_Filter) SetConnectionId(v string) {
	x.ConnectionId = &v
}

func (x *ListBindingsRequest_Filter) SetName(v string) {
	x.Name = &v
}

func (x *ListBindingsRequest_Filter) SetCreatedByMe(v bool) {
	x.CreatedByMe = &v
}

func (x *ListBindingsRequest_Filter) SetVisibility(v Acl_Visibility) {
	x.Visibility = &v
}

func (x *ListBindingsRequest_Filter) HasConnectionId() bool {
	if x == nil {
		return false
	}
	return x.ConnectionId != nil
}

func (x *ListBindingsRequest_Filter) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *ListBindingsRequest_Filter) HasCreatedByMe() bool {
	if x == nil {
		return false
	}
	return x.CreatedByMe != nil
}

func (x *ListBindingsRequest_Filter) HasVisibility() bool {
	if x == nil {
		return false
	}
	return x.Visibility != nil
}

func (x *ListBindingsRequest_Filter) ClearConnectionId() {
	x.ConnectionId = nil
}

func (x *ListBindingsRequest_Filter) ClearName() {
	x.Name = nil
}

func (x *ListBindingsRequest_Filter) ClearCreatedByMe() {
	x.CreatedByMe = nil
}

func (x *ListBindingsRequest_Filter) ClearVisibility() {
	x.Visibility = nil
}

type ListBindingsRequest_Filter_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ConnectionId *string
	Name         *string
	CreatedByMe  *bool
	Visibility   *Acl_Visibility
}

func (b0 ListBindingsRequest_Filter_builder) Build() *ListBindingsRequest_Filter {
	m0 := &ListBindingsRequest_Filter{}
	b, x := &b0, m0
	_, _ = b, x
	x.ConnectionId = b.ConnectionId
	x.Name = b.Name
	x.CreatedByMe = b.CreatedByMe
	x.Visibility = b.Visibility
	return m0
}

var File_draft_protos_ydb_federated_query_proto protoreflect.FileDescriptor

const file_draft_protos_ydb_federated_query_proto_rawDesc = "" +
	"\n" +
	"&draft/protos/ydb_federated_query.proto\x12\x0eFederatedQuery\x1a\"protos/annotations/sensitive.proto\x1a#protos/annotations/validation.proto\x1a\x1aprotos/ydb_operation.proto\x1a\x16protos/ydb_value.proto\x1a\x1eprotos/ydb_issue_message.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a!google/protobuf/go_features.proto\"\x87\x01\n" +
	"\x03Acl\x12>\n" +
	"\n" +
	"visibility\x18\x01 \x01(\x0e2\x1e.FederatedQuery.Acl.VisibilityR\n" +
	"visibility\"@\n" +
	"\n" +
	"Visibility\x12\x1a\n" +
	"\x16VISIBILITY_UNSPECIFIED\x10\x00\x12\v\n" +
	"\aPRIVATE\x10\x01\x12\t\n" +
	"\x05SCOPE\x10\x02\"\x8b\x04\n" +
	"\x06Limits\x120\n" +
	"\x0fvcpu_rate_limit\x18\x01 \x01(\x03B\b\xb2\xe6*\x04>= 0R\rvcpuRateLimit\x120\n" +
	"\x0fflow_rate_limit\x18\x02 \x01(\x03B\b\xb2\xe6*\x04>= 0R\rflowRateLimit\x120\n" +
	"\x0fvcpu_time_limit\x18\x03 \x01(\x03B\b\xb2\xe6*\x04>= 0R\rvcpuTimeLimit\x120\n" +
	"\x0fmax_result_size\x18\x04 \x01(\x03B\b\xb2\xe6*\x04>= 0R\rmaxResultSize\x120\n" +
	"\x0fmax_result_rows\x18\x05 \x01(\x03B\b\xb2\xe6*\x04>= 0R\rmaxResultRows\x12+\n" +
	"\fmemory_limit\x18\x06 \x01(\x03B\b\xb2\xe6*\x04>= 0R\vmemoryLimit\x128\n" +
	"\n" +
	"result_ttl\x18\a \x01(\v2\x19.google.protobuf.DurationR\tresultTtl\x12H\n" +
	"\x11execution_timeout\x18\b \x01(\v2\x19.google.protobuf.DurationH\x00R\x10executionTimeout\x12K\n" +
	"\x12execution_deadline\x18\t \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x11executionDeadlineB\t\n" +
	"\atimeout\"\xc1\x04\n" +
	"\x14StreamingDisposition\x120\n" +
	"\x06oldest\x18\x01 \x01(\v2\x16.google.protobuf.EmptyH\x00R\x06oldest\x12.\n" +
	"\x05fresh\x18\x02 \x01(\v2\x16.google.protobuf.EmptyH\x00R\x05fresh\x12L\n" +
	"\tfrom_time\x18\x03 \x01(\v2-.FederatedQuery.StreamingDisposition.FromTimeH\x00R\bfromTime\x12I\n" +
	"\btime_ago\x18\x04 \x01(\v2,.FederatedQuery.StreamingDisposition.TimeAgoH\x00R\atimeAgo\x12k\n" +
	"\x14from_last_checkpoint\x18\x05 \x01(\v27.FederatedQuery.StreamingDisposition.FromLastCheckpointH\x00R\x12fromLastCheckpoint\x1aD\n" +
	"\bFromTime\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a@\n" +
	"\aTimeAgo\x125\n" +
	"\bduration\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\bduration\x1a*\n" +
	"\x12FromLastCheckpoint\x12\x14\n" +
	"\x05force\x18\x01 \x01(\bR\x05forceB\r\n" +
	"\vdisposition\"\xb2\x05\n" +
	"\fQueryContent\x12:\n" +
	"\x04type\x18\x01 \x01(\x0e2&.FederatedQuery.QueryContent.QueryTypeR\x04type\x12\x1b\n" +
	"\x04name\x18\x02 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x04name\x12%\n" +
	"\x03acl\x18\x03 \x01(\v2\x13.FederatedQuery.AclR\x03acl\x12.\n" +
	"\x06limits\x18\x04 \x01(\v2\x16.FederatedQuery.LimitsR\x06limits\x12 \n" +
	"\x04text\x18\x05 \x01(\tB\f\xa2\xe6*\b\n" +
	"\x06\b\x01\x10\x80\xa0\x06R\x04text\x12\x1c\n" +
	"\tautomatic\x18\x06 \x01(\bR\tautomatic\x12)\n" +
	"\vdescription\x18\a \x01(\tB\a\xa2\xe6*\x03\x18\x80PR\vdescription\x12w\n" +
	"\x12execution_settings\x18\n" +
	" \x03(\v23.FederatedQuery.QueryContent.ExecutionSettingsEntryB\x13\xa2\xe6*\x03\x18\x80 \xaa\xe6*\b\n" +
	"\x06\n" +
	"\x04\b\x01\x10dR\x11executionSettings\x12@\n" +
	"\x06syntax\x18\v \x01(\x0e2(.FederatedQuery.QueryContent.QuerySyntaxR\x06syntax\x1aD\n" +
	"\x16ExecutionSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"E\n" +
	"\tQueryType\x12\x1a\n" +
	"\x16QUERY_TYPE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tANALYTICS\x10\x01\x12\r\n" +
	"\tSTREAMING\x10\x02\"?\n" +
	"\vQuerySyntax\x12\x1c\n" +
	"\x18QUERY_SYNTAX_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06YQL_V1\x10\x01\x12\x06\n" +
	"\x02PG\x10\x02\"\xa1\x02\n" +
	"\n" +
	"CommonMeta\x12\x1b\n" +
	"\x02id\x18\x01 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\x02id\x12*\n" +
	"\n" +
	"created_by\x18\x02 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\tcreatedBy\x12,\n" +
	"\vmodified_by\x18\x03 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\n" +
	"modifiedBy\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12;\n" +
	"\vmodified_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"modifiedAt\x12$\n" +
	"\brevision\x18\x06 \x01(\x03B\b\xb2\xe6*\x04>= 0R\brevision\"\xf0\a\n" +
	"\tQueryMeta\x122\n" +
	"\x06common\x18\x01 \x01(\v2\x1a.FederatedQuery.CommonMetaR\x06common\x12=\n" +
	"\fsubmitted_at\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\vsubmittedAt\x129\n" +
	"\n" +
	"started_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12;\n" +
	"\vfinished_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"finishedAt\x12>\n" +
	"\fexecute_mode\x18\x04 \x01(\x0e2\x1b.FederatedQuery.ExecuteModeR\vexecuteMode\x12?\n" +
	"\x06status\x18\x05 \x01(\x0e2'.FederatedQuery.QueryMeta.ComputeStatusR\x06status\x125\n" +
	"\x17last_job_query_revision\x18\x06 \x01(\x03R\x14lastJobQueryRevision\x12\x1e\n" +
	"\vlast_job_id\x18\a \x01(\tR\tlastJobId\x127\n" +
	"\texpire_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\bexpireAt\x12D\n" +
	"\x10result_expire_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\x0eresultExpireAt\x12\x1d\n" +
	"\n" +
	"started_by\x18\n" +
	" \x01(\tR\tstartedBy\x12\x1f\n" +
	"\n" +
	"aborted_by\x18\v \x01(\tH\x00R\tabortedBy\x12\x1d\n" +
	"\tpaused_by\x18\f \x01(\tH\x00R\bpausedBy\x122\n" +
	"\x15has_saved_checkpoints\x18\r \x01(\bR\x13hasSavedCheckpoints\"\x83\x02\n" +
	"\rComputeStatus\x12\x1e\n" +
	"\x1aCOMPUTE_STATUS_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bSTARTING\x10\x01\x12\x13\n" +
	"\x0fABORTED_BY_USER\x10\x02\x12\x15\n" +
	"\x11ABORTED_BY_SYSTEM\x10\x03\x12\x14\n" +
	"\x10ABORTING_BY_USER\x10\x04\x12\x16\n" +
	"\x12ABORTING_BY_SYSTEM\x10\x05\x12\f\n" +
	"\bRESUMING\x10\x06\x12\v\n" +
	"\aRUNNING\x10\a\x12\r\n" +
	"\tCOMPLETED\x10\b\x12\x0e\n" +
	"\n" +
	"COMPLETING\x10\f\x12\n" +
	"\n" +
	"\x06FAILED\x10\t\x12\v\n" +
	"\aFAILING\x10\r\x12\n" +
	"\n" +
	"\x06PAUSED\x10\v\x12\v\n" +
	"\aPAUSING\x10\n" +
	"B\b\n" +
	"\x06action\"\xf2\x01\n" +
	"\n" +
	"BriefQuery\x12:\n" +
	"\x04type\x18\x01 \x01(\x0e2&.FederatedQuery.QueryContent.QueryTypeR\x04type\x12\x1b\n" +
	"\x04name\x18\x02 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x04name\x12-\n" +
	"\x04meta\x18\x03 \x01(\v2\x19.FederatedQuery.QueryMetaR\x04meta\x12>\n" +
	"\n" +
	"visibility\x18\x04 \x01(\x0e2\x1e.FederatedQuery.Acl.VisibilityR\n" +
	"visibility\x12\x1c\n" +
	"\tautomatic\x18\x05 \x01(\bR\tautomatic\"\x1f\n" +
	"\tQueryPlan\x12\x12\n" +
	"\x04json\x18\x01 \x01(\tR\x04json\"\x1e\n" +
	"\bQueryAst\x12\x12\n" +
	"\x04data\x18\x01 \x01(\tR\x04data\"{\n" +
	"\rResultSetMeta\x12#\n" +
	"\x06column\x18\x01 \x03(\v2\v.Ydb.ColumnR\x06column\x12'\n" +
	"\n" +
	"rows_count\x18\x02 \x01(\x03B\b\xb2\xe6*\x04>= 0R\trowsCount\x12\x1c\n" +
	"\ttruncated\x18\x03 \x01(\bR\ttruncated\"\xc2\x03\n" +
	"\x05Query\x12-\n" +
	"\x04meta\x18\x01 \x01(\v2\x19.FederatedQuery.QueryMetaR\x04meta\x126\n" +
	"\acontent\x18\x02 \x01(\v2\x1c.FederatedQuery.QueryContentR\acontent\x12-\n" +
	"\x04plan\x18\x03 \x01(\v2\x19.FederatedQuery.QueryPlanR\x04plan\x12-\n" +
	"\x05issue\x18\x04 \x03(\v2\x17.Ydb.Issue.IssueMessageR\x05issue\x12@\n" +
	"\x0ftransient_issue\x18\x05 \x03(\v2\x17.Ydb.Issue.IssueMessageR\x0etransientIssue\x12?\n" +
	"\n" +
	"statistics\x18\x06 \x01(\v2\x1f.FederatedQuery.QueryStatisticsR\n" +
	"statistics\x12E\n" +
	"\x0fresult_set_meta\x18\a \x03(\v2\x1d.FederatedQuery.ResultSetMetaR\rresultSetMeta\x12*\n" +
	"\x03ast\x18\b \x01(\v2\x18.FederatedQuery.QueryAstR\x03ast\"%\n" +
	"\x0fQueryStatistics\x12\x12\n" +
	"\x04json\x18\x01 \x01(\tR\x04json\"\xd2\x02\n" +
	"\x12CreateQueryRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x126\n" +
	"\acontent\x18\x02 \x01(\v2\x1c.FederatedQuery.QueryContentR\acontent\x12>\n" +
	"\fexecute_mode\x18\x03 \x01(\x0e2\x1b.FederatedQuery.ExecuteModeR\vexecuteMode\x12F\n" +
	"\vdisposition\x18\x04 \x01(\v2$.FederatedQuery.StreamingDispositionR\vdisposition\x120\n" +
	"\x0fidempotency_key\x18\x05 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x0eidempotencyKey\"N\n" +
	"\x13CreateQueryResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"7\n" +
	"\x11CreateQueryResult\x12\"\n" +
	"\bquery_id\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\aqueryId\"\x81\x05\n" +
	"\x12ListQueriesRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12&\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\tpageToken\x12\"\n" +
	"\x05limit\x18\x03 \x01(\x05B\f\xb2\xe6*\b[1; 100]R\x05limit\x12A\n" +
	"\x06filter\x18\x04 \x01(\v2).FederatedQuery.ListQueriesRequest.FilterR\x06filter\x1a\x8f\x03\n" +
	"\x06Filter\x12E\n" +
	"\n" +
	"query_type\x18\x01 \x01(\x0e2&.FederatedQuery.QueryContent.QueryTypeR\tqueryType\x12G\n" +
	"\x06status\x18\x02 \x03(\x0e2'.FederatedQuery.QueryMeta.ComputeStatusB\x06\x9a\xe6*\x02\x18\x14R\x06status\x127\n" +
	"\x04mode\x18\x03 \x03(\x0e2\x1b.FederatedQuery.ExecuteModeB\x06\x9a\xe6*\x02\x18\x14R\x04mode\x12\x1b\n" +
	"\x04name\x18\x04 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x04name\x12\"\n" +
	"\rcreated_by_me\x18\x05 \x01(\bR\vcreatedByMe\x12>\n" +
	"\n" +
	"visibility\x18\x06 \x01(\x0e2\x1e.FederatedQuery.Acl.VisibilityR\n" +
	"visibility\x12;\n" +
	"\tautomatic\x18\a \x01(\x0e2\x1d.FederatedQuery.AutomaticTypeR\tautomatic\"N\n" +
	"\x13ListQueriesResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"v\n" +
	"\x11ListQueriesResult\x120\n" +
	"\x05query\x18\x01 \x03(\v2\x1a.FederatedQuery.BriefQueryR\x05query\x12/\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\rnextPageToken\"\x8a\x01\n" +
	"\x14DescribeQueryRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12&\n" +
	"\bquery_id\x18\x02 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\aqueryId\"P\n" +
	"\x15DescribeQueryResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"B\n" +
	"\x13DescribeQueryResult\x12+\n" +
	"\x05query\x18\x01 \x01(\v2\x15.FederatedQuery.QueryR\x05query\"\x8b\x01\n" +
	"\x15GetQueryStatusRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12&\n" +
	"\bquery_id\x18\x02 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\aqueryId\"Q\n" +
	"\x16GetQueryStatusResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"|\n" +
	"\x14GetQueryStatusResult\x12?\n" +
	"\x06status\x18\x01 \x01(\x0e2'.FederatedQuery.QueryMeta.ComputeStatusR\x06status\x12#\n" +
	"\rmeta_revision\x18\x02 \x01(\x03R\fmetaRevision\"\xf1\x01\n" +
	"\x12DeleteQueryRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12&\n" +
	"\bquery_id\x18\x02 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\aqueryId\x125\n" +
	"\x11previous_revision\x18\x03 \x01(\x03B\b\xb2\xe6*\x04>= 0R\x10previousRevision\x120\n" +
	"\x0fidempotency_key\x18\x04 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x0eidempotencyKey\"N\n" +
	"\x13DeleteQueryResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x13\n" +
	"\x11DeleteQueryResult\"\xf8\x03\n" +
	"\x12ModifyQueryRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12&\n" +
	"\bquery_id\x18\x02 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\aqueryId\x126\n" +
	"\acontent\x18\x03 \x01(\v2\x1c.FederatedQuery.QueryContentR\acontent\x12>\n" +
	"\fexecute_mode\x18\x04 \x01(\x0e2\x1b.FederatedQuery.ExecuteModeR\vexecuteMode\x12F\n" +
	"\vdisposition\x18\x05 \x01(\v2$.FederatedQuery.StreamingDispositionR\vdisposition\x12E\n" +
	"\x0fstate_load_mode\x18\x06 \x01(\x0e2\x1d.FederatedQuery.StateLoadModeR\rstateLoadMode\x125\n" +
	"\x11previous_revision\x18\a \x01(\x03B\b\xb2\xe6*\x04>= 0R\x10previousRevision\x120\n" +
	"\x0fidempotency_key\x18\b \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x0eidempotencyKey\"N\n" +
	"\x13ModifyQueryResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x13\n" +
	"\x11ModifyQueryResult\"\xa7\x02\n" +
	"\x13ControlQueryRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12&\n" +
	"\bquery_id\x18\x02 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\aqueryId\x123\n" +
	"\x06action\x18\x03 \x01(\x0e2\x1b.FederatedQuery.QueryActionR\x06action\x125\n" +
	"\x11previous_revision\x18\x04 \x01(\x03B\b\xb2\xe6*\x04>= 0R\x10previousRevision\x120\n" +
	"\x0fidempotency_key\x18\x05 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x0eidempotencyKey\"O\n" +
	"\x14ControlQueryResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x14\n" +
	"\x12ControlQueryResult\"\xaa\x02\n" +
	"\bBriefJob\x12.\n" +
	"\x04meta\x18\x01 \x01(\v2\x1a.FederatedQuery.CommonMetaR\x04meta\x128\n" +
	"\n" +
	"query_meta\x18\x03 \x01(\v2\x19.FederatedQuery.QueryMetaR\tqueryMeta\x12\x1d\n" +
	"\n" +
	"query_name\x18\t \x01(\tR\tqueryName\x12>\n" +
	"\n" +
	"visibility\x18\n" +
	" \x01(\x0e2\x1e.FederatedQuery.Acl.VisibilityR\n" +
	"visibility\x12\x1c\n" +
	"\tautomatic\x18\v \x01(\bR\tautomatic\x127\n" +
	"\texpire_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\bexpireAt\"\xf4\x04\n" +
	"\x03Job\x12.\n" +
	"\x04meta\x18\x01 \x01(\v2\x1a.FederatedQuery.CommonMetaR\x04meta\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x128\n" +
	"\n" +
	"query_meta\x18\x03 \x01(\v2\x19.FederatedQuery.QueryMetaR\tqueryMeta\x12-\n" +
	"\x04plan\x18\x04 \x01(\v2\x19.FederatedQuery.QueryPlanR\x04plan\x12-\n" +
	"\x05issue\x18\x05 \x03(\v2\x17.Ydb.Issue.IssueMessageR\x05issue\x12?\n" +
	"\n" +
	"statistics\x18\x06 \x01(\v2\x1f.FederatedQuery.QueryStatisticsR\n" +
	"statistics\x12E\n" +
	"\x0fresult_set_meta\x18\a \x03(\v2\x1d.FederatedQuery.ResultSetMetaR\rresultSetMeta\x12*\n" +
	"\x03ast\x18\b \x01(\v2\x18.FederatedQuery.QueryAstR\x03ast\x12\x1d\n" +
	"\n" +
	"query_name\x18\t \x01(\tR\tqueryName\x12%\n" +
	"\x03acl\x18\n" +
	" \x01(\v2\x13.FederatedQuery.AclR\x03acl\x12\x1c\n" +
	"\tautomatic\x18\v \x01(\bR\tautomatic\x127\n" +
	"\texpire_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\bexpireAt\x12@\n" +
	"\x06syntax\x18\r \x01(\x0e2(.FederatedQuery.QueryContent.QuerySyntaxR\x06syntax\"\xd6\x02\n" +
	"\x0fListJobsRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12&\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\tpageToken\x12\"\n" +
	"\x05limit\x18\x03 \x01(\x05B\f\xb2\xe6*\b[1; 100]R\x05limit\x12\x19\n" +
	"\bquery_id\x18\x05 \x01(\tR\aqueryId\x12>\n" +
	"\x06filter\x18\x04 \x01(\v2&.FederatedQuery.ListJobsRequest.FilterR\x06filter\x1aP\n" +
	"\x06Filter\x12\"\n" +
	"\bquery_id\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\aqueryId\x12\"\n" +
	"\rcreated_by_me\x18\x02 \x01(\bR\vcreatedByMe\"K\n" +
	"\x10ListJobsResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"m\n" +
	"\x0eListJobsResult\x12*\n" +
	"\x03job\x18\x01 \x03(\v2\x18.FederatedQuery.BriefJobR\x03job\x12/\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\rnextPageToken\"\x84\x01\n" +
	"\x12DescribeJobRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12\"\n" +
	"\x06job_id\x18\x02 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\x05jobId\"N\n" +
	"\x13DescribeJobResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\":\n" +
	"\x11DescribeJobResult\x12%\n" +
	"\x03job\x18\x01 \x01(\v2\x13.FederatedQuery.JobR\x03job\"\x15\n" +
	"\x13CurrentIAMTokenAuth\"\n" +
	"\n" +
	"\bNoneAuth\"-\n" +
	"\x12ServiceAccountAuth\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x02id\"\xdc\x01\n" +
	"\aIamAuth\x12F\n" +
	"\vcurrent_iam\x18\x01 \x01(\v2#.FederatedQuery.CurrentIAMTokenAuthH\x00R\n" +
	"currentIam\x12M\n" +
	"\x0fservice_account\x18\x02 \x01(\v2\".FederatedQuery.ServiceAccountAuthH\x00R\x0eserviceAccount\x12.\n" +
	"\x04none\x18\x03 \x01(\v2\x18.FederatedQuery.NoneAuthH\x00R\x04noneB\n" +
	"\n" +
	"\bidentity\"\xc6\x01\n" +
	"\vDataStreams\x12(\n" +
	"\vdatabase_id\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\n" +
	"databaseId\x12+\n" +
	"\x04auth\x18\x02 \x01(\v2\x17.FederatedQuery.IamAuthR\x04auth\x12#\n" +
	"\bendpoint\x18\x03 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\bendpoint\x12#\n" +
	"\bdatabase\x18\x04 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\bdatabase\x12\x16\n" +
	"\x06secure\x18\x05 \x01(\bR\x06secure\"\x7f\n" +
	"\n" +
	"Monitoring\x12!\n" +
	"\aproject\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\xc8\x01R\aproject\x12!\n" +
	"\acluster\x18\x02 \x01(\tB\a\xa2\xe6*\x03\x18\xc8\x01R\acluster\x12+\n" +
	"\x04auth\x18\x03 \x01(\v2\x17.FederatedQuery.IamAuthR\x04auth\"\xc6\x01\n" +
	"\vYdbDatabase\x12(\n" +
	"\vdatabase_id\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\n" +
	"databaseId\x12+\n" +
	"\x04auth\x18\x02 \x01(\v2\x17.FederatedQuery.IamAuthR\x04auth\x12#\n" +
	"\bendpoint\x18\x03 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\bendpoint\x12#\n" +
	"\bdatabase\x18\x04 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\bdatabase\x12\x16\n" +
	"\x06secure\x18\x05 \x01(\bR\x06secure\"\xbd\x02\n" +
	"\x11ClickHouseCluster\x12(\n" +
	"\vdatabase_id\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\n" +
	"databaseId\x12,\n" +
	"\rdatabase_name\x18\b \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\fdatabaseName\x12!\n" +
	"\x05login\x18\x02 \x01(\tB\v\xa2\xe6*\x03\x18\x80\b\xb8\xe6*\x01R\x05login\x12'\n" +
	"\bpassword\x18\x03 \x01(\tB\v\xa2\xe6*\x03\x18\x80\b\xb8\xe6*\x01R\bpassword\x12+\n" +
	"\x04auth\x18\x04 \x01(\v2\x17.FederatedQuery.IamAuthR\x04auth\x12\x1b\n" +
	"\x04host\x18\x05 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x04host\x12\"\n" +
	"\x04port\x18\x06 \x01(\x05B\x0e\xb2\xe6*\n" +
	"[0; 65536]R\x04port\x12\x16\n" +
	"\x06secure\x18\a \x01(\bR\x06secure\"g\n" +
	"\x17ObjectStorageConnection\x12\x1f\n" +
	"\x06bucket\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x06bucket\x12+\n" +
	"\x04auth\x18\x02 \x01(\v2\x17.FederatedQuery.IamAuthR\x04auth\"\xde\x02\n" +
	"\x11PostgreSQLCluster\x12(\n" +
	"\vdatabase_id\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\n" +
	"databaseId\x12,\n" +
	"\rdatabase_name\x18\b \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\fdatabaseName\x12!\n" +
	"\x05login\x18\x02 \x01(\tB\v\xa2\xe6*\x03\x18\x80\b\xb8\xe6*\x01R\x05login\x12'\n" +
	"\bpassword\x18\x03 \x01(\tB\v\xa2\xe6*\x03\x18\x80\b\xb8\xe6*\x01R\bpassword\x12\x1f\n" +
	"\x06schema\x18\t \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x06schema\x12+\n" +
	"\x04auth\x18\x04 \x01(\v2\x17.FederatedQuery.IamAuthR\x04auth\x12\x1b\n" +
	"\x04host\x18\x05 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x04host\x12\"\n" +
	"\x04port\x18\x06 \x01(\x05B\x0e\xb2\xe6*\n" +
	"[0; 65536]R\x04port\x12\x16\n" +
	"\x06secure\x18\a \x01(\bR\x06secure\"\x89\x05\n" +
	"\x11ConnectionSetting\x12@\n" +
	"\fydb_database\x18\x01 \x01(\v2\x1b.FederatedQuery.YdbDatabaseH\x00R\vydbDatabase\x12R\n" +
	"\x12clickhouse_cluster\x18\x02 \x01(\v2!.FederatedQuery.ClickHouseClusterH\x00R\x11clickhouseCluster\x12@\n" +
	"\fdata_streams\x18\x03 \x01(\v2\x1b.FederatedQuery.DataStreamsH\x00R\vdataStreams\x12P\n" +
	"\x0eobject_storage\x18\x04 \x01(\v2'.FederatedQuery.ObjectStorageConnectionH\x00R\robjectStorage\x12<\n" +
	"\n" +
	"monitoring\x18\x05 \x01(\v2\x1a.FederatedQuery.MonitoringH\x00R\n" +
	"monitoring\x12R\n" +
	"\x12postgresql_cluster\x18\x06 \x01(\v2!.FederatedQuery.PostgreSQLClusterH\x00R\x11postgresqlCluster\"\xa9\x01\n" +
	"\x0eConnectionType\x12\x1f\n" +
	"\x1bCONNECTION_TYPE_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fYDB_DATABASE\x10\x01\x12\x16\n" +
	"\x12CLICKHOUSE_CLUSTER\x10\x02\x12\x10\n" +
	"\fDATA_STREAMS\x10\x03\x12\x12\n" +
	"\x0eOBJECT_STORAGE\x10\x04\x12\x0e\n" +
	"\n" +
	"MONITORING\x10\x05\x12\x16\n" +
	"\x12POSTGRESQL_CLUSTER\x10\x06B\f\n" +
	"\n" +
	"connection\"\xc3\x01\n" +
	"\x11ConnectionContent\x12\x1f\n" +
	"\x04name\x18\x01 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\x04name\x12;\n" +
	"\asetting\x18\x02 \x01(\v2!.FederatedQuery.ConnectionSettingR\asetting\x12%\n" +
	"\x03acl\x18\x03 \x01(\v2\x13.FederatedQuery.AclR\x03acl\x12)\n" +
	"\vdescription\x18\x04 \x01(\tB\a\xa2\xe6*\x03\x18\x80PR\vdescription\"y\n" +
	"\n" +
	"Connection\x12;\n" +
	"\acontent\x18\x01 \x01(\v2!.FederatedQuery.ConnectionContentR\acontent\x12.\n" +
	"\x04meta\x18\x02 \x01(\v2\x1a.FederatedQuery.CommonMetaR\x04meta\"\xd4\x01\n" +
	"\x17CreateConnectionRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12;\n" +
	"\acontent\x18\x02 \x01(\v2!.FederatedQuery.ConnectionContentR\acontent\x120\n" +
	"\x0fidempotency_key\x18\x03 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x0eidempotencyKey\"S\n" +
	"\x18CreateConnectionResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"J\n" +
	"\x16CreateConnectionResult\x120\n" +
	"\rconnection_id\x18\x01 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\fconnectionId\"\xde\x03\n" +
	"\x16ListConnectionsRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12&\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\tpageToken\x12\"\n" +
	"\x05limit\x18\x03 \x01(\x05B\f\xb2\xe6*\b[1; 100]R\x05limit\x12E\n" +
	"\x06filter\x18\x04 \x01(\v2-.FederatedQuery.ListConnectionsRequest.FilterR\x06filter\x1a\xe4\x01\n" +
	"\x06Filter\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x04name\x12\"\n" +
	"\rcreated_by_me\x18\x02 \x01(\bR\vcreatedByMe\x12Y\n" +
	"\x0fconnection_type\x18\x03 \x01(\x0e20.FederatedQuery.ConnectionSetting.ConnectionTypeR\x0econnectionType\x12>\n" +
	"\n" +
	"visibility\x18\x04 \x01(\x0e2\x1e.FederatedQuery.Acl.VisibilityR\n" +
	"visibility\"R\n" +
	"\x17ListConnectionsResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x84\x01\n" +
	"\x15ListConnectionsResult\x12:\n" +
	"\n" +
	"connection\x18\x01 \x03(\v2\x1a.FederatedQuery.ConnectionR\n" +
	"connection\x12/\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\rnextPageToken\"\x99\x01\n" +
	"\x19DescribeConnectionRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x120\n" +
	"\rconnection_id\x18\x02 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\fconnectionId\"U\n" +
	"\x1aDescribeConnectionResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"V\n" +
	"\x18DescribeConnectionResult\x12:\n" +
	"\n" +
	"connection\x18\x01 \x01(\v2\x1a.FederatedQuery.ConnectionR\n" +
	"connection\"\xbd\x02\n" +
	"\x17ModifyConnectionRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x120\n" +
	"\rconnection_id\x18\x02 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\fconnectionId\x12;\n" +
	"\acontent\x18\x03 \x01(\v2!.FederatedQuery.ConnectionContentR\acontent\x125\n" +
	"\x11previous_revision\x18\x04 \x01(\x03B\b\xb2\xe6*\x04>= 0R\x10previousRevision\x120\n" +
	"\x0fidempotency_key\x18\x05 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x0eidempotencyKey\"S\n" +
	"\x18ModifyConnectionResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x18\n" +
	"\x16ModifyConnectionResult\"\x80\x02\n" +
	"\x17DeleteConnectionRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x120\n" +
	"\rconnection_id\x18\x02 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\fconnectionId\x125\n" +
	"\x11previous_revision\x18\x03 \x01(\x03B\b\xb2\xe6*\x04>= 0R\x10previousRevision\x120\n" +
	"\x0fidempotency_key\x18\x04 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x0eidempotencyKey\"S\n" +
	"\x18DeleteConnectionResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x18\n" +
	"\x16DeleteConnectionResult\"\xa0\x01\n" +
	"\x15TestConnectionRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12;\n" +
	"\asetting\x18\x02 \x01(\v2!.FederatedQuery.ConnectionSettingR\asetting\"Q\n" +
	"\x16TestConnectionResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x16\n" +
	"\x14TestConnectionResult\"\x85\x02\n" +
	"\x14GetResultDataRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12&\n" +
	"\bquery_id\x18\x02 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\aqueryId\x122\n" +
	"\x10result_set_index\x18\x03 \x01(\x05B\b\xb2\xe6*\x04>= 0R\x0eresultSetIndex\x12 \n" +
	"\x06offset\x18\x04 \x01(\x03B\b\xb2\xe6*\x04>= 0R\x06offset\x12#\n" +
	"\x05limit\x18\x05 \x01(\x03B\r\xb2\xe6*\t[1; 1000]R\x05limit\"P\n" +
	"\x15GetResultDataResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"D\n" +
	"\x13GetResultDataResult\x12-\n" +
	"\n" +
	"result_set\x18\x01 \x01(\v2\x0e.Ydb.ResultSetR\tresultSet\"6\n" +
	"\x06Schema\x12,\n" +
	"\x06column\x18\x01 \x03(\v2\v.Ydb.ColumnB\a\x9a\xe6*\x03\x18\xe8\aR\x06column\"\xe6\x02\n" +
	"\x12DataStreamsBinding\x12,\n" +
	"\vstream_name\x18\x01 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\n" +
	"streamName\x12\x1f\n" +
	"\x06format\x18\x02 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x06format\x12)\n" +
	"\vcompression\x18\x03 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\vcompression\x12.\n" +
	"\x06schema\x18\x04 \x01(\v2\x16.FederatedQuery.SchemaR\x06schema\x12d\n" +
	"\x0eformat_setting\x18\x05 \x03(\v25.FederatedQuery.DataStreamsBinding.FormatSettingEntryB\x06\x9a\xe6*\x02\x18dR\rformatSetting\x1a@\n" +
	"\x12FormatSettingEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x86\x05\n" +
	"\x14ObjectStorageBinding\x12C\n" +
	"\x06subset\x18\x01 \x03(\v2+.FederatedQuery.ObjectStorageBinding.SubsetR\x06subset\x1a\xa8\x04\n" +
	"\x06Subset\x12.\n" +
	"\fpath_pattern\x18\x01 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\vpathPattern\x12\x1f\n" +
	"\x06format\x18\x02 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x06format\x12m\n" +
	"\x0eformat_setting\x18\x03 \x03(\v2>.FederatedQuery.ObjectStorageBinding.Subset.FormatSettingEntryB\x06\x9a\xe6*\x02\x18dR\rformatSetting\x12)\n" +
	"\vcompression\x18\x04 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\vcompression\x12.\n" +
	"\x06schema\x18\x05 \x01(\v2\x16.FederatedQuery.SchemaR\x06schema\x12[\n" +
	"\n" +
	"projection\x18\x06 \x03(\v2;.FederatedQuery.ObjectStorageBinding.Subset.ProjectionEntryR\n" +
	"projection\x12%\n" +
	"\x0epartitioned_by\x18\a \x03(\tR\rpartitionedBy\x1a@\n" +
	"\x12FormatSettingEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a=\n" +
	"\x0fProjectionEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x86\x02\n" +
	"\x0eBindingSetting\x12G\n" +
	"\fdata_streams\x18\x01 \x01(\v2\".FederatedQuery.DataStreamsBindingH\x00R\vdataStreams\x12M\n" +
	"\x0eobject_storage\x18\x02 \x01(\v2$.FederatedQuery.ObjectStorageBindingH\x00R\robjectStorage\"Q\n" +
	"\vBindingType\x12\x1c\n" +
	"\x18BINDING_TYPE_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fDATA_STREAMS\x10\x01\x12\x12\n" +
	"\x0eOBJECT_STORAGE\x10\x02B\t\n" +
	"\abinding\"\x91\x02\n" +
	"\fBriefBinding\x12\x1f\n" +
	"\x04name\x18\x01 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\x04name\x120\n" +
	"\rconnection_id\x18\x02 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\fconnectionId\x12.\n" +
	"\x04meta\x18\x03 \x01(\v2\x1a.FederatedQuery.CommonMetaR\x04meta\x12>\n" +
	"\x04type\x18\x04 \x01(\x0e2*.FederatedQuery.BindingSetting.BindingTypeR\x04type\x12>\n" +
	"\n" +
	"visibility\x18\x05 \x01(\x0e2\x1e.FederatedQuery.Acl.VisibilityR\n" +
	"visibility\"\xef\x01\n" +
	"\x0eBindingContent\x12\x1f\n" +
	"\x04name\x18\x01 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\x04name\x120\n" +
	"\rconnection_id\x18\x02 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\fconnectionId\x128\n" +
	"\asetting\x18\x03 \x01(\v2\x1e.FederatedQuery.BindingSettingR\asetting\x12%\n" +
	"\x03acl\x18\x04 \x01(\v2\x13.FederatedQuery.AclR\x03acl\x12)\n" +
	"\vdescription\x18\x05 \x01(\tB\a\xa2\xe6*\x03\x18\x80PR\vdescription\"s\n" +
	"\aBinding\x128\n" +
	"\acontent\x18\x01 \x01(\v2\x1e.FederatedQuery.BindingContentR\acontent\x12.\n" +
	"\x04meta\x18\x02 \x01(\v2\x1a.FederatedQuery.CommonMetaR\x04meta\"\xce\x01\n" +
	"\x14CreateBindingRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x128\n" +
	"\acontent\x18\x02 \x01(\v2\x1e.FederatedQuery.BindingContentR\acontent\x120\n" +
	"\x0fidempotency_key\x18\x03 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x0eidempotencyKey\"P\n" +
	"\x15CreateBindingResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"A\n" +
	"\x13CreateBindingResult\x12*\n" +
	"\n" +
	"binding_id\x18\x01 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\tbindingId\"\xab\x03\n" +
	"\x13ListBindingsRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12&\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\tpageToken\x12\"\n" +
	"\x05limit\x18\x03 \x01(\x05B\f\xb2\xe6*\b[1; 100]R\x05limit\x12B\n" +
	"\x06filter\x18\x04 \x01(\v2*.FederatedQuery.ListBindingsRequest.FilterR\x06filter\x1a\xb7\x01\n" +
	"\x06Filter\x12,\n" +
	"\rconnection_id\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\fconnectionId\x12\x1b\n" +
	"\x04name\x18\x02 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x04name\x12\"\n" +
	"\rcreated_by_me\x18\x03 \x01(\bR\vcreatedByMe\x12>\n" +
	"\n" +
	"visibility\x18\x04 \x01(\x0e2\x1e.FederatedQuery.Acl.VisibilityR\n" +
	"visibility\"O\n" +
	"\x14ListBindingsResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"}\n" +
	"\x12ListBindingsResult\x126\n" +
	"\abinding\x18\x01 \x03(\v2\x1c.FederatedQuery.BriefBindingR\abinding\x12/\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\rnextPageToken\"\x90\x01\n" +
	"\x16DescribeBindingRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12*\n" +
	"\n" +
	"binding_id\x18\x02 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\tbindingId\"R\n" +
	"\x17DescribeBindingResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"J\n" +
	"\x15DescribeBindingResult\x121\n" +
	"\abinding\x18\x01 \x01(\v2\x17.FederatedQuery.BindingR\abinding\"\xb1\x02\n" +
	"\x14ModifyBindingRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12*\n" +
	"\n" +
	"binding_id\x18\x02 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\tbindingId\x128\n" +
	"\acontent\x18\x03 \x01(\v2\x1e.FederatedQuery.BindingContentR\acontent\x125\n" +
	"\x11previous_revision\x18\x04 \x01(\x03B\b\xb2\xe6*\x04>= 0R\x10previousRevision\x120\n" +
	"\x0fidempotency_key\x18\x05 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x0eidempotencyKey\"P\n" +
	"\x15ModifyBindingResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x15\n" +
	"\x13ModifyBindingResult\"\xf7\x01\n" +
	"\x14DeleteBindingRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12*\n" +
	"\n" +
	"binding_id\x18\x02 \x01(\tB\v\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80\bR\tbindingId\x125\n" +
	"\x11previous_revision\x18\x03 \x01(\x03B\b\xb2\xe6*\x04>= 0R\x10previousRevision\x120\n" +
	"\x0fidempotency_key\x18\x04 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x0eidempotencyKey\"P\n" +
	"\x15DeleteBindingResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x15\n" +
	"\x13DeleteBindingResult*q\n" +
	"\vExecuteMode\x12\x1c\n" +
	"\x18EXECUTE_MODE_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04SAVE\x10\x01\x12\t\n" +
	"\x05PARSE\x10\x02\x12\v\n" +
	"\aCOMPILE\x10\x03\x12\f\n" +
	"\bVALIDATE\x10\x04\x12\v\n" +
	"\aEXPLAIN\x10\x05\x12\a\n" +
	"\x03RUN\x10\x06*y\n" +
	"\vQueryAction\x12\x1c\n" +
	"\x18QUERY_ACTION_UNSPECIFIED\x10\x00\x12\t\n" +
	"\x05PAUSE\x10\x01\x12\x14\n" +
	"\x10PAUSE_GRACEFULLY\x10\x02\x12\t\n" +
	"\x05ABORT\x10\x03\x12\x14\n" +
	"\x10ABORT_GRACEFULLY\x10\x04\x12\n" +
	"\n" +
	"\x06RESUME\x10\x05*U\n" +
	"\rStateLoadMode\x12\x1f\n" +
	"\x1bSTATE_LOAD_MODE_UNSPECIFIED\x10\x00\x12\t\n" +
	"\x05EMPTY\x10\x01\x12\x18\n" +
	"\x14FROM_LAST_CHECKPOINT\x10\x02*Q\n" +
	"\rAutomaticType\x12\x1e\n" +
	"\x1aAUTOMATIC_TYPE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tAUTOMATIC\x10\x01\x12\x11\n" +
	"\rNOT_AUTOMATIC\x10\x02Bz\n" +
	"$tech.ydb.proto.draft.federated.queryZGgithub.com/ydb-platform/ydb-go-genproto/draft/protos/Ydb_FederatedQuery\xf8\x01\x01\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_draft_protos_ydb_federated_query_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_draft_protos_ydb_federated_query_proto_msgTypes = make([]protoimpl.MessageInfo, 109)
var file_draft_protos_ydb_federated_query_proto_goTypes = []any{
	(ExecuteMode)(0),                                // 0: FederatedQuery.ExecuteMode
	(QueryAction)(0),                                // 1: FederatedQuery.QueryAction
	(StateLoadMode)(0),                              // 2: FederatedQuery.StateLoadMode
	(AutomaticType)(0),                              // 3: FederatedQuery.AutomaticType
	(Acl_Visibility)(0),                             // 4: FederatedQuery.Acl.Visibility
	(QueryContent_QueryType)(0),                     // 5: FederatedQuery.QueryContent.QueryType
	(QueryContent_QuerySyntax)(0),                   // 6: FederatedQuery.QueryContent.QuerySyntax
	(QueryMeta_ComputeStatus)(0),                    // 7: FederatedQuery.QueryMeta.ComputeStatus
	(ConnectionSetting_ConnectionType)(0),           // 8: FederatedQuery.ConnectionSetting.ConnectionType
	(BindingSetting_BindingType)(0),                 // 9: FederatedQuery.BindingSetting.BindingType
	(*Acl)(nil),                                     // 10: FederatedQuery.Acl
	(*Limits)(nil),                                  // 11: FederatedQuery.Limits
	(*StreamingDisposition)(nil),                    // 12: FederatedQuery.StreamingDisposition
	(*QueryContent)(nil),                            // 13: FederatedQuery.QueryContent
	(*CommonMeta)(nil),                              // 14: FederatedQuery.CommonMeta
	(*QueryMeta)(nil),                               // 15: FederatedQuery.QueryMeta
	(*BriefQuery)(nil),                              // 16: FederatedQuery.BriefQuery
	(*QueryPlan)(nil),                               // 17: FederatedQuery.QueryPlan
	(*QueryAst)(nil),                                // 18: FederatedQuery.QueryAst
	(*ResultSetMeta)(nil),                           // 19: FederatedQuery.ResultSetMeta
	(*Query)(nil),                                   // 20: FederatedQuery.Query
	(*QueryStatistics)(nil),                         // 21: FederatedQuery.QueryStatistics
	(*CreateQueryRequest)(nil),                      // 22: FederatedQuery.CreateQueryRequest
	(*CreateQueryResponse)(nil),                     // 23: FederatedQuery.CreateQueryResponse
	(*CreateQueryResult)(nil),                       // 24: FederatedQuery.CreateQueryResult
	(*ListQueriesRequest)(nil),                      // 25: FederatedQuery.ListQueriesRequest
	(*ListQueriesResponse)(nil),                     // 26: FederatedQuery.ListQueriesResponse
	(*ListQueriesResult)(nil),                       // 27: FederatedQuery.ListQueriesResult
	(*DescribeQueryRequest)(nil),                    // 28: FederatedQuery.DescribeQueryRequest
	(*DescribeQueryResponse)(nil),                   // 29: FederatedQuery.DescribeQueryResponse
	(*DescribeQueryResult)(nil),                     // 30: FederatedQuery.DescribeQueryResult
	(*GetQueryStatusRequest)(nil),                   // 31: FederatedQuery.GetQueryStatusRequest
	(*GetQueryStatusResponse)(nil),                  // 32: FederatedQuery.GetQueryStatusResponse
	(*GetQueryStatusResult)(nil),                    // 33: FederatedQuery.GetQueryStatusResult
	(*DeleteQueryRequest)(nil),                      // 34: FederatedQuery.DeleteQueryRequest
	(*DeleteQueryResponse)(nil),                     // 35: FederatedQuery.DeleteQueryResponse
	(*DeleteQueryResult)(nil),                       // 36: FederatedQuery.DeleteQueryResult
	(*ModifyQueryRequest)(nil),                      // 37: FederatedQuery.ModifyQueryRequest
	(*ModifyQueryResponse)(nil),                     // 38: FederatedQuery.ModifyQueryResponse
	(*ModifyQueryResult)(nil),                       // 39: FederatedQuery.ModifyQueryResult
	(*ControlQueryRequest)(nil),                     // 40: FederatedQuery.ControlQueryRequest
	(*ControlQueryResponse)(nil),                    // 41: FederatedQuery.ControlQueryResponse
	(*ControlQueryResult)(nil),                      // 42: FederatedQuery.ControlQueryResult
	(*BriefJob)(nil),                                // 43: FederatedQuery.BriefJob
	(*Job)(nil),                                     // 44: FederatedQuery.Job
	(*ListJobsRequest)(nil),                         // 45: FederatedQuery.ListJobsRequest
	(*ListJobsResponse)(nil),                        // 46: FederatedQuery.ListJobsResponse
	(*ListJobsResult)(nil),                          // 47: FederatedQuery.ListJobsResult
	(*DescribeJobRequest)(nil),                      // 48: FederatedQuery.DescribeJobRequest
	(*DescribeJobResponse)(nil),                     // 49: FederatedQuery.DescribeJobResponse
	(*DescribeJobResult)(nil),                       // 50: FederatedQuery.DescribeJobResult
	(*CurrentIAMTokenAuth)(nil),                     // 51: FederatedQuery.CurrentIAMTokenAuth
	(*NoneAuth)(nil),                                // 52: FederatedQuery.NoneAuth
	(*ServiceAccountAuth)(nil),                      // 53: FederatedQuery.ServiceAccountAuth
	(*IamAuth)(nil),                                 // 54: FederatedQuery.IamAuth
	(*DataStreams)(nil),                             // 55: FederatedQuery.DataStreams
	(*Monitoring)(nil),                              // 56: FederatedQuery.Monitoring
	(*YdbDatabase)(nil),                             // 57: FederatedQuery.YdbDatabase
	(*ClickHouseCluster)(nil),                       // 58: FederatedQuery.ClickHouseCluster
	(*ObjectStorageConnection)(nil),                 // 59: FederatedQuery.ObjectStorageConnection
	(*PostgreSQLCluster)(nil),                       // 60: FederatedQuery.PostgreSQLCluster
	(*ConnectionSetting)(nil),                       // 61: FederatedQuery.ConnectionSetting
	(*ConnectionContent)(nil),                       // 62: FederatedQuery.ConnectionContent
	(*Connection)(nil),                              // 63: FederatedQuery.Connection
	(*CreateConnectionRequest)(nil),                 // 64: FederatedQuery.CreateConnectionRequest
	(*CreateConnectionResponse)(nil),                // 65: FederatedQuery.CreateConnectionResponse
	(*CreateConnectionResult)(nil),                  // 66: FederatedQuery.CreateConnectionResult
	(*ListConnectionsRequest)(nil),                  // 67: FederatedQuery.ListConnectionsRequest
	(*ListConnectionsResponse)(nil),                 // 68: FederatedQuery.ListConnectionsResponse
	(*ListConnectionsResult)(nil),                   // 69: FederatedQuery.ListConnectionsResult
	(*DescribeConnectionRequest)(nil),               // 70: FederatedQuery.DescribeConnectionRequest
	(*DescribeConnectionResponse)(nil),              // 71: FederatedQuery.DescribeConnectionResponse
	(*DescribeConnectionResult)(nil),                // 72: FederatedQuery.DescribeConnectionResult
	(*ModifyConnectionRequest)(nil),                 // 73: FederatedQuery.ModifyConnectionRequest
	(*ModifyConnectionResponse)(nil),                // 74: FederatedQuery.ModifyConnectionResponse
	(*ModifyConnectionResult)(nil),                  // 75: FederatedQuery.ModifyConnectionResult
	(*DeleteConnectionRequest)(nil),                 // 76: FederatedQuery.DeleteConnectionRequest
	(*DeleteConnectionResponse)(nil),                // 77: FederatedQuery.DeleteConnectionResponse
	(*DeleteConnectionResult)(nil),                  // 78: FederatedQuery.DeleteConnectionResult
	(*TestConnectionRequest)(nil),                   // 79: FederatedQuery.TestConnectionRequest
	(*TestConnectionResponse)(nil),                  // 80: FederatedQuery.TestConnectionResponse
	(*TestConnectionResult)(nil),                    // 81: FederatedQuery.TestConnectionResult
	(*GetResultDataRequest)(nil),                    // 82: FederatedQuery.GetResultDataRequest
	(*GetResultDataResponse)(nil),                   // 83: FederatedQuery.GetResultDataResponse
	(*GetResultDataResult)(nil),                     // 84: FederatedQuery.GetResultDataResult
	(*Schema)(nil),                                  // 85: FederatedQuery.Schema
	(*DataStreamsBinding)(nil),                      // 86: FederatedQuery.DataStreamsBinding
	(*ObjectStorageBinding)(nil),                    // 87: FederatedQuery.ObjectStorageBinding
	(*BindingSetting)(nil),                          // 88: FederatedQuery.BindingSetting
	(*BriefBinding)(nil),                            // 89: FederatedQuery.BriefBinding
	(*BindingContent)(nil),                          // 90: FederatedQuery.BindingContent
	(*Binding)(nil),                                 // 91: FederatedQuery.Binding
	(*CreateBindingRequest)(nil),                    // 92: FederatedQuery.CreateBindingRequest
	(*CreateBindingResponse)(nil),                   // 93: FederatedQuery.CreateBindingResponse
	(*CreateBindingResult)(nil),                     // 94: FederatedQuery.CreateBindingResult
	(*ListBindingsRequest)(nil),                     // 95: FederatedQuery.ListBindingsRequest
	(*ListBindingsResponse)(nil),                    // 96: FederatedQuery.ListBindingsResponse
	(*ListBindingsResult)(nil),                      // 97: FederatedQuery.ListBindingsResult
	(*DescribeBindingRequest)(nil),                  // 98: FederatedQuery.DescribeBindingRequest
	(*DescribeBindingResponse)(nil),                 // 99: FederatedQuery.DescribeBindingResponse
	(*DescribeBindingResult)(nil),                   // 100: FederatedQuery.DescribeBindingResult
	(*ModifyBindingRequest)(nil),                    // 101: FederatedQuery.ModifyBindingRequest
	(*ModifyBindingResponse)(nil),                   // 102: FederatedQuery.ModifyBindingResponse
	(*ModifyBindingResult)(nil),                     // 103: FederatedQuery.ModifyBindingResult
	(*DeleteBindingRequest)(nil),                    // 104: FederatedQuery.DeleteBindingRequest
	(*DeleteBindingResponse)(nil),                   // 105: FederatedQuery.DeleteBindingResponse
	(*DeleteBindingResult)(nil),                     // 106: FederatedQuery.DeleteBindingResult
	(*StreamingDisposition_FromTime)(nil),           // 107: FederatedQuery.StreamingDisposition.FromTime
	(*StreamingDisposition_TimeAgo)(nil),            // 108: FederatedQuery.StreamingDisposition.TimeAgo
	(*StreamingDisposition_FromLastCheckpoint)(nil), // 109: FederatedQuery.StreamingDisposition.FromLastCheckpoint
	nil,                                    // 110: FederatedQuery.QueryContent.ExecutionSettingsEntry
	(*ListQueriesRequest_Filter)(nil),      // 111: FederatedQuery.ListQueriesRequest.Filter
	(*ListJobsRequest_Filter)(nil),         // 112: FederatedQuery.ListJobsRequest.Filter
	(*ListConnectionsRequest_Filter)(nil),  // 113: FederatedQuery.ListConnectionsRequest.Filter
	nil,                                    // 114: FederatedQuery.DataStreamsBinding.FormatSettingEntry
	(*ObjectStorageBinding_Subset)(nil),    // 115: FederatedQuery.ObjectStorageBinding.Subset
	nil,                                    // 116: FederatedQuery.ObjectStorageBinding.Subset.FormatSettingEntry
	nil,                                    // 117: FederatedQuery.ObjectStorageBinding.Subset.ProjectionEntry
	(*ListBindingsRequest_Filter)(nil),     // 118: FederatedQuery.ListBindingsRequest.Filter
	(*durationpb.Duration)(nil),            // 119: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),          // 120: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                  // 121: google.protobuf.Empty
	(*Ydb.Column)(nil),                     // 122: Ydb.Column
	(*Ydb_Issue.IssueMessage)(nil),         // 123: Ydb.Issue.IssueMessage
	(*Ydb_Operations.OperationParams)(nil), // 124: Ydb.Operations.OperationParams
	(*Ydb_Operations.Operation)(nil),       // 125: Ydb.Operations.Operation
	(*Ydb.ResultSet)(nil),                  // 126: Ydb.ResultSet
}
var file_draft_protos_ydb_federated_query_proto_depIdxs = []int32{
	4,   // 0: FederatedQuery.Acl.visibility:type_name -> FederatedQuery.Acl.Visibility
	119, // 1: FederatedQuery.Limits.result_ttl:type_name -> google.protobuf.Duration
	119, // 2: FederatedQuery.Limits.execution_timeout:type_name -> google.protobuf.Duration
	120, // 3: FederatedQuery.Limits.execution_deadline:type_name -> google.protobuf.Timestamp
	121, // 4: FederatedQuery.StreamingDisposition.oldest:type_name -> google.protobuf.Empty
	121, // 5: FederatedQuery.StreamingDisposition.fresh:type_name -> google.protobuf.Empty
	107, // 6: FederatedQuery.StreamingDisposition.from_time:type_name -> FederatedQuery.StreamingDisposition.FromTime
	108, // 7: FederatedQuery.StreamingDisposition.time_ago:type_name -> FederatedQuery.StreamingDisposition.TimeAgo
	109, // 8: FederatedQuery.StreamingDisposition.from_last_checkpoint:type_name -> FederatedQuery.StreamingDisposition.FromLastCheckpoint
	5,   // 9: FederatedQuery.QueryContent.type:type_name -> FederatedQuery.QueryContent.QueryType
	10,  // 10: FederatedQuery.QueryContent.acl:type_name -> FederatedQuery.Acl
	11,  // 11: FederatedQuery.QueryContent.limits:type_name -> FederatedQuery.Limits
	110, // 12: FederatedQuery.QueryContent.execution_settings:type_name -> FederatedQuery.QueryContent.ExecutionSettingsEntry
	6,   // 13: FederatedQuery.QueryContent.syntax:type_name -> FederatedQuery.QueryContent.QuerySyntax
	120, // 14: FederatedQuery.CommonMeta.created_at:type_name -> google.protobuf.Timestamp
	120, // 15: FederatedQuery.CommonMeta.modified_at:type_name -> google.protobuf.Timestamp
	14,  // 16: FederatedQuery.QueryMeta.common:type_name -> FederatedQuery.CommonMeta
	120, // 17: FederatedQuery.QueryMeta.submitted_at:type_name -> google.protobuf.Timestamp
	120, // 18: FederatedQuery.QueryMeta.started_at:type_name -> google.protobuf.Timestamp
	120, // 19: FederatedQuery.QueryMeta.finished_at:type_name -> google.protobuf.Timestamp
	0,   // 20: FederatedQuery.QueryMeta.execute_mode:type_name -> FederatedQuery.ExecuteMode
	7,   // 21: FederatedQuery.QueryMeta.status:type_name -> FederatedQuery.QueryMeta.ComputeStatus
	120, // 22: FederatedQuery.QueryMeta.expire_at:type_name -> google.protobuf.Timestamp
	120, // 23: FederatedQuery.QueryMeta.result_expire_at:type_name -> google.protobuf.Timestamp
	5,   // 24: FederatedQuery.BriefQuery.type:type_name -> FederatedQuery.QueryContent.QueryType
	15,  // 25: FederatedQuery.BriefQuery.meta:type_name -> FederatedQuery.QueryMeta
	4,   // 26: FederatedQuery.BriefQuery.visibility:type_name -> FederatedQuery.Acl.Visibility
	122, // 27: FederatedQuery.ResultSetMeta.column:type_name -> Ydb.Column
	15,  // 28: FederatedQuery.Query.meta:type_name -> FederatedQuery.QueryMeta
	13,  // 29: FederatedQuery.Query.content:type_name -> FederatedQuery.QueryContent
	17,  // 30: FederatedQuery.Query.plan:type_name -> FederatedQuery.QueryPlan
	123, // 31: FederatedQuery.Query.issue:type_name -> Ydb.Issue.IssueMessage
	123, // 32: FederatedQuery.Query.transient_issue:type_name -> Ydb.Issue.IssueMessage
	21,  // 33: FederatedQuery.Query.statistics:type_name -> FederatedQuery.QueryStatistics
	19,  // 34: FederatedQuery.Query.result_set_meta:type_name -> FederatedQuery.ResultSetMeta
	18,  // 35: FederatedQuery.Query.ast:type_name -> FederatedQuery.QueryAst
	124, // 36: FederatedQuery.CreateQueryRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	13,  // 37: FederatedQuery.CreateQueryRequest.content:type_name -> FederatedQuery.QueryContent
	0,   // 38: FederatedQuery.CreateQueryRequest.execute_mode:type_name -> FederatedQuery.ExecuteMode
	12,  // 39: FederatedQuery.CreateQueryRequest.disposition:type_name -> FederatedQuery.StreamingDisposition
	125, // 40: FederatedQuery.CreateQueryResponse.operation:type_name -> Ydb.Operations.Operation
	124, // 41: FederatedQuery.ListQueriesRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	111, // 42: FederatedQuery.ListQueriesRequest.filter:type_name -> FederatedQuery.ListQueriesRequest.Filter
	125, // 43: FederatedQuery.ListQueriesResponse.operation:type_name -> Ydb.Operations.Operation
	16,  // 44: FederatedQuery.ListQueriesResult.query:type_name -> FederatedQuery.BriefQuery
	124, // 45: FederatedQuery.DescribeQueryRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	125, // 46: FederatedQuery.DescribeQueryResponse.operation:type_name -> Ydb.Operations.Operation
	20,  // 47: FederatedQuery.DescribeQueryResult.query:type_name -> FederatedQuery.Query
	124, // 48: FederatedQuery.GetQueryStatusRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	125, // 49: FederatedQuery.GetQueryStatusResponse.operation:type_name -> Ydb.Operations.Operation
	7,   // 50: FederatedQuery.GetQueryStatusResult.status:type_name -> FederatedQuery.QueryMeta.ComputeStatus
	124, // 51: FederatedQuery.DeleteQueryRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	125, // 52: FederatedQuery.DeleteQueryResponse.operation:type_name -> Ydb.Operations.Operation
	124, // 53: FederatedQuery.ModifyQueryRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	13,  // 54: FederatedQuery.ModifyQueryRequest.content:type_name -> FederatedQuery.QueryContent
	0,   // 55: FederatedQuery.ModifyQueryRequest.execute_mode:type_name -> FederatedQuery.ExecuteMode
	12,  // 56: FederatedQuery.ModifyQueryRequest.disposition:type_name -> FederatedQuery.StreamingDisposition
	2,   // 57: FederatedQuery.ModifyQueryRequest.state_load_mode:type_name -> FederatedQuery.StateLoadMode
	125, // 58: FederatedQuery.ModifyQueryResponse.operation:type_name -> Ydb.Operations.Operation
	124, // 59: FederatedQuery.ControlQueryRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	1,   // 60: FederatedQuery.ControlQueryRequest.action:type_name -> FederatedQuery.QueryAction
	125, // 61: FederatedQuery.ControlQueryResponse.operation:type_name -> Ydb.Operations.Operation
	14,  // 62: FederatedQuery.BriefJob.meta:type_name -> FederatedQuery.CommonMeta
	15,  // 63: FederatedQuery.BriefJob.query_meta:type_name -> FederatedQuery.QueryMeta
	4,   // 64: FederatedQuery.BriefJob.visibility:type_name -> FederatedQuery.Acl.Visibility
	120, // 65: FederatedQuery.BriefJob.expire_at:type_name -> google.protobuf.Timestamp
	14,  // 66: FederatedQuery.Job.meta:type_name -> FederatedQuery.CommonMeta
	15,  // 67: FederatedQuery.Job.query_meta:type_name -> FederatedQuery.QueryMeta
	17,  // 68: FederatedQuery.Job.plan:type_name -> FederatedQuery.QueryPlan
	123, // 69: FederatedQuery.Job.issue:type_name -> Ydb.Issue.IssueMessage
	21,  // 70: FederatedQuery.Job.statistics:type_name -> FederatedQuery.QueryStatistics
	19,  // 71: FederatedQuery.Job.result_set_meta:type_name -> FederatedQuery.ResultSetMeta
	18,  // 72: FederatedQuery.Job.ast:type_name -> FederatedQuery.QueryAst
	10,  // 73: FederatedQuery.Job.acl:type_name -> FederatedQuery.Acl
	120, // 74: FederatedQuery.Job.expire_at:type_name -> google.protobuf.Timestamp
	6,   // 75: FederatedQuery.Job.syntax:type_name -> FederatedQuery.QueryContent.QuerySyntax
	124, // 76: FederatedQuery.ListJobsRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	112, // 77: FederatedQuery.ListJobsRequest.filter:type_name -> FederatedQuery.ListJobsRequest.Filter
	125, // 78: FederatedQuery.ListJobsResponse.operation:type_name -> Ydb.Operations.Operation
	43,  // 79: FederatedQuery.ListJobsResult.job:type_name -> FederatedQuery.BriefJob
	124, // 80: FederatedQuery.DescribeJobRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	125, // 81: FederatedQuery.DescribeJobResponse.operation:type_name -> Ydb.Operations.Operation
	44,  // 82: FederatedQuery.DescribeJobResult.job:type_name -> FederatedQuery.Job
	51,  // 83: FederatedQuery.IamAuth.current_iam:type_name -> FederatedQuery.CurrentIAMTokenAuth
	53,  // 84: FederatedQuery.IamAuth.service_account:type_name -> FederatedQuery.ServiceAccountAuth
	52,  // 85: FederatedQuery.IamAuth.none:type_name -> FederatedQuery.NoneAuth
	54,  // 86: FederatedQuery.DataStreams.auth:type_name -> FederatedQuery.IamAuth
	54,  // 87: FederatedQuery.Monitoring.auth:type_name -> FederatedQuery.IamAuth
	54,  // 88: FederatedQuery.YdbDatabase.auth:type_name -> FederatedQuery.IamAuth
	54,  // 89: FederatedQuery.ClickHouseCluster.auth:type_name -> FederatedQuery.IamAuth
	54,  // 90: FederatedQuery.ObjectStorageConnection.auth:type_name -> FederatedQuery.IamAuth
	54,  // 91: FederatedQuery.PostgreSQLCluster.auth:type_name -> FederatedQuery.IamAuth
	57,  // 92: FederatedQuery.ConnectionSetting.ydb_database:type_name -> FederatedQuery.YdbDatabase
	58,  // 93: FederatedQuery.ConnectionSetting.clickhouse_cluster:type_name -> FederatedQuery.ClickHouseCluster
	55,  // 94: FederatedQuery.ConnectionSetting.data_streams:type_name -> FederatedQuery.DataStreams
	59,  // 95: FederatedQuery.ConnectionSetting.object_storage:type_name -> FederatedQuery.ObjectStorageConnection
	56,  // 96: FederatedQuery.ConnectionSetting.monitoring:type_name -> FederatedQuery.Monitoring
	60,  // 97: FederatedQuery.ConnectionSetting.postgresql_cluster:type_name -> FederatedQuery.PostgreSQLCluster
	61,  // 98: FederatedQuery.ConnectionContent.setting:type_name -> FederatedQuery.ConnectionSetting
	10,  // 99: FederatedQuery.ConnectionContent.acl:type_name -> FederatedQuery.Acl
	62,  // 100: FederatedQuery.Connection.content:type_name -> FederatedQuery.ConnectionContent
	14,  // 101: FederatedQuery.Connection.meta:type_name -> FederatedQuery.CommonMeta
	124, // 102: FederatedQuery.CreateConnectionRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	62,  // 103: FederatedQuery.CreateConnectionRequest.content:type_name -> FederatedQuery.ConnectionContent
	125, // 104: FederatedQuery.CreateConnectionResponse.operation:type_name -> Ydb.Operations.Operation
	124, // 105: FederatedQuery.ListConnectionsRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	113, // 106: FederatedQuery.ListConnectionsRequest.filter:type_name -> FederatedQuery.ListConnectionsRequest.Filter
	125, // 107: FederatedQuery.ListConnectionsResponse.operation:type_name -> Ydb.Operations.Operation
	63,  // 108: FederatedQuery.ListConnectionsResult.connection:type_name -> FederatedQuery.Connection
	124, // 109: FederatedQuery.DescribeConnectionRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	125, // 110: FederatedQuery.DescribeConnectionResponse.operation:type_name -> Ydb.Operations.Operation
	63,  // 111: FederatedQuery.DescribeConnectionResult.connection:type_name -> FederatedQuery.Connection
	124, // 112: FederatedQuery.ModifyConnectionRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	62,  // 113: FederatedQuery.ModifyConnectionRequest.content:type_name -> FederatedQuery.ConnectionContent
	125, // 114: FederatedQuery.ModifyConnectionResponse.operation:type_name -> Ydb.Operations.Operation
	124, // 115: FederatedQuery.DeleteConnectionRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	125, // 116: FederatedQuery.DeleteConnectionResponse.operation:type_name -> Ydb.Operations.Operation
	124, // 117: FederatedQuery.TestConnectionRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	61,  // 118: FederatedQuery.TestConnectionRequest.setting:type_name -> FederatedQuery.ConnectionSetting
	125, // 119: FederatedQuery.TestConnectionResponse.operation:type_name -> Ydb.Operations.Operation
	124, // 120: FederatedQuery.GetResultDataRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	125, // 121: FederatedQuery.GetResultDataResponse.operation:type_name -> Ydb.Operations.Operation
	126, // 122: FederatedQuery.GetResultDataResult.result_set:type_name -> Ydb.ResultSet
	122, // 123: FederatedQuery.Schema.column:type_name -> Ydb.Column
	85,  // 124: FederatedQuery.DataStreamsBinding.schema:type_name -> FederatedQuery.Schema
	114, // 125: FederatedQuery.DataStreamsBinding.format_setting:type_name -> FederatedQuery.DataStreamsBinding.FormatSettingEntry
	115, // 126: FederatedQuery.ObjectStorageBinding.subset:type_name -> FederatedQuery.ObjectStorageBinding.Subset
	86,  // 127: FederatedQuery.BindingSetting.data_streams:type_name -> FederatedQuery.DataStreamsBinding
	87,  // 128: FederatedQuery.BindingSetting.object_storage:type_name -> FederatedQuery.ObjectStorageBinding
	14,  // 129: FederatedQuery.BriefBinding.meta:type_name -> FederatedQuery.CommonMeta
	9,   // 130: FederatedQuery.BriefBinding.type:type_name -> FederatedQuery.BindingSetting.BindingType
	4,   // 131: FederatedQuery.BriefBinding.visibility:type_name -> FederatedQuery.Acl.Visibility
	88,  // 132: FederatedQuery.BindingContent.setting:type_name -> FederatedQuery.BindingSetting
	10,  // 133: FederatedQuery.BindingContent.acl:type_name -> FederatedQuery.Acl
	90,  // 134: FederatedQuery.Binding.content:type_name -> FederatedQuery.BindingContent
	14,  // 135: FederatedQuery.Binding.meta:type_name -> FederatedQuery.CommonMeta
	124, // 136: FederatedQuery.CreateBindingRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	90,  // 137: FederatedQuery.CreateBindingRequest.content:type_name -> FederatedQuery.BindingContent
	125, // 138: FederatedQuery.CreateBindingResponse.operation:type_name -> Ydb.Operations.Operation
	124, // 139: FederatedQuery.ListBindingsRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	118, // 140: FederatedQuery.ListBindingsRequest.filter:type_name -> FederatedQuery.ListBindingsRequest.Filter
	125, // 141: FederatedQuery.ListBindingsResponse.operation:type_name -> Ydb.Operations.Operation
	89,  // 142: FederatedQuery.ListBindingsResult.binding:type_name -> FederatedQuery.BriefBinding
	124, // 143: FederatedQuery.DescribeBindingRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	125, // 144: FederatedQuery.DescribeBindingResponse.operation:type_name -> Ydb.Operations.Operation
	91,  // 145: FederatedQuery.DescribeBindingResult.binding:type_name -> FederatedQuery.Binding
	124, // 146: FederatedQuery.ModifyBindingRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	90,  // 147: FederatedQuery.ModifyBindingRequest.content:type_name -> FederatedQuery.BindingContent
	125, // 148: FederatedQuery.ModifyBindingResponse.operation:type_name -> Ydb.Operations.Operation
	124, // 149: FederatedQuery.DeleteBindingRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	125, // 150: FederatedQuery.DeleteBindingResponse.operation:type_name -> Ydb.Operations.Operation
	120, // 151: FederatedQuery.StreamingDisposition.FromTime.timestamp:type_name -> google.protobuf.Timestamp
	119, // 152: FederatedQuery.StreamingDisposition.TimeAgo.duration:type_name -> google.protobuf.Duration
	5,   // 153: FederatedQuery.ListQueriesRequest.Filter.query_type:type_name -> FederatedQuery.QueryContent.QueryType
	7,   // 154: FederatedQuery.ListQueriesRequest.Filter.status:type_name -> FederatedQuery.QueryMeta.ComputeStatus
	0,   // 155: FederatedQuery.ListQueriesRequest.Filter.mode:type_name -> FederatedQuery.ExecuteMode
	4,   // 156: FederatedQuery.ListQueriesRequest.Filter.visibility:type_name -> FederatedQuery.Acl.Visibility
	3,   // 157: FederatedQuery.ListQueriesRequest.Filter.automatic:type_name -> FederatedQuery.AutomaticType
	8,   // 158: FederatedQuery.ListConnectionsRequest.Filter.connection_type:type_name -> FederatedQuery.ConnectionSetting.ConnectionType
	4,   // 159: FederatedQuery.ListConnectionsRequest.Filter.visibility:type_name -> FederatedQuery.Acl.Visibility
	116, // 160: FederatedQuery.ObjectStorageBinding.Subset.format_setting:type_name -> FederatedQuery.ObjectStorageBinding.Subset.FormatSettingEntry
	85,  // 161: FederatedQuery.ObjectStorageBinding.Subset.schema:type_name -> FederatedQuery.Schema
	117, // 162: FederatedQuery.ObjectStorageBinding.Subset.projection:type_name -> FederatedQuery.ObjectStorageBinding.Subset.ProjectionEntry
	4,   // 163: FederatedQuery.ListBindingsRequest.Filter.visibility:type_name -> FederatedQuery.Acl.Visibility
	164, // [164:164] is the sub-list for method output_type
	164, // [164:164] is the sub-list for method input_type
	164, // [164:164] is the sub-list for extension type_name
	164, // [164:164] is the sub-list for extension extendee
	0,   // [0:164] is the sub-list for field type_name
}

func init() { file_draft_protos_ydb_federated_query_proto_init() }
func file_draft_protos_ydb_federated_query_proto_init() {
	if File_draft_protos_ydb_federated_query_proto != nil {
		return
	}
	file_draft_protos_ydb_federated_query_proto_msgTypes[1].OneofWrappers = []any{
		(*Limits_ExecutionTimeout)(nil),
		(*Limits_ExecutionDeadline)(nil),
	}
	file_draft_protos_ydb_federated_query_proto_msgTypes[2].OneofWrappers = []any{
		(*StreamingDisposition_Oldest)(nil),
		(*StreamingDisposition_Fresh)(nil),
		(*StreamingDisposition_FromTime_)(nil),
		(*StreamingDisposition_TimeAgo_)(nil),
		(*StreamingDisposition_FromLastCheckpoint_)(nil),
	}
	file_draft_protos_ydb_federated_query_proto_msgTypes[5].OneofWrappers = []any{
		(*QueryMeta_AbortedBy)(nil),
		(*QueryMeta_PausedBy)(nil),
	}
	file_draft_protos_ydb_federated_query_proto_msgTypes[44].OneofWrappers = []any{
		(*IamAuth_CurrentIam)(nil),
		(*IamAuth_ServiceAccount)(nil),
		(*IamAuth_None)(nil),
	}
	file_draft_protos_ydb_federated_query_proto_msgTypes[51].OneofWrappers = []any{
		(*ConnectionSetting_YdbDatabase)(nil),
		(*ConnectionSetting_ClickhouseCluster)(nil),
		(*ConnectionSetting_DataStreams)(nil),
		(*ConnectionSetting_ObjectStorage)(nil),
		(*ConnectionSetting_Monitoring)(nil),
		(*ConnectionSetting_PostgresqlCluster)(nil),
	}
	file_draft_protos_ydb_federated_query_proto_msgTypes[78].OneofWrappers = []any{
		(*BindingSetting_DataStreams)(nil),
		(*BindingSetting_ObjectStorage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_draft_protos_ydb_federated_query_proto_rawDesc), len(file_draft_protos_ydb_federated_query_proto_rawDesc)),
			NumEnums:      10,
			NumMessages:   109,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_draft_protos_ydb_federated_query_proto_goTypes,
		DependencyIndexes: file_draft_protos_ydb_federated_query_proto_depIdxs,
		EnumInfos:         file_draft_protos_ydb_federated_query_proto_enumTypes,
		MessageInfos:      file_draft_protos_ydb_federated_query_proto_msgTypes,
	}.Build()
	File_draft_protos_ydb_federated_query_proto = out.File
	file_draft_protos_ydb_federated_query_proto_goTypes = nil
	file_draft_protos_ydb_federated_query_proto_depIdxs = nil
}
