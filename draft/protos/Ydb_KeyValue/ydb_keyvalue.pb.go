// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: draft/protos/ydb_keyvalue.proto

package Ydb_KeyValue

import (
	Ydb_Operations "github.com/ydb-platform/ydb-go-genproto/protos/Ydb_Operations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StorageChannelInfo_StatusFlag int32

const (
	// The system was unable to get the storage channel status.
	StorageChannelInfo_STATUS_FLAG_UNSPECIFIED StorageChannelInfo_StatusFlag = 0
	// Enough storage space is available.
	StorageChannelInfo_STATUS_FLAG_GREEN StorageChannelInfo_StatusFlag = 10
	// Free storage space is low, user must stop writing new data. Compaction's writes are allow.
	StorageChannelInfo_STATUS_FLAG_YELLOW_STOP StorageChannelInfo_StatusFlag = 20
	// No free storage space is available, no writes will successed.
	StorageChannelInfo_STATUS_FLAG_ORANGE_OUT_SPACE StorageChannelInfo_StatusFlag = 30
)

// Enum value maps for StorageChannelInfo_StatusFlag.
var (
	StorageChannelInfo_StatusFlag_name = map[int32]string{
		0:  "STATUS_FLAG_UNSPECIFIED",
		10: "STATUS_FLAG_GREEN",
		20: "STATUS_FLAG_YELLOW_STOP",
		30: "STATUS_FLAG_ORANGE_OUT_SPACE",
	}
	StorageChannelInfo_StatusFlag_value = map[string]int32{
		"STATUS_FLAG_UNSPECIFIED":      0,
		"STATUS_FLAG_GREEN":            10,
		"STATUS_FLAG_YELLOW_STOP":      20,
		"STATUS_FLAG_ORANGE_OUT_SPACE": 30,
	}
)

func (x StorageChannelInfo_StatusFlag) Enum() *StorageChannelInfo_StatusFlag {
	p := new(StorageChannelInfo_StatusFlag)
	*p = x
	return p
}

func (x StorageChannelInfo_StatusFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageChannelInfo_StatusFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_keyvalue_proto_enumTypes[0].Descriptor()
}

func (StorageChannelInfo_StatusFlag) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_keyvalue_proto_enumTypes[0]
}

func (x StorageChannelInfo_StatusFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageChannelInfo_StatusFlag.Descriptor instead.
func (StorageChannelInfo_StatusFlag) EnumDescriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{0, 0}
}

type Priorities_Priority int32

const (
	// Use default priority (PRIORITY_REALTIME).
	Priorities_PRIORITY_UNSPECIFIED Priorities_Priority = 0
	// High priority for user-initiated operations, the default priority.
	Priorities_PRIORITY_REALTIME Priorities_Priority = 1
	// Low priority for background system activity.
	Priorities_PRIORITY_BACKGROUND Priorities_Priority = 2
)

// Enum value maps for Priorities_Priority.
var (
	Priorities_Priority_name = map[int32]string{
		0: "PRIORITY_UNSPECIFIED",
		1: "PRIORITY_REALTIME",
		2: "PRIORITY_BACKGROUND",
	}
	Priorities_Priority_value = map[string]int32{
		"PRIORITY_UNSPECIFIED": 0,
		"PRIORITY_REALTIME":    1,
		"PRIORITY_BACKGROUND":  2,
	}
)

func (x Priorities_Priority) Enum() *Priorities_Priority {
	p := new(Priorities_Priority)
	*p = x
	return p
}

func (x Priorities_Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Priorities_Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_keyvalue_proto_enumTypes[1].Descriptor()
}

func (Priorities_Priority) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_keyvalue_proto_enumTypes[1]
}

func (x Priorities_Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Priorities_Priority.Descriptor instead.
func (Priorities_Priority) EnumDescriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{1, 0}
}

type ExecuteTransactionRequest_Command_Write_Tactic int32

const (
	// Use default tactic (TACTIC_MAX_THROUGHPUT).
	ExecuteTransactionRequest_Command_Write_TACTIC_UNSPECIFIED ExecuteTransactionRequest_Command_Write_Tactic = 0
	// Write minimum required redundant data. Does not affect storage durability. The default tactic.
	ExecuteTransactionRequest_Command_Write_TACTIC_MAX_THROUGHPUT ExecuteTransactionRequest_Command_Write_Tactic = 1
	// Write additional redundant data to reduce operation duration. Will use additional space.
	ExecuteTransactionRequest_Command_Write_TACTIC_MIN_LATENCY ExecuteTransactionRequest_Command_Write_Tactic = 2
)

// Enum value maps for ExecuteTransactionRequest_Command_Write_Tactic.
var (
	ExecuteTransactionRequest_Command_Write_Tactic_name = map[int32]string{
		0: "TACTIC_UNSPECIFIED",
		1: "TACTIC_MAX_THROUGHPUT",
		2: "TACTIC_MIN_LATENCY",
	}
	ExecuteTransactionRequest_Command_Write_Tactic_value = map[string]int32{
		"TACTIC_UNSPECIFIED":    0,
		"TACTIC_MAX_THROUGHPUT": 1,
		"TACTIC_MIN_LATENCY":    2,
	}
)

func (x ExecuteTransactionRequest_Command_Write_Tactic) Enum() *ExecuteTransactionRequest_Command_Write_Tactic {
	p := new(ExecuteTransactionRequest_Command_Write_Tactic)
	*p = x
	return p
}

func (x ExecuteTransactionRequest_Command_Write_Tactic) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecuteTransactionRequest_Command_Write_Tactic) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_keyvalue_proto_enumTypes[2].Descriptor()
}

func (ExecuteTransactionRequest_Command_Write_Tactic) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_keyvalue_proto_enumTypes[2]
}

func (x ExecuteTransactionRequest_Command_Write_Tactic) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecuteTransactionRequest_Command_Write_Tactic.Descriptor instead.
func (ExecuteTransactionRequest_Command_Write_Tactic) EnumDescriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{7, 0, 3, 0}
}

type StorageChannelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Storage channel index.
	StorageChannel uint32 `protobuf:"varint,1,opt,name=storage_channel,json=storageChannel,proto3" json:"storage_channel,omitempty"`
	// The status flag of the storage channel.
	StatusFlag StorageChannelInfo_StatusFlag `protobuf:"varint,2,opt,name=status_flag,json=statusFlag,proto3,enum=Ydb.KeyValue.StorageChannelInfo_StatusFlag" json:"status_flag,omitempty"`
}

func (x *StorageChannelInfo) Reset() {
	*x = StorageChannelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageChannelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageChannelInfo) ProtoMessage() {}

func (x *StorageChannelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageChannelInfo.ProtoReflect.Descriptor instead.
func (*StorageChannelInfo) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{0}
}

func (x *StorageChannelInfo) GetStorageChannel() uint32 {
	if x != nil {
		return x.StorageChannel
	}
	return 0
}

func (x *StorageChannelInfo) GetStatusFlag() StorageChannelInfo_StatusFlag {
	if x != nil {
		return x.StatusFlag
	}
	return StorageChannelInfo_STATUS_FLAG_UNSPECIFIED
}

type Priorities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Priorities) Reset() {
	*x = Priorities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Priorities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Priorities) ProtoMessage() {}

func (x *Priorities) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Priorities.ProtoReflect.Descriptor instead.
func (*Priorities) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{1}
}

type StorageConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Channel configs.
	// Channels 0 and 1 are system channels needed for tablet operation.
	// Channels starting with 2 are user channels.
	Channel []*StorageConfig_ChannelConfig `protobuf:"bytes,1,rep,name=channel,proto3" json:"channel,omitempty"`
}

func (x *StorageConfig) Reset() {
	*x = StorageConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageConfig) ProtoMessage() {}

func (x *StorageConfig) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageConfig.ProtoReflect.Descriptor instead.
func (*StorageConfig) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{2}
}

func (x *StorageConfig) GetChannel() []*StorageConfig_ChannelConfig {
	if x != nil {
		return x.Channel
	}
	return nil
}

type KeyRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The lower bound of the key range.
	// If unspecified, the range begins from the lowest key.
	//
	// Types that are assignable to FromBound:
	//
	//	*KeyRange_FromKeyInclusive
	//	*KeyRange_FromKeyExclusive
	FromBound isKeyRange_FromBound `protobuf_oneof:"from_bound"`
	// The higher bound of the key range.
	// If unspecified, the range ends with the highest key.
	//
	// Types that are assignable to ToBound:
	//
	//	*KeyRange_ToKeyInclusive
	//	*KeyRange_ToKeyExclusive
	ToBound isKeyRange_ToBound `protobuf_oneof:"to_bound"`
}

func (x *KeyRange) Reset() {
	*x = KeyRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyRange) ProtoMessage() {}

func (x *KeyRange) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyRange.ProtoReflect.Descriptor instead.
func (*KeyRange) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{3}
}

func (m *KeyRange) GetFromBound() isKeyRange_FromBound {
	if m != nil {
		return m.FromBound
	}
	return nil
}

func (x *KeyRange) GetFromKeyInclusive() string {
	if x, ok := x.GetFromBound().(*KeyRange_FromKeyInclusive); ok {
		return x.FromKeyInclusive
	}
	return ""
}

func (x *KeyRange) GetFromKeyExclusive() string {
	if x, ok := x.GetFromBound().(*KeyRange_FromKeyExclusive); ok {
		return x.FromKeyExclusive
	}
	return ""
}

func (m *KeyRange) GetToBound() isKeyRange_ToBound {
	if m != nil {
		return m.ToBound
	}
	return nil
}

func (x *KeyRange) GetToKeyInclusive() string {
	if x, ok := x.GetToBound().(*KeyRange_ToKeyInclusive); ok {
		return x.ToKeyInclusive
	}
	return ""
}

func (x *KeyRange) GetToKeyExclusive() string {
	if x, ok := x.GetToBound().(*KeyRange_ToKeyExclusive); ok {
		return x.ToKeyExclusive
	}
	return ""
}

type isKeyRange_FromBound interface {
	isKeyRange_FromBound()
}

type KeyRange_FromKeyInclusive struct {
	// Set in order for the range to include the key specified
	FromKeyInclusive string `protobuf:"bytes,1,opt,name=from_key_inclusive,json=fromKeyInclusive,proto3,oneof"`
}

type KeyRange_FromKeyExclusive struct {
	// Set in order for the range not to include the key specified
	FromKeyExclusive string `protobuf:"bytes,2,opt,name=from_key_exclusive,json=fromKeyExclusive,proto3,oneof"`
}

func (*KeyRange_FromKeyInclusive) isKeyRange_FromBound() {}

func (*KeyRange_FromKeyExclusive) isKeyRange_FromBound() {}

type isKeyRange_ToBound interface {
	isKeyRange_ToBound()
}

type KeyRange_ToKeyInclusive struct {
	// Set in order for the range to include the key specified
	ToKeyInclusive string `protobuf:"bytes,3,opt,name=to_key_inclusive,json=toKeyInclusive,proto3,oneof"`
}

type KeyRange_ToKeyExclusive struct {
	// Set in order for the range not to include the key specified
	ToKeyExclusive string `protobuf:"bytes,4,opt,name=to_key_exclusive,json=toKeyExclusive,proto3,oneof"`
}

func (*KeyRange_ToKeyInclusive) isKeyRange_ToBound() {}

func (*KeyRange_ToKeyExclusive) isKeyRange_ToBound() {}

// The lock mechanism provides a way to ensure that only one client holds the lock.
// The client is provided the lock generation.
// Only operations with matching lock generation and operations with no lock generation are executed.
// When lock generation is missmatched operations will be failed with PRECONDITION_FAILED status.
type AcquireLockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Volume path.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Partition of the volume.
	PartitionId uint64 `protobuf:"varint,3,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
}

func (x *AcquireLockRequest) Reset() {
	*x = AcquireLockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquireLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireLockRequest) ProtoMessage() {}

func (x *AcquireLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireLockRequest.ProtoReflect.Descriptor instead.
func (*AcquireLockRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{4}
}

func (x *AcquireLockRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *AcquireLockRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AcquireLockRequest) GetPartitionId() uint64 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

type AcquireLockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *AcquireLockResponse) Reset() {
	*x = AcquireLockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquireLockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireLockResponse) ProtoMessage() {}

func (x *AcquireLockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireLockResponse.ProtoReflect.Descriptor instead.
func (*AcquireLockResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{5}
}

func (x *AcquireLockResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type AcquireLockResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The generation of the lock to provide as an argument to all the operations the user performs with the partition.
	LockGeneration uint64 `protobuf:"varint,1,opt,name=lock_generation,json=lockGeneration,proto3" json:"lock_generation,omitempty"`
	// Contains 0 if the request was sent to the node of the partition, node ID of the partition otherwise.
	NodeId uint32 `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *AcquireLockResult) Reset() {
	*x = AcquireLockResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquireLockResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireLockResult) ProtoMessage() {}

func (x *AcquireLockResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireLockResult.ProtoReflect.Descriptor instead.
func (*AcquireLockResult) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{6}
}

func (x *AcquireLockResult) GetLockGeneration() uint64 {
	if x != nil {
		return x.LockGeneration
	}
	return 0
}

func (x *AcquireLockResult) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type ExecuteTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Volume path.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Partition of the volume.
	PartitionId uint64 `protobuf:"varint,3,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	// Generation of the exclusive lock acquired for the partition as a result of an AcquireLock call.
	LockGeneration *uint64 `protobuf:"varint,4,opt,name=lock_generation,json=lockGeneration,proto3,oneof" json:"lock_generation,omitempty"`
	// Commands to execute as a single atomic transaction.
	// The order of execution of commands is the same as the order of commands in the ExecuteTransactionRequest.
	// The order of execution of different transactions is not specified.
	Commands []*ExecuteTransactionRequest_Command `protobuf:"bytes,5,rep,name=commands,proto3" json:"commands,omitempty"`
}

func (x *ExecuteTransactionRequest) Reset() {
	*x = ExecuteTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransactionRequest) ProtoMessage() {}

func (x *ExecuteTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTransactionRequest.ProtoReflect.Descriptor instead.
func (*ExecuteTransactionRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{7}
}

func (x *ExecuteTransactionRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *ExecuteTransactionRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ExecuteTransactionRequest) GetPartitionId() uint64 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

func (x *ExecuteTransactionRequest) GetLockGeneration() uint64 {
	if x != nil && x.LockGeneration != nil {
		return *x.LockGeneration
	}
	return 0
}

func (x *ExecuteTransactionRequest) GetCommands() []*ExecuteTransactionRequest_Command {
	if x != nil {
		return x.Commands
	}
	return nil
}

type ExecuteTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *ExecuteTransactionResponse) Reset() {
	*x = ExecuteTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransactionResponse) ProtoMessage() {}

func (x *ExecuteTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTransactionResponse.ProtoReflect.Descriptor instead.
func (*ExecuteTransactionResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{8}
}

func (x *ExecuteTransactionResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type ExecuteTransactionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Contains status flags for the storage channels used by the transaction.
	StorageChannelInfo []*StorageChannelInfo `protobuf:"bytes,1,rep,name=storage_channel_info,json=storageChannelInfo,proto3" json:"storage_channel_info,omitempty"`
	// Contains 0 if the request was sent to the node of the partition, node ID of the partition otherwise.
	NodeId uint32 `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *ExecuteTransactionResult) Reset() {
	*x = ExecuteTransactionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteTransactionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransactionResult) ProtoMessage() {}

func (x *ExecuteTransactionResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTransactionResult.ProtoReflect.Descriptor instead.
func (*ExecuteTransactionResult) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{9}
}

func (x *ExecuteTransactionResult) GetStorageChannelInfo() []*StorageChannelInfo {
	if x != nil {
		return x.StorageChannelInfo
	}
	return nil
}

func (x *ExecuteTransactionResult) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type ReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Volume path.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Partition of the volume.
	PartitionId uint64 `protobuf:"varint,3,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	// Generation of the exclusive lock acquired for the partition as a result of an AcquireLock call.
	LockGeneration *uint64 `protobuf:"varint,4,opt,name=lock_generation,json=lockGeneration,proto3,oneof" json:"lock_generation,omitempty"`
	// Key of the key-value pair to read.
	Key string `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
	// Offset in bytes from the beginning of the value to read data from.
	Offset uint64 `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	// Size of the data to read in bytes. 0 means "read to the end of the value".
	Size uint64 `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	// Result protobuf size limit.
	// Overrides the default limit only with a smaller value.
	// 0 means "use the default limit".
	LimitBytes uint64 `protobuf:"varint,8,opt,name=limit_bytes,json=limitBytes,proto3" json:"limit_bytes,omitempty"`
	// Priority to use for the Distributed Storage Get operation.
	// Has no effect for the INLINE storage channel.
	Priority Priorities_Priority `protobuf:"varint,9,opt,name=priority,proto3,enum=Ydb.KeyValue.Priorities_Priority" json:"priority,omitempty"`
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{10}
}

func (x *ReadRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *ReadRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ReadRequest) GetPartitionId() uint64 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

func (x *ReadRequest) GetLockGeneration() uint64 {
	if x != nil && x.LockGeneration != nil {
		return *x.LockGeneration
	}
	return 0
}

func (x *ReadRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ReadRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ReadRequest) GetLimitBytes() uint64 {
	if x != nil {
		return x.LimitBytes
	}
	return 0
}

func (x *ReadRequest) GetPriority() Priorities_Priority {
	if x != nil {
		return x.Priority
	}
	return Priorities_PRIORITY_UNSPECIFIED
}

type ReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{11}
}

func (x *ReadResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type ReadResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key of the requested key-value pair.
	RequestedKey string `protobuf:"bytes,1,opt,name=requested_key,json=requestedKey,proto3" json:"requested_key,omitempty"`
	// Offset in bytes from the beginning of the value requested.
	RequestedOffset uint64 `protobuf:"varint,2,opt,name=requested_offset,json=requestedOffset,proto3" json:"requested_offset,omitempty"`
	// Size of the data requested.
	RequestedSize uint64 `protobuf:"varint,3,opt,name=requested_size,json=requestedSize,proto3" json:"requested_size,omitempty"`
	// The bytes of the requested part of the value.
	Value []byte `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	// If requested data size is larger than limit_bytes then result will contain only part of the requested value and
	// the is_overrun flag will be set.
	IsOverrun bool `protobuf:"varint,5,opt,name=is_overrun,json=isOverrun,proto3" json:"is_overrun,omitempty"`
	// Contains 0 if the request was sent to the node of the partition, node ID of the partition otherwise.
	NodeId uint32 `protobuf:"varint,6,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *ReadResult) Reset() {
	*x = ReadResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResult) ProtoMessage() {}

func (x *ReadResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResult.ProtoReflect.Descriptor instead.
func (*ReadResult) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{12}
}

func (x *ReadResult) GetRequestedKey() string {
	if x != nil {
		return x.RequestedKey
	}
	return ""
}

func (x *ReadResult) GetRequestedOffset() uint64 {
	if x != nil {
		return x.RequestedOffset
	}
	return 0
}

func (x *ReadResult) GetRequestedSize() uint64 {
	if x != nil {
		return x.RequestedSize
	}
	return 0
}

func (x *ReadResult) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ReadResult) GetIsOverrun() bool {
	if x != nil {
		return x.IsOverrun
	}
	return false
}

func (x *ReadResult) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type ReadRangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Volume path.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Partition of the volume.
	PartitionId uint64 `protobuf:"varint,3,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	// Generation of the exclusive lock acquired for the partition as a result of an AcquireLock call.
	LockGeneration *uint64 `protobuf:"varint,4,opt,name=lock_generation,json=lockGeneration,proto3,oneof" json:"lock_generation,omitempty"`
	// The range of keys to read.
	Range *KeyRange `protobuf:"bytes,5,opt,name=range,proto3" json:"range,omitempty"`
	// Result protobuf size limit.
	// Overrides the default limit only with a smaller value.
	// 0 means "use the default limit".
	LimitBytes uint64 `protobuf:"varint,6,opt,name=limit_bytes,json=limitBytes,proto3" json:"limit_bytes,omitempty"`
	// Priority to use for the Distributed Storage Get operation.
	// Has no effect for the INLINE storage channel.
	Priority Priorities_Priority `protobuf:"varint,7,opt,name=priority,proto3,enum=Ydb.KeyValue.Priorities_Priority" json:"priority,omitempty"`
}

func (x *ReadRangeRequest) Reset() {
	*x = ReadRangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRangeRequest) ProtoMessage() {}

func (x *ReadRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRangeRequest.ProtoReflect.Descriptor instead.
func (*ReadRangeRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{13}
}

func (x *ReadRangeRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *ReadRangeRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ReadRangeRequest) GetPartitionId() uint64 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

func (x *ReadRangeRequest) GetLockGeneration() uint64 {
	if x != nil && x.LockGeneration != nil {
		return *x.LockGeneration
	}
	return 0
}

func (x *ReadRangeRequest) GetRange() *KeyRange {
	if x != nil {
		return x.Range
	}
	return nil
}

func (x *ReadRangeRequest) GetLimitBytes() uint64 {
	if x != nil {
		return x.LimitBytes
	}
	return 0
}

func (x *ReadRangeRequest) GetPriority() Priorities_Priority {
	if x != nil {
		return x.Priority
	}
	return Priorities_PRIORITY_UNSPECIFIED
}

type ReadRangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *ReadRangeResponse) Reset() {
	*x = ReadRangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRangeResponse) ProtoMessage() {}

func (x *ReadRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRangeResponse.ProtoReflect.Descriptor instead.
func (*ReadRangeResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{14}
}

func (x *ReadRangeResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type ReadRangeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of key-value pairs requested.
	Pair []*ReadRangeResult_KeyValuePair `protobuf:"bytes,1,rep,name=pair,proto3" json:"pair,omitempty"`
	// If requested data size is larger than limit_bytes then result will contain
	// only part of the requested key-value pairs and the is_overrun flag will be set.
	// The pair list contains only full values.
	// In order to continue reading the client should send another request for the key range
	// with from_key_exclusive set to the last key read.
	// If first pair doesn't fit the limit_bytes then the result will be empty and the is_overrun flag will be set.
	// Use ListRange and Read methods to find and read large key-value pairs.
	IsOverrun bool `protobuf:"varint,2,opt,name=is_overrun,json=isOverrun,proto3" json:"is_overrun,omitempty"`
	// Contains 0 if the request was sent to the node of the partition, node ID of the partition otherwise.
	NodeId uint32 `protobuf:"varint,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *ReadRangeResult) Reset() {
	*x = ReadRangeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRangeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRangeResult) ProtoMessage() {}

func (x *ReadRangeResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRangeResult.ProtoReflect.Descriptor instead.
func (*ReadRangeResult) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{15}
}

func (x *ReadRangeResult) GetPair() []*ReadRangeResult_KeyValuePair {
	if x != nil {
		return x.Pair
	}
	return nil
}

func (x *ReadRangeResult) GetIsOverrun() bool {
	if x != nil {
		return x.IsOverrun
	}
	return false
}

func (x *ReadRangeResult) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type ListRangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Volume path.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Partition of the volume.
	PartitionId uint64 `protobuf:"varint,3,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	// Generation of the exclusive lock acquired for the partition as a result of an AcquireLock call.
	LockGeneration *uint64 `protobuf:"varint,4,opt,name=lock_generation,json=lockGeneration,proto3,oneof" json:"lock_generation,omitempty"`
	// The range of keys to read
	Range *KeyRange `protobuf:"bytes,5,opt,name=range,proto3" json:"range,omitempty"`
	// Result protobuf size limit. If not 0, overrides the default one only with a smaller value.
	LimitBytes uint64 `protobuf:"varint,6,opt,name=limit_bytes,json=limitBytes,proto3" json:"limit_bytes,omitempty"`
}

func (x *ListRangeRequest) Reset() {
	*x = ListRangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRangeRequest) ProtoMessage() {}

func (x *ListRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRangeRequest.ProtoReflect.Descriptor instead.
func (*ListRangeRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{16}
}

func (x *ListRangeRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *ListRangeRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ListRangeRequest) GetPartitionId() uint64 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

func (x *ListRangeRequest) GetLockGeneration() uint64 {
	if x != nil && x.LockGeneration != nil {
		return *x.LockGeneration
	}
	return 0
}

func (x *ListRangeRequest) GetRange() *KeyRange {
	if x != nil {
		return x.Range
	}
	return nil
}

func (x *ListRangeRequest) GetLimitBytes() uint64 {
	if x != nil {
		return x.LimitBytes
	}
	return 0
}

type ListRangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *ListRangeResponse) Reset() {
	*x = ListRangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRangeResponse) ProtoMessage() {}

func (x *ListRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRangeResponse.ProtoReflect.Descriptor instead.
func (*ListRangeResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{17}
}

func (x *ListRangeResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type ListRangeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of the key-value pairs and metadata requested.
	Key []*ListRangeResult_KeyInfo `protobuf:"bytes,1,rep,name=key,proto3" json:"key,omitempty"`
	// If requested data size is larger than limit_bytes then result will contain
	// only part of the requested key-value pairs and the is_overrun flag will be set.
	IsOverrun bool `protobuf:"varint,2,opt,name=is_overrun,json=isOverrun,proto3" json:"is_overrun,omitempty"`
	// Contains 0 if the request was sent to the node of the partition, node ID of the partition otherwise.
	NodeId uint32 `protobuf:"varint,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *ListRangeResult) Reset() {
	*x = ListRangeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRangeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRangeResult) ProtoMessage() {}

func (x *ListRangeResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRangeResult.ProtoReflect.Descriptor instead.
func (*ListRangeResult) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{18}
}

func (x *ListRangeResult) GetKey() []*ListRangeResult_KeyInfo {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ListRangeResult) GetIsOverrun() bool {
	if x != nil {
		return x.IsOverrun
	}
	return false
}

func (x *ListRangeResult) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type GetStorageChannelStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Volume path.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Partition of the volume.
	PartitionId uint64 `protobuf:"varint,3,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	// Generation of the exclusive lock acquired for the partition as a result of an AcquireLock call.
	LockGeneration *uint64 `protobuf:"varint,4,opt,name=lock_generation,json=lockGeneration,proto3,oneof" json:"lock_generation,omitempty"`
	// List of storage channels to get StorageChannelInfo for.
	StorageChannel []uint32 `protobuf:"varint,5,rep,packed,name=storage_channel,json=storageChannel,proto3" json:"storage_channel,omitempty"`
}

func (x *GetStorageChannelStatusRequest) Reset() {
	*x = GetStorageChannelStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStorageChannelStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageChannelStatusRequest) ProtoMessage() {}

func (x *GetStorageChannelStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageChannelStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStorageChannelStatusRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{19}
}

func (x *GetStorageChannelStatusRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *GetStorageChannelStatusRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetStorageChannelStatusRequest) GetPartitionId() uint64 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

func (x *GetStorageChannelStatusRequest) GetLockGeneration() uint64 {
	if x != nil && x.LockGeneration != nil {
		return *x.LockGeneration
	}
	return 0
}

func (x *GetStorageChannelStatusRequest) GetStorageChannel() []uint32 {
	if x != nil {
		return x.StorageChannel
	}
	return nil
}

type GetStorageChannelStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *GetStorageChannelStatusResponse) Reset() {
	*x = GetStorageChannelStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStorageChannelStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageChannelStatusResponse) ProtoMessage() {}

func (x *GetStorageChannelStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageChannelStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStorageChannelStatusResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{20}
}

func (x *GetStorageChannelStatusResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type GetStorageChannelStatusResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Contains status flags for the requested storage channels.
	StorageChannelInfo []*StorageChannelInfo `protobuf:"bytes,1,rep,name=storage_channel_info,json=storageChannelInfo,proto3" json:"storage_channel_info,omitempty"`
	// Contains 0 if the request was sent to the node of the partition, node ID of the partition otherwise.
	NodeId uint32 `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *GetStorageChannelStatusResult) Reset() {
	*x = GetStorageChannelStatusResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStorageChannelStatusResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageChannelStatusResult) ProtoMessage() {}

func (x *GetStorageChannelStatusResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageChannelStatusResult.ProtoReflect.Descriptor instead.
func (*GetStorageChannelStatusResult) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{21}
}

func (x *GetStorageChannelStatusResult) GetStorageChannelInfo() []*StorageChannelInfo {
	if x != nil {
		return x.StorageChannelInfo
	}
	return nil
}

func (x *GetStorageChannelStatusResult) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type CreateVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Volume path.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// The partition count of the new volume.
	PartitionCount uint32 `protobuf:"varint,4,opt,name=partition_count,json=partitionCount,proto3" json:"partition_count,omitempty"`
	// Set storage kinds for storage channels.
	StorageConfig *StorageConfig `protobuf:"bytes,5,opt,name=storage_config,json=storageConfig,proto3" json:"storage_config,omitempty"`
}

func (x *CreateVolumeRequest) Reset() {
	*x = CreateVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeRequest) ProtoMessage() {}

func (x *CreateVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeRequest.ProtoReflect.Descriptor instead.
func (*CreateVolumeRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{22}
}

func (x *CreateVolumeRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *CreateVolumeRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateVolumeRequest) GetPartitionCount() uint32 {
	if x != nil {
		return x.PartitionCount
	}
	return 0
}

func (x *CreateVolumeRequest) GetStorageConfig() *StorageConfig {
	if x != nil {
		return x.StorageConfig
	}
	return nil
}

type CreateVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *CreateVolumeResponse) Reset() {
	*x = CreateVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeResponse) ProtoMessage() {}

func (x *CreateVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeResponse.ProtoReflect.Descriptor instead.
func (*CreateVolumeResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{23}
}

func (x *CreateVolumeResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type CreateVolumeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateVolumeResult) Reset() {
	*x = CreateVolumeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVolumeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeResult) ProtoMessage() {}

func (x *CreateVolumeResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeResult.ProtoReflect.Descriptor instead.
func (*CreateVolumeResult) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{24}
}

type DropVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Volume path.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *DropVolumeRequest) Reset() {
	*x = DropVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropVolumeRequest) ProtoMessage() {}

func (x *DropVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropVolumeRequest.ProtoReflect.Descriptor instead.
func (*DropVolumeRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{25}
}

func (x *DropVolumeRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *DropVolumeRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DropVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *DropVolumeResponse) Reset() {
	*x = DropVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropVolumeResponse) ProtoMessage() {}

func (x *DropVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropVolumeResponse.ProtoReflect.Descriptor instead.
func (*DropVolumeResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{26}
}

func (x *DropVolumeResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type DropVolumeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DropVolumeResult) Reset() {
	*x = DropVolumeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropVolumeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropVolumeResult) ProtoMessage() {}

func (x *DropVolumeResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropVolumeResult.ProtoReflect.Descriptor instead.
func (*DropVolumeResult) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{27}
}

type AlterVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Volume path.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Change the partition count of the volume.
	// The value should be greater or equal than current patition count.
	AlterPartitionCount uint32 `protobuf:"varint,3,opt,name=alter_partition_count,json=alterPartitionCount,proto3" json:"alter_partition_count,omitempty"`
	// Set storage kinds for storage channels.
	// If the field is not present, storage channel settings are not changed.
	StorageConfig *StorageConfig `protobuf:"bytes,4,opt,name=storage_config,json=storageConfig,proto3" json:"storage_config,omitempty"`
}

func (x *AlterVolumeRequest) Reset() {
	*x = AlterVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterVolumeRequest) ProtoMessage() {}

func (x *AlterVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterVolumeRequest.ProtoReflect.Descriptor instead.
func (*AlterVolumeRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{28}
}

func (x *AlterVolumeRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *AlterVolumeRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AlterVolumeRequest) GetAlterPartitionCount() uint32 {
	if x != nil {
		return x.AlterPartitionCount
	}
	return 0
}

func (x *AlterVolumeRequest) GetStorageConfig() *StorageConfig {
	if x != nil {
		return x.StorageConfig
	}
	return nil
}

type AlterVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *AlterVolumeResponse) Reset() {
	*x = AlterVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterVolumeResponse) ProtoMessage() {}

func (x *AlterVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterVolumeResponse.ProtoReflect.Descriptor instead.
func (*AlterVolumeResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{29}
}

func (x *AlterVolumeResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type AlterVolumeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AlterVolumeResult) Reset() {
	*x = AlterVolumeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterVolumeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterVolumeResult) ProtoMessage() {}

func (x *AlterVolumeResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterVolumeResult.ProtoReflect.Descriptor instead.
func (*AlterVolumeResult) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{30}
}

type DescribeVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Volume path.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *DescribeVolumeRequest) Reset() {
	*x = DescribeVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVolumeRequest) ProtoMessage() {}

func (x *DescribeVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVolumeRequest.ProtoReflect.Descriptor instead.
func (*DescribeVolumeRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{31}
}

func (x *DescribeVolumeRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *DescribeVolumeRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DescribeVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *DescribeVolumeResponse) Reset() {
	*x = DescribeVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVolumeResponse) ProtoMessage() {}

func (x *DescribeVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVolumeResponse.ProtoReflect.Descriptor instead.
func (*DescribeVolumeResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{32}
}

func (x *DescribeVolumeResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type DescribeVolumeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Volume path.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Count of partitions.
	PartitionCount uint64 `protobuf:"varint,2,opt,name=partition_count,json=partitionCount,proto3" json:"partition_count,omitempty"`
}

func (x *DescribeVolumeResult) Reset() {
	*x = DescribeVolumeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVolumeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVolumeResult) ProtoMessage() {}

func (x *DescribeVolumeResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVolumeResult.ProtoReflect.Descriptor instead.
func (*DescribeVolumeResult) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{33}
}

func (x *DescribeVolumeResult) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DescribeVolumeResult) GetPartitionCount() uint64 {
	if x != nil {
		return x.PartitionCount
	}
	return 0
}

type ListLocalPartitionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Volume path.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// ID of the node to get partitions for.
	// 0 means the node the request was send to.
	NodeId uint64 `protobuf:"varint,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *ListLocalPartitionsRequest) Reset() {
	*x = ListLocalPartitionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLocalPartitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocalPartitionsRequest) ProtoMessage() {}

func (x *ListLocalPartitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocalPartitionsRequest.ProtoReflect.Descriptor instead.
func (*ListLocalPartitionsRequest) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{34}
}

func (x *ListLocalPartitionsRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *ListLocalPartitionsRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ListLocalPartitionsRequest) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type ListLocalPartitionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *ListLocalPartitionsResponse) Reset() {
	*x = ListLocalPartitionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLocalPartitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocalPartitionsResponse) ProtoMessage() {}

func (x *ListLocalPartitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocalPartitionsResponse.ProtoReflect.Descriptor instead.
func (*ListLocalPartitionsResponse) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{35}
}

func (x *ListLocalPartitionsResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type ListLocalPartitionsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Volume path.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// ID of the node.
	NodeId uint64 `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// List of the partitions of the volume on the node.
	PartitionIds []uint64 `protobuf:"varint,3,rep,packed,name=partition_ids,json=partitionIds,proto3" json:"partition_ids,omitempty"`
}

func (x *ListLocalPartitionsResult) Reset() {
	*x = ListLocalPartitionsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLocalPartitionsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocalPartitionsResult) ProtoMessage() {}

func (x *ListLocalPartitionsResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocalPartitionsResult.ProtoReflect.Descriptor instead.
func (*ListLocalPartitionsResult) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{36}
}

func (x *ListLocalPartitionsResult) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ListLocalPartitionsResult) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *ListLocalPartitionsResult) GetPartitionIds() []uint64 {
	if x != nil {
		return x.PartitionIds
	}
	return nil
}

type StorageConfig_ChannelConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Media for the storage channel.
	// This field specifies the kind of one storage_pool_types configured in config.yaml
	Media string `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
}

func (x *StorageConfig_ChannelConfig) Reset() {
	*x = StorageConfig_ChannelConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageConfig_ChannelConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageConfig_ChannelConfig) ProtoMessage() {}

func (x *StorageConfig_ChannelConfig) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageConfig_ChannelConfig.ProtoReflect.Descriptor instead.
func (*StorageConfig_ChannelConfig) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{2, 0}
}

func (x *StorageConfig_ChannelConfig) GetMedia() string {
	if x != nil {
		return x.Media
	}
	return ""
}

type ExecuteTransactionRequest_Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//
	//	*ExecuteTransactionRequest_Command_DeleteRange_
	//	*ExecuteTransactionRequest_Command_Rename_
	//	*ExecuteTransactionRequest_Command_CopyRange_
	//	*ExecuteTransactionRequest_Command_Concat_
	//	*ExecuteTransactionRequest_Command_Write_
	Action isExecuteTransactionRequest_Command_Action `protobuf_oneof:"action"`
}

func (x *ExecuteTransactionRequest_Command) Reset() {
	*x = ExecuteTransactionRequest_Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteTransactionRequest_Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransactionRequest_Command) ProtoMessage() {}

func (x *ExecuteTransactionRequest_Command) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTransactionRequest_Command.ProtoReflect.Descriptor instead.
func (*ExecuteTransactionRequest_Command) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{7, 0}
}

func (m *ExecuteTransactionRequest_Command) GetAction() isExecuteTransactionRequest_Command_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *ExecuteTransactionRequest_Command) GetDeleteRange() *ExecuteTransactionRequest_Command_DeleteRange {
	if x, ok := x.GetAction().(*ExecuteTransactionRequest_Command_DeleteRange_); ok {
		return x.DeleteRange
	}
	return nil
}

func (x *ExecuteTransactionRequest_Command) GetRename() *ExecuteTransactionRequest_Command_Rename {
	if x, ok := x.GetAction().(*ExecuteTransactionRequest_Command_Rename_); ok {
		return x.Rename
	}
	return nil
}

func (x *ExecuteTransactionRequest_Command) GetCopyRange() *ExecuteTransactionRequest_Command_CopyRange {
	if x, ok := x.GetAction().(*ExecuteTransactionRequest_Command_CopyRange_); ok {
		return x.CopyRange
	}
	return nil
}

func (x *ExecuteTransactionRequest_Command) GetConcat() *ExecuteTransactionRequest_Command_Concat {
	if x, ok := x.GetAction().(*ExecuteTransactionRequest_Command_Concat_); ok {
		return x.Concat
	}
	return nil
}

func (x *ExecuteTransactionRequest_Command) GetWrite() *ExecuteTransactionRequest_Command_Write {
	if x, ok := x.GetAction().(*ExecuteTransactionRequest_Command_Write_); ok {
		return x.Write
	}
	return nil
}

type isExecuteTransactionRequest_Command_Action interface {
	isExecuteTransactionRequest_Command_Action()
}

type ExecuteTransactionRequest_Command_DeleteRange_ struct {
	// Delete key-value pairs with keys in the range specified.
	DeleteRange *ExecuteTransactionRequest_Command_DeleteRange `protobuf:"bytes,1,opt,name=delete_range,json=deleteRange,proto3,oneof"`
}

type ExecuteTransactionRequest_Command_Rename_ struct {
	// Change the key of a key-value pair.
	Rename *ExecuteTransactionRequest_Command_Rename `protobuf:"bytes,2,opt,name=rename,proto3,oneof"`
}

type ExecuteTransactionRequest_Command_CopyRange_ struct {
	// Create a copy of key-value pairs with keys in the range specified by removing and/or prepending a prefix
	// to each key.
	CopyRange *ExecuteTransactionRequest_Command_CopyRange `protobuf:"bytes,3,opt,name=copy_range,json=copyRange,proto3,oneof"`
}

type ExecuteTransactionRequest_Command_Concat_ struct {
	// Create a new key-value pair with key specified by concatenating values of multiple other key-value pairs
	// with keys specified.
	Concat *ExecuteTransactionRequest_Command_Concat `protobuf:"bytes,4,opt,name=concat,proto3,oneof"`
}

type ExecuteTransactionRequest_Command_Write_ struct {
	// Create a new key-value pair with key and value specified.
	Write *ExecuteTransactionRequest_Command_Write `protobuf:"bytes,5,opt,name=write,proto3,oneof"`
}

func (*ExecuteTransactionRequest_Command_DeleteRange_) isExecuteTransactionRequest_Command_Action() {}

func (*ExecuteTransactionRequest_Command_Rename_) isExecuteTransactionRequest_Command_Action() {}

func (*ExecuteTransactionRequest_Command_CopyRange_) isExecuteTransactionRequest_Command_Action() {}

func (*ExecuteTransactionRequest_Command_Concat_) isExecuteTransactionRequest_Command_Action() {}

func (*ExecuteTransactionRequest_Command_Write_) isExecuteTransactionRequest_Command_Action() {}

type ExecuteTransactionRequest_Command_Rename struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key to change.
	OldKey string `protobuf:"bytes,1,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	// The new key to change the old key to.
	NewKey string `protobuf:"bytes,2,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
}

func (x *ExecuteTransactionRequest_Command_Rename) Reset() {
	*x = ExecuteTransactionRequest_Command_Rename{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteTransactionRequest_Command_Rename) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransactionRequest_Command_Rename) ProtoMessage() {}

func (x *ExecuteTransactionRequest_Command_Rename) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTransactionRequest_Command_Rename.ProtoReflect.Descriptor instead.
func (*ExecuteTransactionRequest_Command_Rename) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{7, 0, 0}
}

func (x *ExecuteTransactionRequest_Command_Rename) GetOldKey() string {
	if x != nil {
		return x.OldKey
	}
	return ""
}

func (x *ExecuteTransactionRequest_Command_Rename) GetNewKey() string {
	if x != nil {
		return x.NewKey
	}
	return ""
}

type ExecuteTransactionRequest_Command_Concat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Keys to use as the source for the concatenation.
	InputKeys []string `protobuf:"bytes,1,rep,name=input_keys,json=inputKeys,proto3" json:"input_keys,omitempty"`
	// New key to use for the result of the concatenation.
	OutputKey string `protobuf:"bytes,2,opt,name=output_key,json=outputKey,proto3" json:"output_key,omitempty"`
	// Input keys are deleted after the concatenation by default.
	// In order to keep both the inputs and the output, set keep_inputs to true.
	KeepInputs bool `protobuf:"varint,3,opt,name=keep_inputs,json=keepInputs,proto3" json:"keep_inputs,omitempty"`
}

func (x *ExecuteTransactionRequest_Command_Concat) Reset() {
	*x = ExecuteTransactionRequest_Command_Concat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteTransactionRequest_Command_Concat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransactionRequest_Command_Concat) ProtoMessage() {}

func (x *ExecuteTransactionRequest_Command_Concat) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTransactionRequest_Command_Concat.ProtoReflect.Descriptor instead.
func (*ExecuteTransactionRequest_Command_Concat) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{7, 0, 1}
}

func (x *ExecuteTransactionRequest_Command_Concat) GetInputKeys() []string {
	if x != nil {
		return x.InputKeys
	}
	return nil
}

func (x *ExecuteTransactionRequest_Command_Concat) GetOutputKey() string {
	if x != nil {
		return x.OutputKey
	}
	return ""
}

func (x *ExecuteTransactionRequest_Command_Concat) GetKeepInputs() bool {
	if x != nil {
		return x.KeepInputs
	}
	return false
}

// Make a copy of a range of key-value pairs.
// New keys are formed by removing a prefix and/or prepending keys with the new prefix.
// For example, copy of the key-value pairs [{aaabc,1}, {aaaef,2}, {baaef,3}] can be stripped of the 'aa' prefix
// and prepended with the 'x' so that the new pairs that are added are [{xabc, 1}, {xaef, 2}].
type ExecuteTransactionRequest_Command_CopyRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The range of keys to copy
	Range *KeyRange `protobuf:"bytes,1,opt,name=range,proto3" json:"range,omitempty"`
	// For each source key that begins with the prefix_to_remove, that prefix is removed from the new key before
	// prepending it with the prefix_to_add.
	// Acts as filter if not empty.
	PrefixToRemove string `protobuf:"bytes,2,opt,name=prefix_to_remove,json=prefixToRemove,proto3" json:"prefix_to_remove,omitempty"`
	// The prefix to prepend to each new key.
	PrefixToAdd string `protobuf:"bytes,3,opt,name=prefix_to_add,json=prefixToAdd,proto3" json:"prefix_to_add,omitempty"`
}

func (x *ExecuteTransactionRequest_Command_CopyRange) Reset() {
	*x = ExecuteTransactionRequest_Command_CopyRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteTransactionRequest_Command_CopyRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransactionRequest_Command_CopyRange) ProtoMessage() {}

func (x *ExecuteTransactionRequest_Command_CopyRange) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTransactionRequest_Command_CopyRange.ProtoReflect.Descriptor instead.
func (*ExecuteTransactionRequest_Command_CopyRange) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{7, 0, 2}
}

func (x *ExecuteTransactionRequest_Command_CopyRange) GetRange() *KeyRange {
	if x != nil {
		return x.Range
	}
	return nil
}

func (x *ExecuteTransactionRequest_Command_CopyRange) GetPrefixToRemove() string {
	if x != nil {
		return x.PrefixToRemove
	}
	return ""
}

func (x *ExecuteTransactionRequest_Command_CopyRange) GetPrefixToAdd() string {
	if x != nil {
		return x.PrefixToAdd
	}
	return ""
}

type ExecuteTransactionRequest_Command_Write struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Key of the key-value pair to write.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Value of the key-value pair to write.
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Storage channel to write the value to. Channel numbers begin with 1 and may go up to approximately 250
	// (depends on the channel configuration of each partition).
	// Channel 1 is called the INLINE channel (value is stored in the index table).
	// Channel 2 is called the MAIN channel (value is stored as a separate blob in the Distributed Storage).
	// Channels 1 and 2 are available for all partitions.
	// If the storage channel specified is not configured for the partition, the value is stored in
	// channel 2 (the MAIN channel).
	StorageChannel uint32 `protobuf:"varint,3,opt,name=storage_channel,json=storageChannel,proto3" json:"storage_channel,omitempty"` // (default = 0 is same as 2 or MAIN)
	// Priority to use for the Distributed Storage Get operation.
	// Has no effect for the INLINE storage channel.
	Priority Priorities_Priority `protobuf:"varint,4,opt,name=priority,proto3,enum=Ydb.KeyValue.Priorities_Priority" json:"priority,omitempty"`
	// Tactic to use for the Distributed Storage Put operation.
	// Has no effect for the INLINE storage channel.
	Tactic ExecuteTransactionRequest_Command_Write_Tactic `protobuf:"varint,5,opt,name=tactic,proto3,enum=Ydb.KeyValue.ExecuteTransactionRequest_Command_Write_Tactic" json:"tactic,omitempty"`
}

func (x *ExecuteTransactionRequest_Command_Write) Reset() {
	*x = ExecuteTransactionRequest_Command_Write{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteTransactionRequest_Command_Write) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransactionRequest_Command_Write) ProtoMessage() {}

func (x *ExecuteTransactionRequest_Command_Write) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTransactionRequest_Command_Write.ProtoReflect.Descriptor instead.
func (*ExecuteTransactionRequest_Command_Write) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{7, 0, 3}
}

func (x *ExecuteTransactionRequest_Command_Write) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ExecuteTransactionRequest_Command_Write) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ExecuteTransactionRequest_Command_Write) GetStorageChannel() uint32 {
	if x != nil {
		return x.StorageChannel
	}
	return 0
}

func (x *ExecuteTransactionRequest_Command_Write) GetPriority() Priorities_Priority {
	if x != nil {
		return x.Priority
	}
	return Priorities_PRIORITY_UNSPECIFIED
}

func (x *ExecuteTransactionRequest_Command_Write) GetTactic() ExecuteTransactionRequest_Command_Write_Tactic {
	if x != nil {
		return x.Tactic
	}
	return ExecuteTransactionRequest_Command_Write_TACTIC_UNSPECIFIED
}

type ExecuteTransactionRequest_Command_DeleteRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The range of keys to delete.
	Range *KeyRange `protobuf:"bytes,1,opt,name=range,proto3" json:"range,omitempty"`
}

func (x *ExecuteTransactionRequest_Command_DeleteRange) Reset() {
	*x = ExecuteTransactionRequest_Command_DeleteRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteTransactionRequest_Command_DeleteRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransactionRequest_Command_DeleteRange) ProtoMessage() {}

func (x *ExecuteTransactionRequest_Command_DeleteRange) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTransactionRequest_Command_DeleteRange.ProtoReflect.Descriptor instead.
func (*ExecuteTransactionRequest_Command_DeleteRange) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{7, 0, 4}
}

func (x *ExecuteTransactionRequest_Command_DeleteRange) GetRange() *KeyRange {
	if x != nil {
		return x.Range
	}
	return nil
}

type ReadRangeResult_KeyValuePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key of the key-value pair.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The value of the key-value pair.
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Unix time of the creation of the key-value pair (in ms).
	CreationUnixTime uint64 `protobuf:"varint,4,opt,name=creation_unix_time,json=creationUnixTime,proto3" json:"creation_unix_time,omitempty"`
	// Contains the index of the actually used storage channel. The actually used storage channel may differ from
	// the value specified in the write request for example if there were no such storage channel at the moment
	// of execution of the write command.
	// For values created as a result of concatenation or copy of concatenated values, the storage channel of the first
	// part of the value is specified.
	StorageChannel uint32 `protobuf:"varint,5,opt,name=storage_channel,json=storageChannel,proto3" json:"storage_channel,omitempty"`
}

func (x *ReadRangeResult_KeyValuePair) Reset() {
	*x = ReadRangeResult_KeyValuePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRangeResult_KeyValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRangeResult_KeyValuePair) ProtoMessage() {}

func (x *ReadRangeResult_KeyValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRangeResult_KeyValuePair.ProtoReflect.Descriptor instead.
func (*ReadRangeResult_KeyValuePair) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{15, 0}
}

func (x *ReadRangeResult_KeyValuePair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ReadRangeResult_KeyValuePair) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ReadRangeResult_KeyValuePair) GetCreationUnixTime() uint64 {
	if x != nil {
		return x.CreationUnixTime
	}
	return 0
}

func (x *ReadRangeResult_KeyValuePair) GetStorageChannel() uint32 {
	if x != nil {
		return x.StorageChannel
	}
	return 0
}

type ListRangeResult_KeyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key of the key-value pair.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Full size of the value of the key-value pair.
	ValueSize uint32 `protobuf:"varint,2,opt,name=value_size,json=valueSize,proto3" json:"value_size,omitempty"`
	// Unix time of the creation of the key-value pair (in ms).
	CreationUnixTime uint64 `protobuf:"varint,3,opt,name=creation_unix_time,json=creationUnixTime,proto3" json:"creation_unix_time,omitempty"`
	// Contains the index of the actually used storage channel. The actually used storage channel may differ from
	// the value specified in the write request for example if there were no such storage channel at the moment
	// of execution of the write command.
	// For values created as a result of concatenation or copy of concatenated values, the storage channel of the first
	// part of the value is specified.
	StorageChannel uint32 `protobuf:"varint,4,opt,name=storage_channel,json=storageChannel,proto3" json:"storage_channel,omitempty"`
}

func (x *ListRangeResult_KeyInfo) Reset() {
	*x = ListRangeResult_KeyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRangeResult_KeyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRangeResult_KeyInfo) ProtoMessage() {}

func (x *ListRangeResult_KeyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRangeResult_KeyInfo.ProtoReflect.Descriptor instead.
func (*ListRangeResult_KeyInfo) Descriptor() ([]byte, []int) {
	return file_draft_protos_ydb_keyvalue_proto_rawDescGZIP(), []int{18, 0}
}

func (x *ListRangeResult_KeyInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ListRangeResult_KeyInfo) GetValueSize() uint32 {
	if x != nil {
		return x.ValueSize
	}
	return 0
}

func (x *ListRangeResult_KeyInfo) GetCreationUnixTime() uint64 {
	if x != nil {
		return x.CreationUnixTime
	}
	return 0
}

func (x *ListRangeResult_KeyInfo) GetStorageChannel() uint32 {
	if x != nil {
		return x.StorageChannel
	}
	return 0
}

var File_draft_protos_ydb_keyvalue_proto protoreflect.FileDescriptor

var file_draft_protos_ydb_keyvalue_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x79,
	0x64, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x59, 0x64, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x79, 0x64, 0x62, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x02, 0x0a, 0x12,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x4c, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2b, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x22, 0x7f, 0x0a, 0x0a, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46,
	0x4c, 0x41, 0x47, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x0a, 0x12, 0x1b, 0x0a, 0x17, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f,
	0x57, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x14, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x4f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4f,
	0x55, 0x54, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x1e, 0x22, 0x62, 0x0a, 0x0a, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x54,
	0x49, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54,
	0x59, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x47, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x22, 0x7b,
	0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x43, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x1a, 0x25, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x22, 0xdc, 0x01, 0x0a, 0x08,
	0x4b, 0x65, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x49,
	0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x45,
	0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0e, 0x74, 0x6f, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x63, 0x6c, 0x75,
	0x73, 0x69, 0x76, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x0e, 0x74, 0x6f, 0x4b, 0x65, 0x79, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x0a,
	0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x12, 0x41,
	0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4a, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x59, 0x64,
	0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x13, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x11, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0xa5, 0x0b, 0x0a, 0x19,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0f,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x59,
	0x64, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x08, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x1a, 0xf5, 0x08, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x60, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x59, 0x64, 0x62, 0x2e,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x50, 0x0a, 0x06, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52,
	0x06, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5a, 0x0a, 0x0a, 0x63, 0x6f, 0x70, 0x79, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x59, 0x64,
	0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x70,
	0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x70, 0x79, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x50, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x63, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x63, 0x61, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x63, 0x61, 0x74, 0x12, 0x4d, 0x0a, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x48, 0x00, 0x52, 0x05, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x1a, 0x3a, 0x0a, 0x06, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x6f, 0x6c, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x6c, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x4b, 0x65, 0x79,
	0x1a, 0x67, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x63, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6b, 0x65, 0x65, 0x70,
	0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6b,
	0x65, 0x65, 0x70, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x1a, 0x87, 0x01, 0x0a, 0x09, 0x43, 0x6f,
	0x70, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4b, 0x65, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x05,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f,
	0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12,
	0x22, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x54, 0x6f,
	0x41, 0x64, 0x64, 0x1a, 0xc2, 0x02, 0x0a, 0x05, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x3d,
	0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x21, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x54, 0x0a,
	0x06, 0x74, 0x61, 0x63, 0x74, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e,
	0x59, 0x64, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x2e, 0x54, 0x61, 0x63, 0x74, 0x69, 0x63, 0x52, 0x06, 0x74, 0x61, 0x63,
	0x74, 0x69, 0x63, 0x22, 0x53, 0x0a, 0x06, 0x54, 0x61, 0x63, 0x74, 0x69, 0x63, 0x12, 0x16, 0x0a,
	0x12, 0x54, 0x41, 0x43, 0x54, 0x49, 0x43, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x41, 0x43, 0x54, 0x49, 0x43, 0x5f,
	0x4d, 0x41, 0x58, 0x5f, 0x54, 0x48, 0x52, 0x4f, 0x55, 0x47, 0x48, 0x50, 0x55, 0x54, 0x10, 0x01,
	0x12, 0x16, 0x0a, 0x12, 0x54, 0x41, 0x43, 0x54, 0x49, 0x43, 0x5f, 0x4d, 0x49, 0x4e, 0x5f, 0x4c,
	0x41, 0x54, 0x45, 0x4e, 0x43, 0x59, 0x10, 0x02, 0x1a, 0x3b, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4b, 0x65, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x05,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x1a, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x87, 0x01, 0x0a, 0x18, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x52, 0x0a, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x22, 0xf0, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52,
	0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x00, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4b, 0x65, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xd1, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x4b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x75, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x75, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x22, 0xe5, 0x02, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0f,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x05, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x59, 0x64, 0x62, 0x2e,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x59, 0x64,
	0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x11,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x02, 0x0a, 0x0f, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3e,
	0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x59,
	0x64, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x75, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x75, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x1a, 0x8d, 0x01, 0x0a, 0x0c, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x2c, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x78,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0xa6, 0x02, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x05,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x59, 0x64,
	0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x4c, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x96, 0x02,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x37, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4b, 0x65,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x75, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x75, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x1a, 0x91, 0x01, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x2c, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x78,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x8e, 0x02, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0f,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5a, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x52, 0x0a, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x59, 0x64,
	0x62, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x4f, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x73,
	0x0a, 0x11, 0x44, 0x72, 0x6f, 0x70, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x22, 0x4d, 0x0a, 0x12, 0x44, 0x72, 0x6f, 0x70, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x59,
	0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x12, 0x0a, 0x10, 0x44, 0x72, 0x6f, 0x70, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xec, 0x01, 0x0a, 0x12, 0x41, 0x6c, 0x74, 0x65, 0x72,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a,
	0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x32, 0x0a,
	0x15, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x61, 0x6c,
	0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x42, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x59, 0x64, 0x62, 0x2e,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x4e, 0x0a, 0x13, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x77, 0x0a, 0x15, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x22, 0x51, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x1a,
	0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6d, 0x0a, 0x19, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x42, 0x68, 0x0a, 0x20, 0x74, 0x65,
	0x63, 0x68, 0x2e, 0x79, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x72, 0x61,
	0x66, 0x74, 0x2e, 0x6b, 0x65, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x5a, 0x41,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d, 0x67, 0x6f, 0x2d, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x59, 0x64, 0x62, 0x5f, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0xf8, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_draft_protos_ydb_keyvalue_proto_rawDescOnce sync.Once
	file_draft_protos_ydb_keyvalue_proto_rawDescData = file_draft_protos_ydb_keyvalue_proto_rawDesc
)

func file_draft_protos_ydb_keyvalue_proto_rawDescGZIP() []byte {
	file_draft_protos_ydb_keyvalue_proto_rawDescOnce.Do(func() {
		file_draft_protos_ydb_keyvalue_proto_rawDescData = protoimpl.X.CompressGZIP(file_draft_protos_ydb_keyvalue_proto_rawDescData)
	})
	return file_draft_protos_ydb_keyvalue_proto_rawDescData
}

var file_draft_protos_ydb_keyvalue_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_draft_protos_ydb_keyvalue_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_draft_protos_ydb_keyvalue_proto_goTypes = []interface{}{
	(StorageChannelInfo_StatusFlag)(0),                    // 0: Ydb.KeyValue.StorageChannelInfo.StatusFlag
	(Priorities_Priority)(0),                              // 1: Ydb.KeyValue.Priorities.Priority
	(ExecuteTransactionRequest_Command_Write_Tactic)(0),   // 2: Ydb.KeyValue.ExecuteTransactionRequest.Command.Write.Tactic
	(*StorageChannelInfo)(nil),                            // 3: Ydb.KeyValue.StorageChannelInfo
	(*Priorities)(nil),                                    // 4: Ydb.KeyValue.Priorities
	(*StorageConfig)(nil),                                 // 5: Ydb.KeyValue.StorageConfig
	(*KeyRange)(nil),                                      // 6: Ydb.KeyValue.KeyRange
	(*AcquireLockRequest)(nil),                            // 7: Ydb.KeyValue.AcquireLockRequest
	(*AcquireLockResponse)(nil),                           // 8: Ydb.KeyValue.AcquireLockResponse
	(*AcquireLockResult)(nil),                             // 9: Ydb.KeyValue.AcquireLockResult
	(*ExecuteTransactionRequest)(nil),                     // 10: Ydb.KeyValue.ExecuteTransactionRequest
	(*ExecuteTransactionResponse)(nil),                    // 11: Ydb.KeyValue.ExecuteTransactionResponse
	(*ExecuteTransactionResult)(nil),                      // 12: Ydb.KeyValue.ExecuteTransactionResult
	(*ReadRequest)(nil),                                   // 13: Ydb.KeyValue.ReadRequest
	(*ReadResponse)(nil),                                  // 14: Ydb.KeyValue.ReadResponse
	(*ReadResult)(nil),                                    // 15: Ydb.KeyValue.ReadResult
	(*ReadRangeRequest)(nil),                              // 16: Ydb.KeyValue.ReadRangeRequest
	(*ReadRangeResponse)(nil),                             // 17: Ydb.KeyValue.ReadRangeResponse
	(*ReadRangeResult)(nil),                               // 18: Ydb.KeyValue.ReadRangeResult
	(*ListRangeRequest)(nil),                              // 19: Ydb.KeyValue.ListRangeRequest
	(*ListRangeResponse)(nil),                             // 20: Ydb.KeyValue.ListRangeResponse
	(*ListRangeResult)(nil),                               // 21: Ydb.KeyValue.ListRangeResult
	(*GetStorageChannelStatusRequest)(nil),                // 22: Ydb.KeyValue.GetStorageChannelStatusRequest
	(*GetStorageChannelStatusResponse)(nil),               // 23: Ydb.KeyValue.GetStorageChannelStatusResponse
	(*GetStorageChannelStatusResult)(nil),                 // 24: Ydb.KeyValue.GetStorageChannelStatusResult
	(*CreateVolumeRequest)(nil),                           // 25: Ydb.KeyValue.CreateVolumeRequest
	(*CreateVolumeResponse)(nil),                          // 26: Ydb.KeyValue.CreateVolumeResponse
	(*CreateVolumeResult)(nil),                            // 27: Ydb.KeyValue.CreateVolumeResult
	(*DropVolumeRequest)(nil),                             // 28: Ydb.KeyValue.DropVolumeRequest
	(*DropVolumeResponse)(nil),                            // 29: Ydb.KeyValue.DropVolumeResponse
	(*DropVolumeResult)(nil),                              // 30: Ydb.KeyValue.DropVolumeResult
	(*AlterVolumeRequest)(nil),                            // 31: Ydb.KeyValue.AlterVolumeRequest
	(*AlterVolumeResponse)(nil),                           // 32: Ydb.KeyValue.AlterVolumeResponse
	(*AlterVolumeResult)(nil),                             // 33: Ydb.KeyValue.AlterVolumeResult
	(*DescribeVolumeRequest)(nil),                         // 34: Ydb.KeyValue.DescribeVolumeRequest
	(*DescribeVolumeResponse)(nil),                        // 35: Ydb.KeyValue.DescribeVolumeResponse
	(*DescribeVolumeResult)(nil),                          // 36: Ydb.KeyValue.DescribeVolumeResult
	(*ListLocalPartitionsRequest)(nil),                    // 37: Ydb.KeyValue.ListLocalPartitionsRequest
	(*ListLocalPartitionsResponse)(nil),                   // 38: Ydb.KeyValue.ListLocalPartitionsResponse
	(*ListLocalPartitionsResult)(nil),                     // 39: Ydb.KeyValue.ListLocalPartitionsResult
	(*StorageConfig_ChannelConfig)(nil),                   // 40: Ydb.KeyValue.StorageConfig.ChannelConfig
	(*ExecuteTransactionRequest_Command)(nil),             // 41: Ydb.KeyValue.ExecuteTransactionRequest.Command
	(*ExecuteTransactionRequest_Command_Rename)(nil),      // 42: Ydb.KeyValue.ExecuteTransactionRequest.Command.Rename
	(*ExecuteTransactionRequest_Command_Concat)(nil),      // 43: Ydb.KeyValue.ExecuteTransactionRequest.Command.Concat
	(*ExecuteTransactionRequest_Command_CopyRange)(nil),   // 44: Ydb.KeyValue.ExecuteTransactionRequest.Command.CopyRange
	(*ExecuteTransactionRequest_Command_Write)(nil),       // 45: Ydb.KeyValue.ExecuteTransactionRequest.Command.Write
	(*ExecuteTransactionRequest_Command_DeleteRange)(nil), // 46: Ydb.KeyValue.ExecuteTransactionRequest.Command.DeleteRange
	(*ReadRangeResult_KeyValuePair)(nil),                  // 47: Ydb.KeyValue.ReadRangeResult.KeyValuePair
	(*ListRangeResult_KeyInfo)(nil),                       // 48: Ydb.KeyValue.ListRangeResult.KeyInfo
	(*Ydb_Operations.OperationParams)(nil),                // 49: Ydb.Operations.OperationParams
	(*Ydb_Operations.Operation)(nil),                      // 50: Ydb.Operations.Operation
}
var file_draft_protos_ydb_keyvalue_proto_depIdxs = []int32{
	0,  // 0: Ydb.KeyValue.StorageChannelInfo.status_flag:type_name -> Ydb.KeyValue.StorageChannelInfo.StatusFlag
	40, // 1: Ydb.KeyValue.StorageConfig.channel:type_name -> Ydb.KeyValue.StorageConfig.ChannelConfig
	49, // 2: Ydb.KeyValue.AcquireLockRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	50, // 3: Ydb.KeyValue.AcquireLockResponse.operation:type_name -> Ydb.Operations.Operation
	49, // 4: Ydb.KeyValue.ExecuteTransactionRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	41, // 5: Ydb.KeyValue.ExecuteTransactionRequest.commands:type_name -> Ydb.KeyValue.ExecuteTransactionRequest.Command
	50, // 6: Ydb.KeyValue.ExecuteTransactionResponse.operation:type_name -> Ydb.Operations.Operation
	3,  // 7: Ydb.KeyValue.ExecuteTransactionResult.storage_channel_info:type_name -> Ydb.KeyValue.StorageChannelInfo
	49, // 8: Ydb.KeyValue.ReadRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	1,  // 9: Ydb.KeyValue.ReadRequest.priority:type_name -> Ydb.KeyValue.Priorities.Priority
	50, // 10: Ydb.KeyValue.ReadResponse.operation:type_name -> Ydb.Operations.Operation
	49, // 11: Ydb.KeyValue.ReadRangeRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	6,  // 12: Ydb.KeyValue.ReadRangeRequest.range:type_name -> Ydb.KeyValue.KeyRange
	1,  // 13: Ydb.KeyValue.ReadRangeRequest.priority:type_name -> Ydb.KeyValue.Priorities.Priority
	50, // 14: Ydb.KeyValue.ReadRangeResponse.operation:type_name -> Ydb.Operations.Operation
	47, // 15: Ydb.KeyValue.ReadRangeResult.pair:type_name -> Ydb.KeyValue.ReadRangeResult.KeyValuePair
	49, // 16: Ydb.KeyValue.ListRangeRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	6,  // 17: Ydb.KeyValue.ListRangeRequest.range:type_name -> Ydb.KeyValue.KeyRange
	50, // 18: Ydb.KeyValue.ListRangeResponse.operation:type_name -> Ydb.Operations.Operation
	48, // 19: Ydb.KeyValue.ListRangeResult.key:type_name -> Ydb.KeyValue.ListRangeResult.KeyInfo
	49, // 20: Ydb.KeyValue.GetStorageChannelStatusRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	50, // 21: Ydb.KeyValue.GetStorageChannelStatusResponse.operation:type_name -> Ydb.Operations.Operation
	3,  // 22: Ydb.KeyValue.GetStorageChannelStatusResult.storage_channel_info:type_name -> Ydb.KeyValue.StorageChannelInfo
	49, // 23: Ydb.KeyValue.CreateVolumeRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	5,  // 24: Ydb.KeyValue.CreateVolumeRequest.storage_config:type_name -> Ydb.KeyValue.StorageConfig
	50, // 25: Ydb.KeyValue.CreateVolumeResponse.operation:type_name -> Ydb.Operations.Operation
	49, // 26: Ydb.KeyValue.DropVolumeRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	50, // 27: Ydb.KeyValue.DropVolumeResponse.operation:type_name -> Ydb.Operations.Operation
	49, // 28: Ydb.KeyValue.AlterVolumeRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	5,  // 29: Ydb.KeyValue.AlterVolumeRequest.storage_config:type_name -> Ydb.KeyValue.StorageConfig
	50, // 30: Ydb.KeyValue.AlterVolumeResponse.operation:type_name -> Ydb.Operations.Operation
	49, // 31: Ydb.KeyValue.DescribeVolumeRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	50, // 32: Ydb.KeyValue.DescribeVolumeResponse.operation:type_name -> Ydb.Operations.Operation
	49, // 33: Ydb.KeyValue.ListLocalPartitionsRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	50, // 34: Ydb.KeyValue.ListLocalPartitionsResponse.operation:type_name -> Ydb.Operations.Operation
	46, // 35: Ydb.KeyValue.ExecuteTransactionRequest.Command.delete_range:type_name -> Ydb.KeyValue.ExecuteTransactionRequest.Command.DeleteRange
	42, // 36: Ydb.KeyValue.ExecuteTransactionRequest.Command.rename:type_name -> Ydb.KeyValue.ExecuteTransactionRequest.Command.Rename
	44, // 37: Ydb.KeyValue.ExecuteTransactionRequest.Command.copy_range:type_name -> Ydb.KeyValue.ExecuteTransactionRequest.Command.CopyRange
	43, // 38: Ydb.KeyValue.ExecuteTransactionRequest.Command.concat:type_name -> Ydb.KeyValue.ExecuteTransactionRequest.Command.Concat
	45, // 39: Ydb.KeyValue.ExecuteTransactionRequest.Command.write:type_name -> Ydb.KeyValue.ExecuteTransactionRequest.Command.Write
	6,  // 40: Ydb.KeyValue.ExecuteTransactionRequest.Command.CopyRange.range:type_name -> Ydb.KeyValue.KeyRange
	1,  // 41: Ydb.KeyValue.ExecuteTransactionRequest.Command.Write.priority:type_name -> Ydb.KeyValue.Priorities.Priority
	2,  // 42: Ydb.KeyValue.ExecuteTransactionRequest.Command.Write.tactic:type_name -> Ydb.KeyValue.ExecuteTransactionRequest.Command.Write.Tactic
	6,  // 43: Ydb.KeyValue.ExecuteTransactionRequest.Command.DeleteRange.range:type_name -> Ydb.KeyValue.KeyRange
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_draft_protos_ydb_keyvalue_proto_init() }
func file_draft_protos_ydb_keyvalue_proto_init() {
	if File_draft_protos_ydb_keyvalue_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_draft_protos_ydb_keyvalue_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageChannelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Priorities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcquireLockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcquireLockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcquireLockResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteTransactionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadRangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadRangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadRangeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRangeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStorageChannelStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStorageChannelStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStorageChannelStatusResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVolumeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropVolumeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterVolumeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVolumeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocalPartitionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocalPartitionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocalPartitionsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageConfig_ChannelConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteTransactionRequest_Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteTransactionRequest_Command_Rename); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteTransactionRequest_Command_Concat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteTransactionRequest_Command_CopyRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteTransactionRequest_Command_Write); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteTransactionRequest_Command_DeleteRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadRangeResult_KeyValuePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draft_protos_ydb_keyvalue_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRangeResult_KeyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_draft_protos_ydb_keyvalue_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*KeyRange_FromKeyInclusive)(nil),
		(*KeyRange_FromKeyExclusive)(nil),
		(*KeyRange_ToKeyInclusive)(nil),
		(*KeyRange_ToKeyExclusive)(nil),
	}
	file_draft_protos_ydb_keyvalue_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_draft_protos_ydb_keyvalue_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_draft_protos_ydb_keyvalue_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_draft_protos_ydb_keyvalue_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_draft_protos_ydb_keyvalue_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_draft_protos_ydb_keyvalue_proto_msgTypes[38].OneofWrappers = []interface{}{
		(*ExecuteTransactionRequest_Command_DeleteRange_)(nil),
		(*ExecuteTransactionRequest_Command_Rename_)(nil),
		(*ExecuteTransactionRequest_Command_CopyRange_)(nil),
		(*ExecuteTransactionRequest_Command_Concat_)(nil),
		(*ExecuteTransactionRequest_Command_Write_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_draft_protos_ydb_keyvalue_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_draft_protos_ydb_keyvalue_proto_goTypes,
		DependencyIndexes: file_draft_protos_ydb_keyvalue_proto_depIdxs,
		EnumInfos:         file_draft_protos_ydb_keyvalue_proto_enumTypes,
		MessageInfos:      file_draft_protos_ydb_keyvalue_proto_msgTypes,
	}.Build()
	File_draft_protos_ydb_keyvalue_proto = out.File
	file_draft_protos_ydb_keyvalue_proto_rawDesc = nil
	file_draft_protos_ydb_keyvalue_proto_goTypes = nil
	file_draft_protos_ydb_keyvalue_proto_depIdxs = nil
}
