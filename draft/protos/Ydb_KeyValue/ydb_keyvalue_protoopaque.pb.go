// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: draft/protos/ydb_keyvalue.proto

//go:build protoopaque

package Ydb_KeyValue

import (
	Ydb_Operations "github.com/ydb-platform/ydb-go-genproto/protos/Ydb_Operations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StorageChannelInfo_StatusFlag int32

const (
	// The system was unable to get the storage channel status.
	StorageChannelInfo_STATUS_FLAG_UNSPECIFIED StorageChannelInfo_StatusFlag = 0
	// Enough storage space is available.
	StorageChannelInfo_STATUS_FLAG_GREEN StorageChannelInfo_StatusFlag = 10
	// Free storage space is low, user must stop writing new data. Compaction's writes are allow.
	StorageChannelInfo_STATUS_FLAG_YELLOW_STOP StorageChannelInfo_StatusFlag = 20
	// No free storage space is available, no writes will successed.
	StorageChannelInfo_STATUS_FLAG_ORANGE_OUT_SPACE StorageChannelInfo_StatusFlag = 30
)

// Enum value maps for StorageChannelInfo_StatusFlag.
var (
	StorageChannelInfo_StatusFlag_name = map[int32]string{
		0:  "STATUS_FLAG_UNSPECIFIED",
		10: "STATUS_FLAG_GREEN",
		20: "STATUS_FLAG_YELLOW_STOP",
		30: "STATUS_FLAG_ORANGE_OUT_SPACE",
	}
	StorageChannelInfo_StatusFlag_value = map[string]int32{
		"STATUS_FLAG_UNSPECIFIED":      0,
		"STATUS_FLAG_GREEN":            10,
		"STATUS_FLAG_YELLOW_STOP":      20,
		"STATUS_FLAG_ORANGE_OUT_SPACE": 30,
	}
)

func (x StorageChannelInfo_StatusFlag) Enum() *StorageChannelInfo_StatusFlag {
	p := new(StorageChannelInfo_StatusFlag)
	*p = x
	return p
}

func (x StorageChannelInfo_StatusFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageChannelInfo_StatusFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_keyvalue_proto_enumTypes[0].Descriptor()
}

func (StorageChannelInfo_StatusFlag) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_keyvalue_proto_enumTypes[0]
}

func (x StorageChannelInfo_StatusFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Priorities_Priority int32

const (
	// Use default priority (PRIORITY_REALTIME).
	Priorities_PRIORITY_UNSPECIFIED Priorities_Priority = 0
	// High priority for user-initiated operations, the default priority.
	Priorities_PRIORITY_REALTIME Priorities_Priority = 1
	// Low priority for background system activity.
	Priorities_PRIORITY_BACKGROUND Priorities_Priority = 2
)

// Enum value maps for Priorities_Priority.
var (
	Priorities_Priority_name = map[int32]string{
		0: "PRIORITY_UNSPECIFIED",
		1: "PRIORITY_REALTIME",
		2: "PRIORITY_BACKGROUND",
	}
	Priorities_Priority_value = map[string]int32{
		"PRIORITY_UNSPECIFIED": 0,
		"PRIORITY_REALTIME":    1,
		"PRIORITY_BACKGROUND":  2,
	}
)

func (x Priorities_Priority) Enum() *Priorities_Priority {
	p := new(Priorities_Priority)
	*p = x
	return p
}

func (x Priorities_Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Priorities_Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_keyvalue_proto_enumTypes[1].Descriptor()
}

func (Priorities_Priority) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_keyvalue_proto_enumTypes[1]
}

func (x Priorities_Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ExecuteTransactionRequest_Command_Write_Tactic int32

const (
	// Use default tactic (TACTIC_MAX_THROUGHPUT).
	ExecuteTransactionRequest_Command_Write_TACTIC_UNSPECIFIED ExecuteTransactionRequest_Command_Write_Tactic = 0
	// Write minimum required redundant data. Does not affect storage durability. The default tactic.
	ExecuteTransactionRequest_Command_Write_TACTIC_MAX_THROUGHPUT ExecuteTransactionRequest_Command_Write_Tactic = 1
	// Write additional redundant data to reduce operation duration. Will use additional space.
	ExecuteTransactionRequest_Command_Write_TACTIC_MIN_LATENCY ExecuteTransactionRequest_Command_Write_Tactic = 2
)

// Enum value maps for ExecuteTransactionRequest_Command_Write_Tactic.
var (
	ExecuteTransactionRequest_Command_Write_Tactic_name = map[int32]string{
		0: "TACTIC_UNSPECIFIED",
		1: "TACTIC_MAX_THROUGHPUT",
		2: "TACTIC_MIN_LATENCY",
	}
	ExecuteTransactionRequest_Command_Write_Tactic_value = map[string]int32{
		"TACTIC_UNSPECIFIED":    0,
		"TACTIC_MAX_THROUGHPUT": 1,
		"TACTIC_MIN_LATENCY":    2,
	}
)

func (x ExecuteTransactionRequest_Command_Write_Tactic) Enum() *ExecuteTransactionRequest_Command_Write_Tactic {
	p := new(ExecuteTransactionRequest_Command_Write_Tactic)
	*p = x
	return p
}

func (x ExecuteTransactionRequest_Command_Write_Tactic) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecuteTransactionRequest_Command_Write_Tactic) Descriptor() protoreflect.EnumDescriptor {
	return file_draft_protos_ydb_keyvalue_proto_enumTypes[2].Descriptor()
}

func (ExecuteTransactionRequest_Command_Write_Tactic) Type() protoreflect.EnumType {
	return &file_draft_protos_ydb_keyvalue_proto_enumTypes[2]
}

func (x ExecuteTransactionRequest_Command_Write_Tactic) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type StorageChannelInfo struct {
	state                     protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_StorageChannel uint32                        `protobuf:"varint,1,opt,name=storage_channel,json=storageChannel"`
	xxx_hidden_StatusFlag     StorageChannelInfo_StatusFlag `protobuf:"varint,2,opt,name=status_flag,json=statusFlag,enum=Ydb.KeyValue.StorageChannelInfo_StatusFlag"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *StorageChannelInfo) Reset() {
	*x = StorageChannelInfo{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageChannelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageChannelInfo) ProtoMessage() {}

func (x *StorageChannelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StorageChannelInfo) GetStorageChannel() uint32 {
	if x != nil {
		return x.xxx_hidden_StorageChannel
	}
	return 0
}

func (x *StorageChannelInfo) GetStatusFlag() StorageChannelInfo_StatusFlag {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_StatusFlag
		}
	}
	return StorageChannelInfo_STATUS_FLAG_UNSPECIFIED
}

func (x *StorageChannelInfo) SetStorageChannel(v uint32) {
	x.xxx_hidden_StorageChannel = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *StorageChannelInfo) SetStatusFlag(v StorageChannelInfo_StatusFlag) {
	x.xxx_hidden_StatusFlag = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *StorageChannelInfo) HasStorageChannel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StorageChannelInfo) HasStatusFlag() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *StorageChannelInfo) ClearStorageChannel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_StorageChannel = 0
}

func (x *StorageChannelInfo) ClearStatusFlag() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_StatusFlag = StorageChannelInfo_STATUS_FLAG_UNSPECIFIED
}

type StorageChannelInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Storage channel index.
	StorageChannel *uint32
	// The status flag of the storage channel.
	StatusFlag *StorageChannelInfo_StatusFlag
}

func (b0 StorageChannelInfo_builder) Build() *StorageChannelInfo {
	m0 := &StorageChannelInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.StorageChannel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_StorageChannel = *b.StorageChannel
	}
	if b.StatusFlag != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_StatusFlag = *b.StatusFlag
	}
	return m0
}

type Priorities struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Priorities) Reset() {
	*x = Priorities{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Priorities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Priorities) ProtoMessage() {}

func (x *Priorities) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Priorities_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Priorities_builder) Build() *Priorities {
	m0 := &Priorities{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type StorageConfig struct {
	state              protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_Channel *[]*StorageConfig_ChannelConfig `protobuf:"bytes,1,rep,name=channel"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *StorageConfig) Reset() {
	*x = StorageConfig{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageConfig) ProtoMessage() {}

func (x *StorageConfig) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StorageConfig) GetChannel() []*StorageConfig_ChannelConfig {
	if x != nil {
		if x.xxx_hidden_Channel != nil {
			return *x.xxx_hidden_Channel
		}
	}
	return nil
}

func (x *StorageConfig) SetChannel(v []*StorageConfig_ChannelConfig) {
	x.xxx_hidden_Channel = &v
}

type StorageConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Channel configs.
	// Channels 0 and 1 are system channels needed for tablet operation.
	// Channels starting with 2 are user channels.
	Channel []*StorageConfig_ChannelConfig
}

func (b0 StorageConfig_builder) Build() *StorageConfig {
	m0 := &StorageConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Channel = &b.Channel
	return m0
}

type KeyRange struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FromBound isKeyRange_FromBound   `protobuf_oneof:"from_bound"`
	xxx_hidden_ToBound   isKeyRange_ToBound     `protobuf_oneof:"to_bound"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *KeyRange) Reset() {
	*x = KeyRange{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyRange) ProtoMessage() {}

func (x *KeyRange) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *KeyRange) GetFromKeyInclusive() string {
	if x != nil {
		if x, ok := x.xxx_hidden_FromBound.(*keyRange_FromKeyInclusive); ok {
			return x.FromKeyInclusive
		}
	}
	return ""
}

func (x *KeyRange) GetFromKeyExclusive() string {
	if x != nil {
		if x, ok := x.xxx_hidden_FromBound.(*keyRange_FromKeyExclusive); ok {
			return x.FromKeyExclusive
		}
	}
	return ""
}

func (x *KeyRange) GetToKeyInclusive() string {
	if x != nil {
		if x, ok := x.xxx_hidden_ToBound.(*keyRange_ToKeyInclusive); ok {
			return x.ToKeyInclusive
		}
	}
	return ""
}

func (x *KeyRange) GetToKeyExclusive() string {
	if x != nil {
		if x, ok := x.xxx_hidden_ToBound.(*keyRange_ToKeyExclusive); ok {
			return x.ToKeyExclusive
		}
	}
	return ""
}

func (x *KeyRange) SetFromKeyInclusive(v string) {
	x.xxx_hidden_FromBound = &keyRange_FromKeyInclusive{v}
}

func (x *KeyRange) SetFromKeyExclusive(v string) {
	x.xxx_hidden_FromBound = &keyRange_FromKeyExclusive{v}
}

func (x *KeyRange) SetToKeyInclusive(v string) {
	x.xxx_hidden_ToBound = &keyRange_ToKeyInclusive{v}
}

func (x *KeyRange) SetToKeyExclusive(v string) {
	x.xxx_hidden_ToBound = &keyRange_ToKeyExclusive{v}
}

func (x *KeyRange) HasFromBound() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FromBound != nil
}

func (x *KeyRange) HasFromKeyInclusive() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_FromBound.(*keyRange_FromKeyInclusive)
	return ok
}

func (x *KeyRange) HasFromKeyExclusive() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_FromBound.(*keyRange_FromKeyExclusive)
	return ok
}

func (x *KeyRange) HasToBound() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ToBound != nil
}

func (x *KeyRange) HasToKeyInclusive() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_ToBound.(*keyRange_ToKeyInclusive)
	return ok
}

func (x *KeyRange) HasToKeyExclusive() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_ToBound.(*keyRange_ToKeyExclusive)
	return ok
}

func (x *KeyRange) ClearFromBound() {
	x.xxx_hidden_FromBound = nil
}

func (x *KeyRange) ClearFromKeyInclusive() {
	if _, ok := x.xxx_hidden_FromBound.(*keyRange_FromKeyInclusive); ok {
		x.xxx_hidden_FromBound = nil
	}
}

func (x *KeyRange) ClearFromKeyExclusive() {
	if _, ok := x.xxx_hidden_FromBound.(*keyRange_FromKeyExclusive); ok {
		x.xxx_hidden_FromBound = nil
	}
}

func (x *KeyRange) ClearToBound() {
	x.xxx_hidden_ToBound = nil
}

func (x *KeyRange) ClearToKeyInclusive() {
	if _, ok := x.xxx_hidden_ToBound.(*keyRange_ToKeyInclusive); ok {
		x.xxx_hidden_ToBound = nil
	}
}

func (x *KeyRange) ClearToKeyExclusive() {
	if _, ok := x.xxx_hidden_ToBound.(*keyRange_ToKeyExclusive); ok {
		x.xxx_hidden_ToBound = nil
	}
}

const KeyRange_FromBound_not_set_case case_KeyRange_FromBound = 0
const KeyRange_FromKeyInclusive_case case_KeyRange_FromBound = 1
const KeyRange_FromKeyExclusive_case case_KeyRange_FromBound = 2

func (x *KeyRange) WhichFromBound() case_KeyRange_FromBound {
	if x == nil {
		return KeyRange_FromBound_not_set_case
	}
	switch x.xxx_hidden_FromBound.(type) {
	case *keyRange_FromKeyInclusive:
		return KeyRange_FromKeyInclusive_case
	case *keyRange_FromKeyExclusive:
		return KeyRange_FromKeyExclusive_case
	default:
		return KeyRange_FromBound_not_set_case
	}
}

const KeyRange_ToBound_not_set_case case_KeyRange_ToBound = 0
const KeyRange_ToKeyInclusive_case case_KeyRange_ToBound = 3
const KeyRange_ToKeyExclusive_case case_KeyRange_ToBound = 4

func (x *KeyRange) WhichToBound() case_KeyRange_ToBound {
	if x == nil {
		return KeyRange_ToBound_not_set_case
	}
	switch x.xxx_hidden_ToBound.(type) {
	case *keyRange_ToKeyInclusive:
		return KeyRange_ToKeyInclusive_case
	case *keyRange_ToKeyExclusive:
		return KeyRange_ToKeyExclusive_case
	default:
		return KeyRange_ToBound_not_set_case
	}
}

type KeyRange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The lower bound of the key range.
	// If unspecified, the range begins from the lowest key.

	// Fields of oneof xxx_hidden_FromBound:
	// Set in order for the range to include the key specified
	FromKeyInclusive *string
	// Set in order for the range not to include the key specified
	FromKeyExclusive *string
	// -- end of xxx_hidden_FromBound
	// The higher bound of the key range.
	// If unspecified, the range ends with the highest key.

	// Fields of oneof xxx_hidden_ToBound:
	// Set in order for the range to include the key specified
	ToKeyInclusive *string
	// Set in order for the range not to include the key specified
	ToKeyExclusive *string
	// -- end of xxx_hidden_ToBound
}

func (b0 KeyRange_builder) Build() *KeyRange {
	m0 := &KeyRange{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FromKeyInclusive != nil {
		x.xxx_hidden_FromBound = &keyRange_FromKeyInclusive{*b.FromKeyInclusive}
	}
	if b.FromKeyExclusive != nil {
		x.xxx_hidden_FromBound = &keyRange_FromKeyExclusive{*b.FromKeyExclusive}
	}
	if b.ToKeyInclusive != nil {
		x.xxx_hidden_ToBound = &keyRange_ToKeyInclusive{*b.ToKeyInclusive}
	}
	if b.ToKeyExclusive != nil {
		x.xxx_hidden_ToBound = &keyRange_ToKeyExclusive{*b.ToKeyExclusive}
	}
	return m0
}

type case_KeyRange_FromBound protoreflect.FieldNumber

func (x case_KeyRange_FromBound) String() string {
	md := file_draft_protos_ydb_keyvalue_proto_msgTypes[3].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type case_KeyRange_ToBound protoreflect.FieldNumber

func (x case_KeyRange_ToBound) String() string {
	md := file_draft_protos_ydb_keyvalue_proto_msgTypes[3].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isKeyRange_FromBound interface {
	isKeyRange_FromBound()
}

type keyRange_FromKeyInclusive struct {
	// Set in order for the range to include the key specified
	FromKeyInclusive string `protobuf:"bytes,1,opt,name=from_key_inclusive,json=fromKeyInclusive,oneof"`
}

type keyRange_FromKeyExclusive struct {
	// Set in order for the range not to include the key specified
	FromKeyExclusive string `protobuf:"bytes,2,opt,name=from_key_exclusive,json=fromKeyExclusive,oneof"`
}

func (*keyRange_FromKeyInclusive) isKeyRange_FromBound() {}

func (*keyRange_FromKeyExclusive) isKeyRange_FromBound() {}

type isKeyRange_ToBound interface {
	isKeyRange_ToBound()
}

type keyRange_ToKeyInclusive struct {
	// Set in order for the range to include the key specified
	ToKeyInclusive string `protobuf:"bytes,3,opt,name=to_key_inclusive,json=toKeyInclusive,oneof"`
}

type keyRange_ToKeyExclusive struct {
	// Set in order for the range not to include the key specified
	ToKeyExclusive string `protobuf:"bytes,4,opt,name=to_key_exclusive,json=toKeyExclusive,oneof"`
}

func (*keyRange_ToKeyInclusive) isKeyRange_ToBound() {}

func (*keyRange_ToKeyExclusive) isKeyRange_ToBound() {}

// The lock mechanism provides a way to ensure that only one client holds the lock.
// The client is provided the lock generation.
// Only operations with matching lock generation and operations with no lock generation are executed.
// When lock generation is missmatched operations will be failed with PRECONDITION_FAILED status.
type AcquireLockRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams"`
	xxx_hidden_Path            *string                         `protobuf:"bytes,2,opt,name=path"`
	xxx_hidden_PartitionId     uint64                          `protobuf:"varint,3,opt,name=partition_id,json=partitionId"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *AcquireLockRequest) Reset() {
	*x = AcquireLockRequest{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcquireLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireLockRequest) ProtoMessage() {}

func (x *AcquireLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AcquireLockRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *AcquireLockRequest) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *AcquireLockRequest) GetPartitionId() uint64 {
	if x != nil {
		return x.xxx_hidden_PartitionId
	}
	return 0
}

func (x *AcquireLockRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *AcquireLockRequest) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *AcquireLockRequest) SetPartitionId(v uint64) {
	x.xxx_hidden_PartitionId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *AcquireLockRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *AcquireLockRequest) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AcquireLockRequest) HasPartitionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AcquireLockRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

func (x *AcquireLockRequest) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Path = nil
}

func (x *AcquireLockRequest) ClearPartitionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PartitionId = 0
}

type AcquireLockRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	// Volume path.
	Path *string
	// Partition of the volume.
	PartitionId *uint64
}

func (b0 AcquireLockRequest_builder) Build() *AcquireLockRequest {
	m0 := &AcquireLockRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_OperationParams = b.OperationParams
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Path = b.Path
	}
	if b.PartitionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_PartitionId = *b.PartitionId
	}
	return m0
}

type AcquireLockResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AcquireLockResponse) Reset() {
	*x = AcquireLockResponse{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcquireLockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireLockResponse) ProtoMessage() {}

func (x *AcquireLockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AcquireLockResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *AcquireLockResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *AcquireLockResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *AcquireLockResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type AcquireLockResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation
}

func (b0 AcquireLockResponse_builder) Build() *AcquireLockResponse {
	m0 := &AcquireLockResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type AcquireLockResult struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_LockGeneration uint64                 `protobuf:"varint,1,opt,name=lock_generation,json=lockGeneration"`
	xxx_hidden_NodeId         uint32                 `protobuf:"varint,2,opt,name=node_id,json=nodeId"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *AcquireLockResult) Reset() {
	*x = AcquireLockResult{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcquireLockResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireLockResult) ProtoMessage() {}

func (x *AcquireLockResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AcquireLockResult) GetLockGeneration() uint64 {
	if x != nil {
		return x.xxx_hidden_LockGeneration
	}
	return 0
}

func (x *AcquireLockResult) GetNodeId() uint32 {
	if x != nil {
		return x.xxx_hidden_NodeId
	}
	return 0
}

func (x *AcquireLockResult) SetLockGeneration(v uint64) {
	x.xxx_hidden_LockGeneration = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *AcquireLockResult) SetNodeId(v uint32) {
	x.xxx_hidden_NodeId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *AcquireLockResult) HasLockGeneration() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AcquireLockResult) HasNodeId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AcquireLockResult) ClearLockGeneration() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_LockGeneration = 0
}

func (x *AcquireLockResult) ClearNodeId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_NodeId = 0
}

type AcquireLockResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The generation of the lock to provide as an argument to all the operations the user performs with the partition.
	LockGeneration *uint64
	// Contains 0 if the request was sent to the node of the partition, node ID of the partition otherwise.
	NodeId *uint32
}

func (b0 AcquireLockResult_builder) Build() *AcquireLockResult {
	m0 := &AcquireLockResult{}
	b, x := &b0, m0
	_, _ = b, x
	if b.LockGeneration != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_LockGeneration = *b.LockGeneration
	}
	if b.NodeId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_NodeId = *b.NodeId
	}
	return m0
}

type ExecuteTransactionRequest struct {
	state                      protoimpl.MessageState                `protogen:"opaque.v1"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams       `protobuf:"bytes,1,opt,name=operation_params,json=operationParams"`
	xxx_hidden_Path            *string                               `protobuf:"bytes,2,opt,name=path"`
	xxx_hidden_PartitionId     uint64                                `protobuf:"varint,3,opt,name=partition_id,json=partitionId"`
	xxx_hidden_LockGeneration  uint64                                `protobuf:"varint,4,opt,name=lock_generation,json=lockGeneration"`
	xxx_hidden_Commands        *[]*ExecuteTransactionRequest_Command `protobuf:"bytes,5,rep,name=commands"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ExecuteTransactionRequest) Reset() {
	*x = ExecuteTransactionRequest{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransactionRequest) ProtoMessage() {}

func (x *ExecuteTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteTransactionRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *ExecuteTransactionRequest) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *ExecuteTransactionRequest) GetPartitionId() uint64 {
	if x != nil {
		return x.xxx_hidden_PartitionId
	}
	return 0
}

func (x *ExecuteTransactionRequest) GetLockGeneration() uint64 {
	if x != nil {
		return x.xxx_hidden_LockGeneration
	}
	return 0
}

func (x *ExecuteTransactionRequest) GetCommands() []*ExecuteTransactionRequest_Command {
	if x != nil {
		if x.xxx_hidden_Commands != nil {
			return *x.xxx_hidden_Commands
		}
	}
	return nil
}

func (x *ExecuteTransactionRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *ExecuteTransactionRequest) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ExecuteTransactionRequest) SetPartitionId(v uint64) {
	x.xxx_hidden_PartitionId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *ExecuteTransactionRequest) SetLockGeneration(v uint64) {
	x.xxx_hidden_LockGeneration = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *ExecuteTransactionRequest) SetCommands(v []*ExecuteTransactionRequest_Command) {
	x.xxx_hidden_Commands = &v
}

func (x *ExecuteTransactionRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *ExecuteTransactionRequest) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ExecuteTransactionRequest) HasPartitionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ExecuteTransactionRequest) HasLockGeneration() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ExecuteTransactionRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

func (x *ExecuteTransactionRequest) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Path = nil
}

func (x *ExecuteTransactionRequest) ClearPartitionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PartitionId = 0
}

func (x *ExecuteTransactionRequest) ClearLockGeneration() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_LockGeneration = 0
}

type ExecuteTransactionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	// Volume path.
	Path *string
	// Partition of the volume.
	PartitionId *uint64
	// Generation of the exclusive lock acquired for the partition as a result of an AcquireLock call.
	LockGeneration *uint64
	// Commands to execute as a single atomic transaction.
	// The order of execution of commands is the same as the order of commands in the ExecuteTransactionRequest.
	// The order of execution of different transactions is not specified.
	Commands []*ExecuteTransactionRequest_Command
}

func (b0 ExecuteTransactionRequest_builder) Build() *ExecuteTransactionRequest {
	m0 := &ExecuteTransactionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_OperationParams = b.OperationParams
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Path = b.Path
	}
	if b.PartitionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_PartitionId = *b.PartitionId
	}
	if b.LockGeneration != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_LockGeneration = *b.LockGeneration
	}
	x.xxx_hidden_Commands = &b.Commands
	return m0
}

type ExecuteTransactionResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ExecuteTransactionResponse) Reset() {
	*x = ExecuteTransactionResponse{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransactionResponse) ProtoMessage() {}

func (x *ExecuteTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteTransactionResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *ExecuteTransactionResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *ExecuteTransactionResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *ExecuteTransactionResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type ExecuteTransactionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation
}

func (b0 ExecuteTransactionResponse_builder) Build() *ExecuteTransactionResponse {
	m0 := &ExecuteTransactionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type ExecuteTransactionResult struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_StorageChannelInfo *[]*StorageChannelInfo `protobuf:"bytes,1,rep,name=storage_channel_info,json=storageChannelInfo"`
	xxx_hidden_NodeId             uint32                 `protobuf:"varint,2,opt,name=node_id,json=nodeId"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ExecuteTransactionResult) Reset() {
	*x = ExecuteTransactionResult{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteTransactionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransactionResult) ProtoMessage() {}

func (x *ExecuteTransactionResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteTransactionResult) GetStorageChannelInfo() []*StorageChannelInfo {
	if x != nil {
		if x.xxx_hidden_StorageChannelInfo != nil {
			return *x.xxx_hidden_StorageChannelInfo
		}
	}
	return nil
}

func (x *ExecuteTransactionResult) GetNodeId() uint32 {
	if x != nil {
		return x.xxx_hidden_NodeId
	}
	return 0
}

func (x *ExecuteTransactionResult) SetStorageChannelInfo(v []*StorageChannelInfo) {
	x.xxx_hidden_StorageChannelInfo = &v
}

func (x *ExecuteTransactionResult) SetNodeId(v uint32) {
	x.xxx_hidden_NodeId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ExecuteTransactionResult) HasNodeId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ExecuteTransactionResult) ClearNodeId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_NodeId = 0
}

type ExecuteTransactionResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Contains status flags for the storage channels used by the transaction.
	StorageChannelInfo []*StorageChannelInfo
	// Contains 0 if the request was sent to the node of the partition, node ID of the partition otherwise.
	NodeId *uint32
}

func (b0 ExecuteTransactionResult_builder) Build() *ExecuteTransactionResult {
	m0 := &ExecuteTransactionResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_StorageChannelInfo = &b.StorageChannelInfo
	if b.NodeId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_NodeId = *b.NodeId
	}
	return m0
}

type ReadRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams"`
	xxx_hidden_Path            *string                         `protobuf:"bytes,2,opt,name=path"`
	xxx_hidden_PartitionId     uint64                          `protobuf:"varint,3,opt,name=partition_id,json=partitionId"`
	xxx_hidden_LockGeneration  uint64                          `protobuf:"varint,4,opt,name=lock_generation,json=lockGeneration"`
	xxx_hidden_Key             *string                         `protobuf:"bytes,5,opt,name=key"`
	xxx_hidden_Offset          uint64                          `protobuf:"varint,6,opt,name=offset"`
	xxx_hidden_Size            uint64                          `protobuf:"varint,7,opt,name=size"`
	xxx_hidden_LimitBytes      uint64                          `protobuf:"varint,8,opt,name=limit_bytes,json=limitBytes"`
	xxx_hidden_Priority        Priorities_Priority             `protobuf:"varint,9,opt,name=priority,enum=Ydb.KeyValue.Priorities_Priority"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *ReadRequest) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *ReadRequest) GetPartitionId() uint64 {
	if x != nil {
		return x.xxx_hidden_PartitionId
	}
	return 0
}

func (x *ReadRequest) GetLockGeneration() uint64 {
	if x != nil {
		return x.xxx_hidden_LockGeneration
	}
	return 0
}

func (x *ReadRequest) GetKey() string {
	if x != nil {
		if x.xxx_hidden_Key != nil {
			return *x.xxx_hidden_Key
		}
		return ""
	}
	return ""
}

func (x *ReadRequest) GetOffset() uint64 {
	if x != nil {
		return x.xxx_hidden_Offset
	}
	return 0
}

func (x *ReadRequest) GetSize() uint64 {
	if x != nil {
		return x.xxx_hidden_Size
	}
	return 0
}

func (x *ReadRequest) GetLimitBytes() uint64 {
	if x != nil {
		return x.xxx_hidden_LimitBytes
	}
	return 0
}

func (x *ReadRequest) GetPriority() Priorities_Priority {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 8) {
			return x.xxx_hidden_Priority
		}
	}
	return Priorities_PRIORITY_UNSPECIFIED
}

func (x *ReadRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *ReadRequest) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *ReadRequest) SetPartitionId(v uint64) {
	x.xxx_hidden_PartitionId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *ReadRequest) SetLockGeneration(v uint64) {
	x.xxx_hidden_LockGeneration = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *ReadRequest) SetKey(v string) {
	x.xxx_hidden_Key = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *ReadRequest) SetOffset(v uint64) {
	x.xxx_hidden_Offset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *ReadRequest) SetSize(v uint64) {
	x.xxx_hidden_Size = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 9)
}

func (x *ReadRequest) SetLimitBytes(v uint64) {
	x.xxx_hidden_LimitBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 9)
}

func (x *ReadRequest) SetPriority(v Priorities_Priority) {
	x.xxx_hidden_Priority = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 9)
}

func (x *ReadRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *ReadRequest) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ReadRequest) HasPartitionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ReadRequest) HasLockGeneration() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ReadRequest) HasKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ReadRequest) HasOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ReadRequest) HasSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ReadRequest) HasLimitBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ReadRequest) HasPriority() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *ReadRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

func (x *ReadRequest) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Path = nil
}

func (x *ReadRequest) ClearPartitionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PartitionId = 0
}

func (x *ReadRequest) ClearLockGeneration() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_LockGeneration = 0
}

func (x *ReadRequest) ClearKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Key = nil
}

func (x *ReadRequest) ClearOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Offset = 0
}

func (x *ReadRequest) ClearSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Size = 0
}

func (x *ReadRequest) ClearLimitBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_LimitBytes = 0
}

func (x *ReadRequest) ClearPriority() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_Priority = Priorities_PRIORITY_UNSPECIFIED
}

type ReadRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	// Volume path.
	Path *string
	// Partition of the volume.
	PartitionId *uint64
	// Generation of the exclusive lock acquired for the partition as a result of an AcquireLock call.
	LockGeneration *uint64
	// Key of the key-value pair to read.
	Key *string
	// Offset in bytes from the beginning of the value to read data from.
	Offset *uint64
	// Size of the data to read in bytes. 0 means "read to the end of the value".
	Size *uint64
	// Result protobuf size limit.
	// Overrides the default limit only with a smaller value.
	// 0 means "use the default limit".
	LimitBytes *uint64
	// Priority to use for the Distributed Storage Get operation.
	// Has no effect for the INLINE storage channel.
	Priority *Priorities_Priority
}

func (b0 ReadRequest_builder) Build() *ReadRequest {
	m0 := &ReadRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_OperationParams = b.OperationParams
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_Path = b.Path
	}
	if b.PartitionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_PartitionId = *b.PartitionId
	}
	if b.LockGeneration != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_LockGeneration = *b.LockGeneration
	}
	if b.Key != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_Key = b.Key
	}
	if b.Offset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_Offset = *b.Offset
	}
	if b.Size != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 9)
		x.xxx_hidden_Size = *b.Size
	}
	if b.LimitBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 9)
		x.xxx_hidden_LimitBytes = *b.LimitBytes
	}
	if b.Priority != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 9)
		x.xxx_hidden_Priority = *b.Priority
	}
	return m0
}

type ReadResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *ReadResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *ReadResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *ReadResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type ReadResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation
}

func (b0 ReadResponse_builder) Build() *ReadResponse {
	m0 := &ReadResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type ReadResult struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RequestedKey    *string                `protobuf:"bytes,1,opt,name=requested_key,json=requestedKey"`
	xxx_hidden_RequestedOffset uint64                 `protobuf:"varint,2,opt,name=requested_offset,json=requestedOffset"`
	xxx_hidden_RequestedSize   uint64                 `protobuf:"varint,3,opt,name=requested_size,json=requestedSize"`
	xxx_hidden_Value           []byte                 `protobuf:"bytes,4,opt,name=value"`
	xxx_hidden_IsOverrun       bool                   `protobuf:"varint,5,opt,name=is_overrun,json=isOverrun"`
	xxx_hidden_NodeId          uint32                 `protobuf:"varint,6,opt,name=node_id,json=nodeId"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ReadResult) Reset() {
	*x = ReadResult{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResult) ProtoMessage() {}

func (x *ReadResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadResult) GetRequestedKey() string {
	if x != nil {
		if x.xxx_hidden_RequestedKey != nil {
			return *x.xxx_hidden_RequestedKey
		}
		return ""
	}
	return ""
}

func (x *ReadResult) GetRequestedOffset() uint64 {
	if x != nil {
		return x.xxx_hidden_RequestedOffset
	}
	return 0
}

func (x *ReadResult) GetRequestedSize() uint64 {
	if x != nil {
		return x.xxx_hidden_RequestedSize
	}
	return 0
}

func (x *ReadResult) GetValue() []byte {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return nil
}

func (x *ReadResult) GetIsOverrun() bool {
	if x != nil {
		return x.xxx_hidden_IsOverrun
	}
	return false
}

func (x *ReadResult) GetNodeId() uint32 {
	if x != nil {
		return x.xxx_hidden_NodeId
	}
	return 0
}

func (x *ReadResult) SetRequestedKey(v string) {
	x.xxx_hidden_RequestedKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *ReadResult) SetRequestedOffset(v uint64) {
	x.xxx_hidden_RequestedOffset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *ReadResult) SetRequestedSize(v uint64) {
	x.xxx_hidden_RequestedSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *ReadResult) SetValue(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *ReadResult) SetIsOverrun(v bool) {
	x.xxx_hidden_IsOverrun = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *ReadResult) SetNodeId(v uint32) {
	x.xxx_hidden_NodeId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *ReadResult) HasRequestedKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ReadResult) HasRequestedOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ReadResult) HasRequestedSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ReadResult) HasValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ReadResult) HasIsOverrun() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ReadResult) HasNodeId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ReadResult) ClearRequestedKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RequestedKey = nil
}

func (x *ReadResult) ClearRequestedOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_RequestedOffset = 0
}

func (x *ReadResult) ClearRequestedSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_RequestedSize = 0
}

func (x *ReadResult) ClearValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Value = nil
}

func (x *ReadResult) ClearIsOverrun() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_IsOverrun = false
}

func (x *ReadResult) ClearNodeId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_NodeId = 0
}

type ReadResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The key of the requested key-value pair.
	RequestedKey *string
	// Offset in bytes from the beginning of the value requested.
	RequestedOffset *uint64
	// Size of the data requested.
	RequestedSize *uint64
	// The bytes of the requested part of the value.
	Value []byte
	// If requested data size is larger than limit_bytes then result will contain only part of the requested value and
	// the is_overrun flag will be set.
	IsOverrun *bool
	// Contains 0 if the request was sent to the node of the partition, node ID of the partition otherwise.
	NodeId *uint32
}

func (b0 ReadResult_builder) Build() *ReadResult {
	m0 := &ReadResult{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestedKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_RequestedKey = b.RequestedKey
	}
	if b.RequestedOffset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_RequestedOffset = *b.RequestedOffset
	}
	if b.RequestedSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_RequestedSize = *b.RequestedSize
	}
	if b.Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Value = b.Value
	}
	if b.IsOverrun != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_IsOverrun = *b.IsOverrun
	}
	if b.NodeId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_NodeId = *b.NodeId
	}
	return m0
}

type ReadRangeRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams"`
	xxx_hidden_Path            *string                         `protobuf:"bytes,2,opt,name=path"`
	xxx_hidden_PartitionId     uint64                          `protobuf:"varint,3,opt,name=partition_id,json=partitionId"`
	xxx_hidden_LockGeneration  uint64                          `protobuf:"varint,4,opt,name=lock_generation,json=lockGeneration"`
	xxx_hidden_Range           *KeyRange                       `protobuf:"bytes,5,opt,name=range"`
	xxx_hidden_LimitBytes      uint64                          `protobuf:"varint,6,opt,name=limit_bytes,json=limitBytes"`
	xxx_hidden_Priority        Priorities_Priority             `protobuf:"varint,7,opt,name=priority,enum=Ydb.KeyValue.Priorities_Priority"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ReadRangeRequest) Reset() {
	*x = ReadRangeRequest{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRangeRequest) ProtoMessage() {}

func (x *ReadRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadRangeRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *ReadRangeRequest) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *ReadRangeRequest) GetPartitionId() uint64 {
	if x != nil {
		return x.xxx_hidden_PartitionId
	}
	return 0
}

func (x *ReadRangeRequest) GetLockGeneration() uint64 {
	if x != nil {
		return x.xxx_hidden_LockGeneration
	}
	return 0
}

func (x *ReadRangeRequest) GetRange() *KeyRange {
	if x != nil {
		return x.xxx_hidden_Range
	}
	return nil
}

func (x *ReadRangeRequest) GetLimitBytes() uint64 {
	if x != nil {
		return x.xxx_hidden_LimitBytes
	}
	return 0
}

func (x *ReadRangeRequest) GetPriority() Priorities_Priority {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 6) {
			return x.xxx_hidden_Priority
		}
	}
	return Priorities_PRIORITY_UNSPECIFIED
}

func (x *ReadRangeRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *ReadRangeRequest) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *ReadRangeRequest) SetPartitionId(v uint64) {
	x.xxx_hidden_PartitionId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *ReadRangeRequest) SetLockGeneration(v uint64) {
	x.xxx_hidden_LockGeneration = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *ReadRangeRequest) SetRange(v *KeyRange) {
	x.xxx_hidden_Range = v
}

func (x *ReadRangeRequest) SetLimitBytes(v uint64) {
	x.xxx_hidden_LimitBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *ReadRangeRequest) SetPriority(v Priorities_Priority) {
	x.xxx_hidden_Priority = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *ReadRangeRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *ReadRangeRequest) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ReadRangeRequest) HasPartitionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ReadRangeRequest) HasLockGeneration() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ReadRangeRequest) HasRange() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Range != nil
}

func (x *ReadRangeRequest) HasLimitBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ReadRangeRequest) HasPriority() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ReadRangeRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

func (x *ReadRangeRequest) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Path = nil
}

func (x *ReadRangeRequest) ClearPartitionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PartitionId = 0
}

func (x *ReadRangeRequest) ClearLockGeneration() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_LockGeneration = 0
}

func (x *ReadRangeRequest) ClearRange() {
	x.xxx_hidden_Range = nil
}

func (x *ReadRangeRequest) ClearLimitBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_LimitBytes = 0
}

func (x *ReadRangeRequest) ClearPriority() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Priority = Priorities_PRIORITY_UNSPECIFIED
}

type ReadRangeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	// Volume path.
	Path *string
	// Partition of the volume.
	PartitionId *uint64
	// Generation of the exclusive lock acquired for the partition as a result of an AcquireLock call.
	LockGeneration *uint64
	// The range of keys to read.
	Range *KeyRange
	// Result protobuf size limit.
	// Overrides the default limit only with a smaller value.
	// 0 means "use the default limit".
	LimitBytes *uint64
	// Priority to use for the Distributed Storage Get operation.
	// Has no effect for the INLINE storage channel.
	Priority *Priorities_Priority
}

func (b0 ReadRangeRequest_builder) Build() *ReadRangeRequest {
	m0 := &ReadRangeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_OperationParams = b.OperationParams
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Path = b.Path
	}
	if b.PartitionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_PartitionId = *b.PartitionId
	}
	if b.LockGeneration != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_LockGeneration = *b.LockGeneration
	}
	x.xxx_hidden_Range = b.Range
	if b.LimitBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_LimitBytes = *b.LimitBytes
	}
	if b.Priority != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_Priority = *b.Priority
	}
	return m0
}

type ReadRangeResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ReadRangeResponse) Reset() {
	*x = ReadRangeResponse{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRangeResponse) ProtoMessage() {}

func (x *ReadRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadRangeResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *ReadRangeResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *ReadRangeResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *ReadRangeResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type ReadRangeResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation
}

func (b0 ReadRangeResponse_builder) Build() *ReadRangeResponse {
	m0 := &ReadRangeResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type ReadRangeResult struct {
	state                  protoimpl.MessageState           `protogen:"opaque.v1"`
	xxx_hidden_Pair        *[]*ReadRangeResult_KeyValuePair `protobuf:"bytes,1,rep,name=pair"`
	xxx_hidden_IsOverrun   bool                             `protobuf:"varint,2,opt,name=is_overrun,json=isOverrun"`
	xxx_hidden_NodeId      uint32                           `protobuf:"varint,3,opt,name=node_id,json=nodeId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ReadRangeResult) Reset() {
	*x = ReadRangeResult{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRangeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRangeResult) ProtoMessage() {}

func (x *ReadRangeResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadRangeResult) GetPair() []*ReadRangeResult_KeyValuePair {
	if x != nil {
		if x.xxx_hidden_Pair != nil {
			return *x.xxx_hidden_Pair
		}
	}
	return nil
}

func (x *ReadRangeResult) GetIsOverrun() bool {
	if x != nil {
		return x.xxx_hidden_IsOverrun
	}
	return false
}

func (x *ReadRangeResult) GetNodeId() uint32 {
	if x != nil {
		return x.xxx_hidden_NodeId
	}
	return 0
}

func (x *ReadRangeResult) SetPair(v []*ReadRangeResult_KeyValuePair) {
	x.xxx_hidden_Pair = &v
}

func (x *ReadRangeResult) SetIsOverrun(v bool) {
	x.xxx_hidden_IsOverrun = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ReadRangeResult) SetNodeId(v uint32) {
	x.xxx_hidden_NodeId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ReadRangeResult) HasIsOverrun() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ReadRangeResult) HasNodeId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ReadRangeResult) ClearIsOverrun() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_IsOverrun = false
}

func (x *ReadRangeResult) ClearNodeId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_NodeId = 0
}

type ReadRangeResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// List of key-value pairs requested.
	Pair []*ReadRangeResult_KeyValuePair
	// If requested data size is larger than limit_bytes then result will contain
	// only part of the requested key-value pairs and the is_overrun flag will be set.
	// The pair list contains only full values.
	// In order to continue reading the client should send another request for the key range
	// with from_key_exclusive set to the last key read.
	// If first pair doesn't fit the limit_bytes then the result will be empty and the is_overrun flag will be set.
	// Use ListRange and Read methods to find and read large key-value pairs.
	IsOverrun *bool
	// Contains 0 if the request was sent to the node of the partition, node ID of the partition otherwise.
	NodeId *uint32
}

func (b0 ReadRangeResult_builder) Build() *ReadRangeResult {
	m0 := &ReadRangeResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Pair = &b.Pair
	if b.IsOverrun != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_IsOverrun = *b.IsOverrun
	}
	if b.NodeId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_NodeId = *b.NodeId
	}
	return m0
}

type ListRangeRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams"`
	xxx_hidden_Path            *string                         `protobuf:"bytes,2,opt,name=path"`
	xxx_hidden_PartitionId     uint64                          `protobuf:"varint,3,opt,name=partition_id,json=partitionId"`
	xxx_hidden_LockGeneration  uint64                          `protobuf:"varint,4,opt,name=lock_generation,json=lockGeneration"`
	xxx_hidden_Range           *KeyRange                       `protobuf:"bytes,5,opt,name=range"`
	xxx_hidden_LimitBytes      uint64                          `protobuf:"varint,6,opt,name=limit_bytes,json=limitBytes"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ListRangeRequest) Reset() {
	*x = ListRangeRequest{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRangeRequest) ProtoMessage() {}

func (x *ListRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListRangeRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *ListRangeRequest) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *ListRangeRequest) GetPartitionId() uint64 {
	if x != nil {
		return x.xxx_hidden_PartitionId
	}
	return 0
}

func (x *ListRangeRequest) GetLockGeneration() uint64 {
	if x != nil {
		return x.xxx_hidden_LockGeneration
	}
	return 0
}

func (x *ListRangeRequest) GetRange() *KeyRange {
	if x != nil {
		return x.xxx_hidden_Range
	}
	return nil
}

func (x *ListRangeRequest) GetLimitBytes() uint64 {
	if x != nil {
		return x.xxx_hidden_LimitBytes
	}
	return 0
}

func (x *ListRangeRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *ListRangeRequest) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *ListRangeRequest) SetPartitionId(v uint64) {
	x.xxx_hidden_PartitionId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *ListRangeRequest) SetLockGeneration(v uint64) {
	x.xxx_hidden_LockGeneration = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *ListRangeRequest) SetRange(v *KeyRange) {
	x.xxx_hidden_Range = v
}

func (x *ListRangeRequest) SetLimitBytes(v uint64) {
	x.xxx_hidden_LimitBytes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *ListRangeRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *ListRangeRequest) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListRangeRequest) HasPartitionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ListRangeRequest) HasLockGeneration() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ListRangeRequest) HasRange() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Range != nil
}

func (x *ListRangeRequest) HasLimitBytes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ListRangeRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

func (x *ListRangeRequest) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Path = nil
}

func (x *ListRangeRequest) ClearPartitionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PartitionId = 0
}

func (x *ListRangeRequest) ClearLockGeneration() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_LockGeneration = 0
}

func (x *ListRangeRequest) ClearRange() {
	x.xxx_hidden_Range = nil
}

func (x *ListRangeRequest) ClearLimitBytes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_LimitBytes = 0
}

type ListRangeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	// Volume path.
	Path *string
	// Partition of the volume.
	PartitionId *uint64
	// Generation of the exclusive lock acquired for the partition as a result of an AcquireLock call.
	LockGeneration *uint64
	// The range of keys to read
	Range *KeyRange
	// Result protobuf size limit. If not 0, overrides the default one only with a smaller value.
	LimitBytes *uint64
}

func (b0 ListRangeRequest_builder) Build() *ListRangeRequest {
	m0 := &ListRangeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_OperationParams = b.OperationParams
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Path = b.Path
	}
	if b.PartitionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_PartitionId = *b.PartitionId
	}
	if b.LockGeneration != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_LockGeneration = *b.LockGeneration
	}
	x.xxx_hidden_Range = b.Range
	if b.LimitBytes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_LimitBytes = *b.LimitBytes
	}
	return m0
}

type ListRangeResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListRangeResponse) Reset() {
	*x = ListRangeResponse{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRangeResponse) ProtoMessage() {}

func (x *ListRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListRangeResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *ListRangeResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *ListRangeResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *ListRangeResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type ListRangeResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation
}

func (b0 ListRangeResponse_builder) Build() *ListRangeResponse {
	m0 := &ListRangeResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type ListRangeResult struct {
	state                  protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_Key         *[]*ListRangeResult_KeyInfo `protobuf:"bytes,1,rep,name=key"`
	xxx_hidden_IsOverrun   bool                        `protobuf:"varint,2,opt,name=is_overrun,json=isOverrun"`
	xxx_hidden_NodeId      uint32                      `protobuf:"varint,3,opt,name=node_id,json=nodeId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListRangeResult) Reset() {
	*x = ListRangeResult{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRangeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRangeResult) ProtoMessage() {}

func (x *ListRangeResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListRangeResult) GetKey() []*ListRangeResult_KeyInfo {
	if x != nil {
		if x.xxx_hidden_Key != nil {
			return *x.xxx_hidden_Key
		}
	}
	return nil
}

func (x *ListRangeResult) GetIsOverrun() bool {
	if x != nil {
		return x.xxx_hidden_IsOverrun
	}
	return false
}

func (x *ListRangeResult) GetNodeId() uint32 {
	if x != nil {
		return x.xxx_hidden_NodeId
	}
	return 0
}

func (x *ListRangeResult) SetKey(v []*ListRangeResult_KeyInfo) {
	x.xxx_hidden_Key = &v
}

func (x *ListRangeResult) SetIsOverrun(v bool) {
	x.xxx_hidden_IsOverrun = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ListRangeResult) SetNodeId(v uint32) {
	x.xxx_hidden_NodeId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ListRangeResult) HasIsOverrun() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListRangeResult) HasNodeId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ListRangeResult) ClearIsOverrun() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_IsOverrun = false
}

func (x *ListRangeResult) ClearNodeId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_NodeId = 0
}

type ListRangeResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// List of the key-value pairs and metadata requested.
	Key []*ListRangeResult_KeyInfo
	// If requested data size is larger than limit_bytes then result will contain
	// only part of the requested key-value pairs and the is_overrun flag will be set.
	IsOverrun *bool
	// Contains 0 if the request was sent to the node of the partition, node ID of the partition otherwise.
	NodeId *uint32
}

func (b0 ListRangeResult_builder) Build() *ListRangeResult {
	m0 := &ListRangeResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Key = &b.Key
	if b.IsOverrun != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_IsOverrun = *b.IsOverrun
	}
	if b.NodeId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_NodeId = *b.NodeId
	}
	return m0
}

type GetStorageChannelStatusRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams"`
	xxx_hidden_Path            *string                         `protobuf:"bytes,2,opt,name=path"`
	xxx_hidden_PartitionId     uint64                          `protobuf:"varint,3,opt,name=partition_id,json=partitionId"`
	xxx_hidden_LockGeneration  uint64                          `protobuf:"varint,4,opt,name=lock_generation,json=lockGeneration"`
	xxx_hidden_StorageChannel  []uint32                        `protobuf:"varint,5,rep,packed,name=storage_channel,json=storageChannel"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *GetStorageChannelStatusRequest) Reset() {
	*x = GetStorageChannelStatusRequest{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStorageChannelStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageChannelStatusRequest) ProtoMessage() {}

func (x *GetStorageChannelStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetStorageChannelStatusRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *GetStorageChannelStatusRequest) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *GetStorageChannelStatusRequest) GetPartitionId() uint64 {
	if x != nil {
		return x.xxx_hidden_PartitionId
	}
	return 0
}

func (x *GetStorageChannelStatusRequest) GetLockGeneration() uint64 {
	if x != nil {
		return x.xxx_hidden_LockGeneration
	}
	return 0
}

func (x *GetStorageChannelStatusRequest) GetStorageChannel() []uint32 {
	if x != nil {
		return x.xxx_hidden_StorageChannel
	}
	return nil
}

func (x *GetStorageChannelStatusRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *GetStorageChannelStatusRequest) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *GetStorageChannelStatusRequest) SetPartitionId(v uint64) {
	x.xxx_hidden_PartitionId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *GetStorageChannelStatusRequest) SetLockGeneration(v uint64) {
	x.xxx_hidden_LockGeneration = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *GetStorageChannelStatusRequest) SetStorageChannel(v []uint32) {
	x.xxx_hidden_StorageChannel = v
}

func (x *GetStorageChannelStatusRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *GetStorageChannelStatusRequest) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetStorageChannelStatusRequest) HasPartitionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetStorageChannelStatusRequest) HasLockGeneration() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *GetStorageChannelStatusRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

func (x *GetStorageChannelStatusRequest) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Path = nil
}

func (x *GetStorageChannelStatusRequest) ClearPartitionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PartitionId = 0
}

func (x *GetStorageChannelStatusRequest) ClearLockGeneration() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_LockGeneration = 0
}

type GetStorageChannelStatusRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	// Volume path.
	Path *string
	// Partition of the volume.
	PartitionId *uint64
	// Generation of the exclusive lock acquired for the partition as a result of an AcquireLock call.
	LockGeneration *uint64
	// List of storage channels to get StorageChannelInfo for.
	StorageChannel []uint32
}

func (b0 GetStorageChannelStatusRequest_builder) Build() *GetStorageChannelStatusRequest {
	m0 := &GetStorageChannelStatusRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_OperationParams = b.OperationParams
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Path = b.Path
	}
	if b.PartitionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_PartitionId = *b.PartitionId
	}
	if b.LockGeneration != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_LockGeneration = *b.LockGeneration
	}
	x.xxx_hidden_StorageChannel = b.StorageChannel
	return m0
}

type GetStorageChannelStatusResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetStorageChannelStatusResponse) Reset() {
	*x = GetStorageChannelStatusResponse{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStorageChannelStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageChannelStatusResponse) ProtoMessage() {}

func (x *GetStorageChannelStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetStorageChannelStatusResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *GetStorageChannelStatusResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *GetStorageChannelStatusResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *GetStorageChannelStatusResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type GetStorageChannelStatusResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation
}

func (b0 GetStorageChannelStatusResponse_builder) Build() *GetStorageChannelStatusResponse {
	m0 := &GetStorageChannelStatusResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type GetStorageChannelStatusResult struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_StorageChannelInfo *[]*StorageChannelInfo `protobuf:"bytes,1,rep,name=storage_channel_info,json=storageChannelInfo"`
	xxx_hidden_NodeId             uint32                 `protobuf:"varint,2,opt,name=node_id,json=nodeId"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *GetStorageChannelStatusResult) Reset() {
	*x = GetStorageChannelStatusResult{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStorageChannelStatusResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageChannelStatusResult) ProtoMessage() {}

func (x *GetStorageChannelStatusResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetStorageChannelStatusResult) GetStorageChannelInfo() []*StorageChannelInfo {
	if x != nil {
		if x.xxx_hidden_StorageChannelInfo != nil {
			return *x.xxx_hidden_StorageChannelInfo
		}
	}
	return nil
}

func (x *GetStorageChannelStatusResult) GetNodeId() uint32 {
	if x != nil {
		return x.xxx_hidden_NodeId
	}
	return 0
}

func (x *GetStorageChannelStatusResult) SetStorageChannelInfo(v []*StorageChannelInfo) {
	x.xxx_hidden_StorageChannelInfo = &v
}

func (x *GetStorageChannelStatusResult) SetNodeId(v uint32) {
	x.xxx_hidden_NodeId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *GetStorageChannelStatusResult) HasNodeId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetStorageChannelStatusResult) ClearNodeId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_NodeId = 0
}

type GetStorageChannelStatusResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Contains status flags for the requested storage channels.
	StorageChannelInfo []*StorageChannelInfo
	// Contains 0 if the request was sent to the node of the partition, node ID of the partition otherwise.
	NodeId *uint32
}

func (b0 GetStorageChannelStatusResult_builder) Build() *GetStorageChannelStatusResult {
	m0 := &GetStorageChannelStatusResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_StorageChannelInfo = &b.StorageChannelInfo
	if b.NodeId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_NodeId = *b.NodeId
	}
	return m0
}

type CreateVolumeRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams"`
	xxx_hidden_Path            *string                         `protobuf:"bytes,2,opt,name=path"`
	xxx_hidden_PartitionCount  uint32                          `protobuf:"varint,4,opt,name=partition_count,json=partitionCount"`
	xxx_hidden_StorageConfig   *StorageConfig                  `protobuf:"bytes,5,opt,name=storage_config,json=storageConfig"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *CreateVolumeRequest) Reset() {
	*x = CreateVolumeRequest{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeRequest) ProtoMessage() {}

func (x *CreateVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateVolumeRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *CreateVolumeRequest) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *CreateVolumeRequest) GetPartitionCount() uint32 {
	if x != nil {
		return x.xxx_hidden_PartitionCount
	}
	return 0
}

func (x *CreateVolumeRequest) GetStorageConfig() *StorageConfig {
	if x != nil {
		return x.xxx_hidden_StorageConfig
	}
	return nil
}

func (x *CreateVolumeRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *CreateVolumeRequest) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *CreateVolumeRequest) SetPartitionCount(v uint32) {
	x.xxx_hidden_PartitionCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *CreateVolumeRequest) SetStorageConfig(v *StorageConfig) {
	x.xxx_hidden_StorageConfig = v
}

func (x *CreateVolumeRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *CreateVolumeRequest) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *CreateVolumeRequest) HasPartitionCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CreateVolumeRequest) HasStorageConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StorageConfig != nil
}

func (x *CreateVolumeRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

func (x *CreateVolumeRequest) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Path = nil
}

func (x *CreateVolumeRequest) ClearPartitionCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PartitionCount = 0
}

func (x *CreateVolumeRequest) ClearStorageConfig() {
	x.xxx_hidden_StorageConfig = nil
}

type CreateVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	// Volume path.
	Path *string
	// The partition count of the new volume.
	PartitionCount *uint32
	// Set storage kinds for storage channels.
	StorageConfig *StorageConfig
}

func (b0 CreateVolumeRequest_builder) Build() *CreateVolumeRequest {
	m0 := &CreateVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_OperationParams = b.OperationParams
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Path = b.Path
	}
	if b.PartitionCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_PartitionCount = *b.PartitionCount
	}
	x.xxx_hidden_StorageConfig = b.StorageConfig
	return m0
}

type CreateVolumeResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CreateVolumeResponse) Reset() {
	*x = CreateVolumeResponse{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeResponse) ProtoMessage() {}

func (x *CreateVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateVolumeResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *CreateVolumeResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *CreateVolumeResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *CreateVolumeResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type CreateVolumeResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation
}

func (b0 CreateVolumeResponse_builder) Build() *CreateVolumeResponse {
	m0 := &CreateVolumeResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type CreateVolumeResult struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVolumeResult) Reset() {
	*x = CreateVolumeResult{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVolumeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeResult) ProtoMessage() {}

func (x *CreateVolumeResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type CreateVolumeResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 CreateVolumeResult_builder) Build() *CreateVolumeResult {
	m0 := &CreateVolumeResult{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type DropVolumeRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams"`
	xxx_hidden_Path            *string                         `protobuf:"bytes,2,opt,name=path"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *DropVolumeRequest) Reset() {
	*x = DropVolumeRequest{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropVolumeRequest) ProtoMessage() {}

func (x *DropVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DropVolumeRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *DropVolumeRequest) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *DropVolumeRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *DropVolumeRequest) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DropVolumeRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *DropVolumeRequest) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DropVolumeRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

func (x *DropVolumeRequest) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Path = nil
}

type DropVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	// Volume path.
	Path *string
}

func (b0 DropVolumeRequest_builder) Build() *DropVolumeRequest {
	m0 := &DropVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_OperationParams = b.OperationParams
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Path = b.Path
	}
	return m0
}

type DropVolumeResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DropVolumeResponse) Reset() {
	*x = DropVolumeResponse{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropVolumeResponse) ProtoMessage() {}

func (x *DropVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DropVolumeResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *DropVolumeResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *DropVolumeResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *DropVolumeResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type DropVolumeResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation
}

func (b0 DropVolumeResponse_builder) Build() *DropVolumeResponse {
	m0 := &DropVolumeResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type DropVolumeResult struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropVolumeResult) Reset() {
	*x = DropVolumeResult{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropVolumeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropVolumeResult) ProtoMessage() {}

func (x *DropVolumeResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type DropVolumeResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 DropVolumeResult_builder) Build() *DropVolumeResult {
	m0 := &DropVolumeResult{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type AlterVolumeRequest struct {
	state                          protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_OperationParams     *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams"`
	xxx_hidden_Path                *string                         `protobuf:"bytes,2,opt,name=path"`
	xxx_hidden_AlterPartitionCount uint32                          `protobuf:"varint,3,opt,name=alter_partition_count,json=alterPartitionCount"`
	xxx_hidden_StorageConfig       *StorageConfig                  `protobuf:"bytes,4,opt,name=storage_config,json=storageConfig"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *AlterVolumeRequest) Reset() {
	*x = AlterVolumeRequest{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlterVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterVolumeRequest) ProtoMessage() {}

func (x *AlterVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AlterVolumeRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *AlterVolumeRequest) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *AlterVolumeRequest) GetAlterPartitionCount() uint32 {
	if x != nil {
		return x.xxx_hidden_AlterPartitionCount
	}
	return 0
}

func (x *AlterVolumeRequest) GetStorageConfig() *StorageConfig {
	if x != nil {
		return x.xxx_hidden_StorageConfig
	}
	return nil
}

func (x *AlterVolumeRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *AlterVolumeRequest) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *AlterVolumeRequest) SetAlterPartitionCount(v uint32) {
	x.xxx_hidden_AlterPartitionCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *AlterVolumeRequest) SetStorageConfig(v *StorageConfig) {
	x.xxx_hidden_StorageConfig = v
}

func (x *AlterVolumeRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *AlterVolumeRequest) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AlterVolumeRequest) HasAlterPartitionCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AlterVolumeRequest) HasStorageConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StorageConfig != nil
}

func (x *AlterVolumeRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

func (x *AlterVolumeRequest) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Path = nil
}

func (x *AlterVolumeRequest) ClearAlterPartitionCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_AlterPartitionCount = 0
}

func (x *AlterVolumeRequest) ClearStorageConfig() {
	x.xxx_hidden_StorageConfig = nil
}

type AlterVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	// Volume path.
	Path *string
	// Change the partition count of the volume.
	// The value should be greater or equal than current patition count.
	AlterPartitionCount *uint32
	// Set storage kinds for storage channels.
	// If the field is not present, storage channel settings are not changed.
	StorageConfig *StorageConfig
}

func (b0 AlterVolumeRequest_builder) Build() *AlterVolumeRequest {
	m0 := &AlterVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_OperationParams = b.OperationParams
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Path = b.Path
	}
	if b.AlterPartitionCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_AlterPartitionCount = *b.AlterPartitionCount
	}
	x.xxx_hidden_StorageConfig = b.StorageConfig
	return m0
}

type AlterVolumeResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AlterVolumeResponse) Reset() {
	*x = AlterVolumeResponse{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlterVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterVolumeResponse) ProtoMessage() {}

func (x *AlterVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AlterVolumeResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *AlterVolumeResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *AlterVolumeResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *AlterVolumeResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type AlterVolumeResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation
}

func (b0 AlterVolumeResponse_builder) Build() *AlterVolumeResponse {
	m0 := &AlterVolumeResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type AlterVolumeResult struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlterVolumeResult) Reset() {
	*x = AlterVolumeResult{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlterVolumeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterVolumeResult) ProtoMessage() {}

func (x *AlterVolumeResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type AlterVolumeResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 AlterVolumeResult_builder) Build() *AlterVolumeResult {
	m0 := &AlterVolumeResult{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type DescribeVolumeRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams"`
	xxx_hidden_Path            *string                         `protobuf:"bytes,2,opt,name=path"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *DescribeVolumeRequest) Reset() {
	*x = DescribeVolumeRequest{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVolumeRequest) ProtoMessage() {}

func (x *DescribeVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeVolumeRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *DescribeVolumeRequest) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *DescribeVolumeRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *DescribeVolumeRequest) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DescribeVolumeRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *DescribeVolumeRequest) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DescribeVolumeRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

func (x *DescribeVolumeRequest) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Path = nil
}

type DescribeVolumeRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	// Volume path.
	Path *string
}

func (b0 DescribeVolumeRequest_builder) Build() *DescribeVolumeRequest {
	m0 := &DescribeVolumeRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_OperationParams = b.OperationParams
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Path = b.Path
	}
	return m0
}

type DescribeVolumeResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DescribeVolumeResponse) Reset() {
	*x = DescribeVolumeResponse{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVolumeResponse) ProtoMessage() {}

func (x *DescribeVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeVolumeResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *DescribeVolumeResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *DescribeVolumeResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *DescribeVolumeResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type DescribeVolumeResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation
}

func (b0 DescribeVolumeResponse_builder) Build() *DescribeVolumeResponse {
	m0 := &DescribeVolumeResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type DescribeVolumeResult struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Path           *string                `protobuf:"bytes,1,opt,name=path"`
	xxx_hidden_PartitionCount uint64                 `protobuf:"varint,2,opt,name=partition_count,json=partitionCount"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *DescribeVolumeResult) Reset() {
	*x = DescribeVolumeResult{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeVolumeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVolumeResult) ProtoMessage() {}

func (x *DescribeVolumeResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeVolumeResult) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *DescribeVolumeResult) GetPartitionCount() uint64 {
	if x != nil {
		return x.xxx_hidden_PartitionCount
	}
	return 0
}

func (x *DescribeVolumeResult) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DescribeVolumeResult) SetPartitionCount(v uint64) {
	x.xxx_hidden_PartitionCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DescribeVolumeResult) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DescribeVolumeResult) HasPartitionCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DescribeVolumeResult) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Path = nil
}

func (x *DescribeVolumeResult) ClearPartitionCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PartitionCount = 0
}

type DescribeVolumeResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Volume path.
	Path *string
	// Count of partitions.
	PartitionCount *uint64
}

func (b0 DescribeVolumeResult_builder) Build() *DescribeVolumeResult {
	m0 := &DescribeVolumeResult{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Path = b.Path
	}
	if b.PartitionCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_PartitionCount = *b.PartitionCount
	}
	return m0
}

type ListLocalPartitionsRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams"`
	xxx_hidden_Path            *string                         `protobuf:"bytes,2,opt,name=path"`
	xxx_hidden_NodeId          uint64                          `protobuf:"varint,3,opt,name=node_id,json=nodeId"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ListLocalPartitionsRequest) Reset() {
	*x = ListLocalPartitionsRequest{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLocalPartitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocalPartitionsRequest) ProtoMessage() {}

func (x *ListLocalPartitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListLocalPartitionsRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *ListLocalPartitionsRequest) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *ListLocalPartitionsRequest) GetNodeId() uint64 {
	if x != nil {
		return x.xxx_hidden_NodeId
	}
	return 0
}

func (x *ListLocalPartitionsRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *ListLocalPartitionsRequest) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ListLocalPartitionsRequest) SetNodeId(v uint64) {
	x.xxx_hidden_NodeId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ListLocalPartitionsRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *ListLocalPartitionsRequest) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListLocalPartitionsRequest) HasNodeId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ListLocalPartitionsRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

func (x *ListLocalPartitionsRequest) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Path = nil
}

func (x *ListLocalPartitionsRequest) ClearNodeId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_NodeId = 0
}

type ListLocalPartitionsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	// Volume path.
	Path *string
	// ID of the node to get partitions for.
	// 0 means the node the request was send to.
	NodeId *uint64
}

func (b0 ListLocalPartitionsRequest_builder) Build() *ListLocalPartitionsRequest {
	m0 := &ListLocalPartitionsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_OperationParams = b.OperationParams
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Path = b.Path
	}
	if b.NodeId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_NodeId = *b.NodeId
	}
	return m0
}

type ListLocalPartitionsResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListLocalPartitionsResponse) Reset() {
	*x = ListLocalPartitionsResponse{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLocalPartitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocalPartitionsResponse) ProtoMessage() {}

func (x *ListLocalPartitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListLocalPartitionsResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *ListLocalPartitionsResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *ListLocalPartitionsResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *ListLocalPartitionsResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type ListLocalPartitionsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Operation contains the result of the request. Check the ydb_operation.proto.
	Operation *Ydb_Operations.Operation
}

func (b0 ListLocalPartitionsResponse_builder) Build() *ListLocalPartitionsResponse {
	m0 := &ListLocalPartitionsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type ListLocalPartitionsResult struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Path         *string                `protobuf:"bytes,1,opt,name=path"`
	xxx_hidden_NodeId       uint64                 `protobuf:"varint,2,opt,name=node_id,json=nodeId"`
	xxx_hidden_PartitionIds []uint64               `protobuf:"varint,3,rep,packed,name=partition_ids,json=partitionIds"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListLocalPartitionsResult) Reset() {
	*x = ListLocalPartitionsResult{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLocalPartitionsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocalPartitionsResult) ProtoMessage() {}

func (x *ListLocalPartitionsResult) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListLocalPartitionsResult) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *ListLocalPartitionsResult) GetNodeId() uint64 {
	if x != nil {
		return x.xxx_hidden_NodeId
	}
	return 0
}

func (x *ListLocalPartitionsResult) GetPartitionIds() []uint64 {
	if x != nil {
		return x.xxx_hidden_PartitionIds
	}
	return nil
}

func (x *ListLocalPartitionsResult) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ListLocalPartitionsResult) SetNodeId(v uint64) {
	x.xxx_hidden_NodeId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ListLocalPartitionsResult) SetPartitionIds(v []uint64) {
	x.xxx_hidden_PartitionIds = v
}

func (x *ListLocalPartitionsResult) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListLocalPartitionsResult) HasNodeId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListLocalPartitionsResult) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Path = nil
}

func (x *ListLocalPartitionsResult) ClearNodeId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_NodeId = 0
}

type ListLocalPartitionsResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Volume path.
	Path *string
	// ID of the node.
	NodeId *uint64
	// List of the partitions of the volume on the node.
	PartitionIds []uint64
}

func (b0 ListLocalPartitionsResult_builder) Build() *ListLocalPartitionsResult {
	m0 := &ListLocalPartitionsResult{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Path = b.Path
	}
	if b.NodeId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_NodeId = *b.NodeId
	}
	x.xxx_hidden_PartitionIds = b.PartitionIds
	return m0
}

type StorageConfig_ChannelConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Media       *string                `protobuf:"bytes,1,opt,name=media"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *StorageConfig_ChannelConfig) Reset() {
	*x = StorageConfig_ChannelConfig{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageConfig_ChannelConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageConfig_ChannelConfig) ProtoMessage() {}

func (x *StorageConfig_ChannelConfig) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StorageConfig_ChannelConfig) GetMedia() string {
	if x != nil {
		if x.xxx_hidden_Media != nil {
			return *x.xxx_hidden_Media
		}
		return ""
	}
	return ""
}

func (x *StorageConfig_ChannelConfig) SetMedia(v string) {
	x.xxx_hidden_Media = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *StorageConfig_ChannelConfig) HasMedia() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StorageConfig_ChannelConfig) ClearMedia() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Media = nil
}

type StorageConfig_ChannelConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Media for the storage channel.
	// This field specifies the kind of one storage_pool_types configured in config.yaml
	Media *string
}

func (b0 StorageConfig_ChannelConfig_builder) Build() *StorageConfig_ChannelConfig {
	m0 := &StorageConfig_ChannelConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Media != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Media = b.Media
	}
	return m0
}

type ExecuteTransactionRequest_Command struct {
	state             protoimpl.MessageState                     `protogen:"opaque.v1"`
	xxx_hidden_Action isExecuteTransactionRequest_Command_Action `protobuf_oneof:"action"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ExecuteTransactionRequest_Command) Reset() {
	*x = ExecuteTransactionRequest_Command{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteTransactionRequest_Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransactionRequest_Command) ProtoMessage() {}

func (x *ExecuteTransactionRequest_Command) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteTransactionRequest_Command) GetDeleteRange() *ExecuteTransactionRequest_Command_DeleteRange {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*executeTransactionRequest_Command_DeleteRange_); ok {
			return x.DeleteRange
		}
	}
	return nil
}

func (x *ExecuteTransactionRequest_Command) GetRename() *ExecuteTransactionRequest_Command_Rename {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*executeTransactionRequest_Command_Rename_); ok {
			return x.Rename
		}
	}
	return nil
}

func (x *ExecuteTransactionRequest_Command) GetCopyRange() *ExecuteTransactionRequest_Command_CopyRange {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*executeTransactionRequest_Command_CopyRange_); ok {
			return x.CopyRange
		}
	}
	return nil
}

func (x *ExecuteTransactionRequest_Command) GetConcat() *ExecuteTransactionRequest_Command_Concat {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*executeTransactionRequest_Command_Concat_); ok {
			return x.Concat
		}
	}
	return nil
}

func (x *ExecuteTransactionRequest_Command) GetWrite() *ExecuteTransactionRequest_Command_Write {
	if x != nil {
		if x, ok := x.xxx_hidden_Action.(*executeTransactionRequest_Command_Write_); ok {
			return x.Write
		}
	}
	return nil
}

func (x *ExecuteTransactionRequest_Command) SetDeleteRange(v *ExecuteTransactionRequest_Command_DeleteRange) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &executeTransactionRequest_Command_DeleteRange_{v}
}

func (x *ExecuteTransactionRequest_Command) SetRename(v *ExecuteTransactionRequest_Command_Rename) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &executeTransactionRequest_Command_Rename_{v}
}

func (x *ExecuteTransactionRequest_Command) SetCopyRange(v *ExecuteTransactionRequest_Command_CopyRange) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &executeTransactionRequest_Command_CopyRange_{v}
}

func (x *ExecuteTransactionRequest_Command) SetConcat(v *ExecuteTransactionRequest_Command_Concat) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &executeTransactionRequest_Command_Concat_{v}
}

func (x *ExecuteTransactionRequest_Command) SetWrite(v *ExecuteTransactionRequest_Command_Write) {
	if v == nil {
		x.xxx_hidden_Action = nil
		return
	}
	x.xxx_hidden_Action = &executeTransactionRequest_Command_Write_{v}
}

func (x *ExecuteTransactionRequest_Command) HasAction() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Action != nil
}

func (x *ExecuteTransactionRequest_Command) HasDeleteRange() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*executeTransactionRequest_Command_DeleteRange_)
	return ok
}

func (x *ExecuteTransactionRequest_Command) HasRename() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*executeTransactionRequest_Command_Rename_)
	return ok
}

func (x *ExecuteTransactionRequest_Command) HasCopyRange() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*executeTransactionRequest_Command_CopyRange_)
	return ok
}

func (x *ExecuteTransactionRequest_Command) HasConcat() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*executeTransactionRequest_Command_Concat_)
	return ok
}

func (x *ExecuteTransactionRequest_Command) HasWrite() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Action.(*executeTransactionRequest_Command_Write_)
	return ok
}

func (x *ExecuteTransactionRequest_Command) ClearAction() {
	x.xxx_hidden_Action = nil
}

func (x *ExecuteTransactionRequest_Command) ClearDeleteRange() {
	if _, ok := x.xxx_hidden_Action.(*executeTransactionRequest_Command_DeleteRange_); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *ExecuteTransactionRequest_Command) ClearRename() {
	if _, ok := x.xxx_hidden_Action.(*executeTransactionRequest_Command_Rename_); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *ExecuteTransactionRequest_Command) ClearCopyRange() {
	if _, ok := x.xxx_hidden_Action.(*executeTransactionRequest_Command_CopyRange_); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *ExecuteTransactionRequest_Command) ClearConcat() {
	if _, ok := x.xxx_hidden_Action.(*executeTransactionRequest_Command_Concat_); ok {
		x.xxx_hidden_Action = nil
	}
}

func (x *ExecuteTransactionRequest_Command) ClearWrite() {
	if _, ok := x.xxx_hidden_Action.(*executeTransactionRequest_Command_Write_); ok {
		x.xxx_hidden_Action = nil
	}
}

const ExecuteTransactionRequest_Command_Action_not_set_case case_ExecuteTransactionRequest_Command_Action = 0
const ExecuteTransactionRequest_Command_DeleteRange_case case_ExecuteTransactionRequest_Command_Action = 1
const ExecuteTransactionRequest_Command_Rename_case case_ExecuteTransactionRequest_Command_Action = 2
const ExecuteTransactionRequest_Command_CopyRange_case case_ExecuteTransactionRequest_Command_Action = 3
const ExecuteTransactionRequest_Command_Concat_case case_ExecuteTransactionRequest_Command_Action = 4
const ExecuteTransactionRequest_Command_Write_case case_ExecuteTransactionRequest_Command_Action = 5

func (x *ExecuteTransactionRequest_Command) WhichAction() case_ExecuteTransactionRequest_Command_Action {
	if x == nil {
		return ExecuteTransactionRequest_Command_Action_not_set_case
	}
	switch x.xxx_hidden_Action.(type) {
	case *executeTransactionRequest_Command_DeleteRange_:
		return ExecuteTransactionRequest_Command_DeleteRange_case
	case *executeTransactionRequest_Command_Rename_:
		return ExecuteTransactionRequest_Command_Rename_case
	case *executeTransactionRequest_Command_CopyRange_:
		return ExecuteTransactionRequest_Command_CopyRange_case
	case *executeTransactionRequest_Command_Concat_:
		return ExecuteTransactionRequest_Command_Concat_case
	case *executeTransactionRequest_Command_Write_:
		return ExecuteTransactionRequest_Command_Write_case
	default:
		return ExecuteTransactionRequest_Command_Action_not_set_case
	}
}

type ExecuteTransactionRequest_Command_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Action:
	// Delete key-value pairs with keys in the range specified.
	DeleteRange *ExecuteTransactionRequest_Command_DeleteRange
	// Change the key of a key-value pair.
	Rename *ExecuteTransactionRequest_Command_Rename
	// Create a copy of key-value pairs with keys in the range specified by removing and/or prepending a prefix
	// to each key.
	CopyRange *ExecuteTransactionRequest_Command_CopyRange
	// Create a new key-value pair with key specified by concatenating values of multiple other key-value pairs
	// with keys specified.
	Concat *ExecuteTransactionRequest_Command_Concat
	// Create a new key-value pair with key and value specified.
	Write *ExecuteTransactionRequest_Command_Write
	// -- end of xxx_hidden_Action
}

func (b0 ExecuteTransactionRequest_Command_builder) Build() *ExecuteTransactionRequest_Command {
	m0 := &ExecuteTransactionRequest_Command{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DeleteRange != nil {
		x.xxx_hidden_Action = &executeTransactionRequest_Command_DeleteRange_{b.DeleteRange}
	}
	if b.Rename != nil {
		x.xxx_hidden_Action = &executeTransactionRequest_Command_Rename_{b.Rename}
	}
	if b.CopyRange != nil {
		x.xxx_hidden_Action = &executeTransactionRequest_Command_CopyRange_{b.CopyRange}
	}
	if b.Concat != nil {
		x.xxx_hidden_Action = &executeTransactionRequest_Command_Concat_{b.Concat}
	}
	if b.Write != nil {
		x.xxx_hidden_Action = &executeTransactionRequest_Command_Write_{b.Write}
	}
	return m0
}

type case_ExecuteTransactionRequest_Command_Action protoreflect.FieldNumber

func (x case_ExecuteTransactionRequest_Command_Action) String() string {
	md := file_draft_protos_ydb_keyvalue_proto_msgTypes[38].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isExecuteTransactionRequest_Command_Action interface {
	isExecuteTransactionRequest_Command_Action()
}

type executeTransactionRequest_Command_DeleteRange_ struct {
	// Delete key-value pairs with keys in the range specified.
	DeleteRange *ExecuteTransactionRequest_Command_DeleteRange `protobuf:"bytes,1,opt,name=delete_range,json=deleteRange,oneof"`
}

type executeTransactionRequest_Command_Rename_ struct {
	// Change the key of a key-value pair.
	Rename *ExecuteTransactionRequest_Command_Rename `protobuf:"bytes,2,opt,name=rename,oneof"`
}

type executeTransactionRequest_Command_CopyRange_ struct {
	// Create a copy of key-value pairs with keys in the range specified by removing and/or prepending a prefix
	// to each key.
	CopyRange *ExecuteTransactionRequest_Command_CopyRange `protobuf:"bytes,3,opt,name=copy_range,json=copyRange,oneof"`
}

type executeTransactionRequest_Command_Concat_ struct {
	// Create a new key-value pair with key specified by concatenating values of multiple other key-value pairs
	// with keys specified.
	Concat *ExecuteTransactionRequest_Command_Concat `protobuf:"bytes,4,opt,name=concat,oneof"`
}

type executeTransactionRequest_Command_Write_ struct {
	// Create a new key-value pair with key and value specified.
	Write *ExecuteTransactionRequest_Command_Write `protobuf:"bytes,5,opt,name=write,oneof"`
}

func (*executeTransactionRequest_Command_DeleteRange_) isExecuteTransactionRequest_Command_Action() {}

func (*executeTransactionRequest_Command_Rename_) isExecuteTransactionRequest_Command_Action() {}

func (*executeTransactionRequest_Command_CopyRange_) isExecuteTransactionRequest_Command_Action() {}

func (*executeTransactionRequest_Command_Concat_) isExecuteTransactionRequest_Command_Action() {}

func (*executeTransactionRequest_Command_Write_) isExecuteTransactionRequest_Command_Action() {}

type ExecuteTransactionRequest_Command_Rename struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_OldKey      *string                `protobuf:"bytes,1,opt,name=old_key,json=oldKey"`
	xxx_hidden_NewKey      *string                `protobuf:"bytes,2,opt,name=new_key,json=newKey"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ExecuteTransactionRequest_Command_Rename) Reset() {
	*x = ExecuteTransactionRequest_Command_Rename{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteTransactionRequest_Command_Rename) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransactionRequest_Command_Rename) ProtoMessage() {}

func (x *ExecuteTransactionRequest_Command_Rename) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteTransactionRequest_Command_Rename) GetOldKey() string {
	if x != nil {
		if x.xxx_hidden_OldKey != nil {
			return *x.xxx_hidden_OldKey
		}
		return ""
	}
	return ""
}

func (x *ExecuteTransactionRequest_Command_Rename) GetNewKey() string {
	if x != nil {
		if x.xxx_hidden_NewKey != nil {
			return *x.xxx_hidden_NewKey
		}
		return ""
	}
	return ""
}

func (x *ExecuteTransactionRequest_Command_Rename) SetOldKey(v string) {
	x.xxx_hidden_OldKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ExecuteTransactionRequest_Command_Rename) SetNewKey(v string) {
	x.xxx_hidden_NewKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ExecuteTransactionRequest_Command_Rename) HasOldKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ExecuteTransactionRequest_Command_Rename) HasNewKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ExecuteTransactionRequest_Command_Rename) ClearOldKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_OldKey = nil
}

func (x *ExecuteTransactionRequest_Command_Rename) ClearNewKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_NewKey = nil
}

type ExecuteTransactionRequest_Command_Rename_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The key to change.
	OldKey *string
	// The new key to change the old key to.
	NewKey *string
}

func (b0 ExecuteTransactionRequest_Command_Rename_builder) Build() *ExecuteTransactionRequest_Command_Rename {
	m0 := &ExecuteTransactionRequest_Command_Rename{}
	b, x := &b0, m0
	_, _ = b, x
	if b.OldKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_OldKey = b.OldKey
	}
	if b.NewKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_NewKey = b.NewKey
	}
	return m0
}

type ExecuteTransactionRequest_Command_Concat struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_InputKeys   []string               `protobuf:"bytes,1,rep,name=input_keys,json=inputKeys"`
	xxx_hidden_OutputKey   *string                `protobuf:"bytes,2,opt,name=output_key,json=outputKey"`
	xxx_hidden_KeepInputs  bool                   `protobuf:"varint,3,opt,name=keep_inputs,json=keepInputs"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ExecuteTransactionRequest_Command_Concat) Reset() {
	*x = ExecuteTransactionRequest_Command_Concat{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteTransactionRequest_Command_Concat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransactionRequest_Command_Concat) ProtoMessage() {}

func (x *ExecuteTransactionRequest_Command_Concat) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteTransactionRequest_Command_Concat) GetInputKeys() []string {
	if x != nil {
		return x.xxx_hidden_InputKeys
	}
	return nil
}

func (x *ExecuteTransactionRequest_Command_Concat) GetOutputKey() string {
	if x != nil {
		if x.xxx_hidden_OutputKey != nil {
			return *x.xxx_hidden_OutputKey
		}
		return ""
	}
	return ""
}

func (x *ExecuteTransactionRequest_Command_Concat) GetKeepInputs() bool {
	if x != nil {
		return x.xxx_hidden_KeepInputs
	}
	return false
}

func (x *ExecuteTransactionRequest_Command_Concat) SetInputKeys(v []string) {
	x.xxx_hidden_InputKeys = v
}

func (x *ExecuteTransactionRequest_Command_Concat) SetOutputKey(v string) {
	x.xxx_hidden_OutputKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ExecuteTransactionRequest_Command_Concat) SetKeepInputs(v bool) {
	x.xxx_hidden_KeepInputs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ExecuteTransactionRequest_Command_Concat) HasOutputKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ExecuteTransactionRequest_Command_Concat) HasKeepInputs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ExecuteTransactionRequest_Command_Concat) ClearOutputKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_OutputKey = nil
}

func (x *ExecuteTransactionRequest_Command_Concat) ClearKeepInputs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_KeepInputs = false
}

type ExecuteTransactionRequest_Command_Concat_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Keys to use as the source for the concatenation.
	InputKeys []string
	// New key to use for the result of the concatenation.
	OutputKey *string
	// Input keys are deleted after the concatenation by default.
	// In order to keep both the inputs and the output, set keep_inputs to true.
	KeepInputs *bool
}

func (b0 ExecuteTransactionRequest_Command_Concat_builder) Build() *ExecuteTransactionRequest_Command_Concat {
	m0 := &ExecuteTransactionRequest_Command_Concat{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_InputKeys = b.InputKeys
	if b.OutputKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_OutputKey = b.OutputKey
	}
	if b.KeepInputs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_KeepInputs = *b.KeepInputs
	}
	return m0
}

// Make a copy of a range of key-value pairs.
// New keys are formed by removing a prefix and/or prepending keys with the new prefix.
// For example, copy of the key-value pairs [{aaabc,1}, {aaaef,2}, {baaef,3}] can be stripped of the 'aa' prefix
// and prepended with the 'x' so that the new pairs that are added are [{xabc, 1}, {xaef, 2}].
type ExecuteTransactionRequest_Command_CopyRange struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Range          *KeyRange              `protobuf:"bytes,1,opt,name=range"`
	xxx_hidden_PrefixToRemove *string                `protobuf:"bytes,2,opt,name=prefix_to_remove,json=prefixToRemove"`
	xxx_hidden_PrefixToAdd    *string                `protobuf:"bytes,3,opt,name=prefix_to_add,json=prefixToAdd"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ExecuteTransactionRequest_Command_CopyRange) Reset() {
	*x = ExecuteTransactionRequest_Command_CopyRange{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteTransactionRequest_Command_CopyRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransactionRequest_Command_CopyRange) ProtoMessage() {}

func (x *ExecuteTransactionRequest_Command_CopyRange) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteTransactionRequest_Command_CopyRange) GetRange() *KeyRange {
	if x != nil {
		return x.xxx_hidden_Range
	}
	return nil
}

func (x *ExecuteTransactionRequest_Command_CopyRange) GetPrefixToRemove() string {
	if x != nil {
		if x.xxx_hidden_PrefixToRemove != nil {
			return *x.xxx_hidden_PrefixToRemove
		}
		return ""
	}
	return ""
}

func (x *ExecuteTransactionRequest_Command_CopyRange) GetPrefixToAdd() string {
	if x != nil {
		if x.xxx_hidden_PrefixToAdd != nil {
			return *x.xxx_hidden_PrefixToAdd
		}
		return ""
	}
	return ""
}

func (x *ExecuteTransactionRequest_Command_CopyRange) SetRange(v *KeyRange) {
	x.xxx_hidden_Range = v
}

func (x *ExecuteTransactionRequest_Command_CopyRange) SetPrefixToRemove(v string) {
	x.xxx_hidden_PrefixToRemove = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ExecuteTransactionRequest_Command_CopyRange) SetPrefixToAdd(v string) {
	x.xxx_hidden_PrefixToAdd = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ExecuteTransactionRequest_Command_CopyRange) HasRange() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Range != nil
}

func (x *ExecuteTransactionRequest_Command_CopyRange) HasPrefixToRemove() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ExecuteTransactionRequest_Command_CopyRange) HasPrefixToAdd() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ExecuteTransactionRequest_Command_CopyRange) ClearRange() {
	x.xxx_hidden_Range = nil
}

func (x *ExecuteTransactionRequest_Command_CopyRange) ClearPrefixToRemove() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PrefixToRemove = nil
}

func (x *ExecuteTransactionRequest_Command_CopyRange) ClearPrefixToAdd() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_PrefixToAdd = nil
}

type ExecuteTransactionRequest_Command_CopyRange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The range of keys to copy
	Range *KeyRange
	// For each source key that begins with the prefix_to_remove, that prefix is removed from the new key before
	// prepending it with the prefix_to_add.
	// Acts as filter if not empty.
	PrefixToRemove *string
	// The prefix to prepend to each new key.
	PrefixToAdd *string
}

func (b0 ExecuteTransactionRequest_Command_CopyRange_builder) Build() *ExecuteTransactionRequest_Command_CopyRange {
	m0 := &ExecuteTransactionRequest_Command_CopyRange{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Range = b.Range
	if b.PrefixToRemove != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_PrefixToRemove = b.PrefixToRemove
	}
	if b.PrefixToAdd != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_PrefixToAdd = b.PrefixToAdd
	}
	return m0
}

type ExecuteTransactionRequest_Command_Write struct {
	state                     protoimpl.MessageState                         `protogen:"opaque.v1"`
	xxx_hidden_Key            *string                                        `protobuf:"bytes,1,opt,name=key"`
	xxx_hidden_Value          []byte                                         `protobuf:"bytes,2,opt,name=value"`
	xxx_hidden_StorageChannel uint32                                         `protobuf:"varint,3,opt,name=storage_channel,json=storageChannel"`
	xxx_hidden_Priority       Priorities_Priority                            `protobuf:"varint,4,opt,name=priority,enum=Ydb.KeyValue.Priorities_Priority"`
	xxx_hidden_Tactic         ExecuteTransactionRequest_Command_Write_Tactic `protobuf:"varint,5,opt,name=tactic,enum=Ydb.KeyValue.ExecuteTransactionRequest_Command_Write_Tactic"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ExecuteTransactionRequest_Command_Write) Reset() {
	*x = ExecuteTransactionRequest_Command_Write{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteTransactionRequest_Command_Write) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransactionRequest_Command_Write) ProtoMessage() {}

func (x *ExecuteTransactionRequest_Command_Write) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteTransactionRequest_Command_Write) GetKey() string {
	if x != nil {
		if x.xxx_hidden_Key != nil {
			return *x.xxx_hidden_Key
		}
		return ""
	}
	return ""
}

func (x *ExecuteTransactionRequest_Command_Write) GetValue() []byte {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return nil
}

func (x *ExecuteTransactionRequest_Command_Write) GetStorageChannel() uint32 {
	if x != nil {
		return x.xxx_hidden_StorageChannel
	}
	return 0
}

func (x *ExecuteTransactionRequest_Command_Write) GetPriority() Priorities_Priority {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_Priority
		}
	}
	return Priorities_PRIORITY_UNSPECIFIED
}

func (x *ExecuteTransactionRequest_Command_Write) GetTactic() ExecuteTransactionRequest_Command_Write_Tactic {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_Tactic
		}
	}
	return ExecuteTransactionRequest_Command_Write_TACTIC_UNSPECIFIED
}

func (x *ExecuteTransactionRequest_Command_Write) SetKey(v string) {
	x.xxx_hidden_Key = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *ExecuteTransactionRequest_Command_Write) SetValue(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ExecuteTransactionRequest_Command_Write) SetStorageChannel(v uint32) {
	x.xxx_hidden_StorageChannel = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *ExecuteTransactionRequest_Command_Write) SetPriority(v Priorities_Priority) {
	x.xxx_hidden_Priority = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *ExecuteTransactionRequest_Command_Write) SetTactic(v ExecuteTransactionRequest_Command_Write_Tactic) {
	x.xxx_hidden_Tactic = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *ExecuteTransactionRequest_Command_Write) HasKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ExecuteTransactionRequest_Command_Write) HasValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ExecuteTransactionRequest_Command_Write) HasStorageChannel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ExecuteTransactionRequest_Command_Write) HasPriority() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ExecuteTransactionRequest_Command_Write) HasTactic() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ExecuteTransactionRequest_Command_Write) ClearKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Key = nil
}

func (x *ExecuteTransactionRequest_Command_Write) ClearValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Value = nil
}

func (x *ExecuteTransactionRequest_Command_Write) ClearStorageChannel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_StorageChannel = 0
}

func (x *ExecuteTransactionRequest_Command_Write) ClearPriority() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Priority = Priorities_PRIORITY_UNSPECIFIED
}

func (x *ExecuteTransactionRequest_Command_Write) ClearTactic() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Tactic = ExecuteTransactionRequest_Command_Write_TACTIC_UNSPECIFIED
}

type ExecuteTransactionRequest_Command_Write_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Key of the key-value pair to write.
	Key *string
	// Value of the key-value pair to write.
	Value []byte
	// Storage channel to write the value to. Channel numbers begin with 1 and may go up to approximately 250
	// (depends on the channel configuration of each partition).
	// Channel 1 is called the INLINE channel (value is stored in the index table).
	// Channel 2 is called the MAIN channel (value is stored as a separate blob in the Distributed Storage).
	// Channels 1 and 2 are available for all partitions.
	// If the storage channel specified is not configured for the partition, the value is stored in
	// channel 2 (the MAIN channel).
	StorageChannel *uint32
	// Priority to use for the Distributed Storage Get operation.
	// Has no effect for the INLINE storage channel.
	Priority *Priorities_Priority
	// Tactic to use for the Distributed Storage Put operation.
	// Has no effect for the INLINE storage channel.
	Tactic *ExecuteTransactionRequest_Command_Write_Tactic
}

func (b0 ExecuteTransactionRequest_Command_Write_builder) Build() *ExecuteTransactionRequest_Command_Write {
	m0 := &ExecuteTransactionRequest_Command_Write{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Key != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Key = b.Key
	}
	if b.Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Value = b.Value
	}
	if b.StorageChannel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_StorageChannel = *b.StorageChannel
	}
	if b.Priority != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Priority = *b.Priority
	}
	if b.Tactic != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Tactic = *b.Tactic
	}
	return m0
}

type ExecuteTransactionRequest_Command_DeleteRange struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Range *KeyRange              `protobuf:"bytes,1,opt,name=range"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ExecuteTransactionRequest_Command_DeleteRange) Reset() {
	*x = ExecuteTransactionRequest_Command_DeleteRange{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteTransactionRequest_Command_DeleteRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransactionRequest_Command_DeleteRange) ProtoMessage() {}

func (x *ExecuteTransactionRequest_Command_DeleteRange) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteTransactionRequest_Command_DeleteRange) GetRange() *KeyRange {
	if x != nil {
		return x.xxx_hidden_Range
	}
	return nil
}

func (x *ExecuteTransactionRequest_Command_DeleteRange) SetRange(v *KeyRange) {
	x.xxx_hidden_Range = v
}

func (x *ExecuteTransactionRequest_Command_DeleteRange) HasRange() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Range != nil
}

func (x *ExecuteTransactionRequest_Command_DeleteRange) ClearRange() {
	x.xxx_hidden_Range = nil
}

type ExecuteTransactionRequest_Command_DeleteRange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The range of keys to delete.
	Range *KeyRange
}

func (b0 ExecuteTransactionRequest_Command_DeleteRange_builder) Build() *ExecuteTransactionRequest_Command_DeleteRange {
	m0 := &ExecuteTransactionRequest_Command_DeleteRange{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Range = b.Range
	return m0
}

type ReadRangeResult_KeyValuePair struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Key              *string                `protobuf:"bytes,1,opt,name=key"`
	xxx_hidden_Value            []byte                 `protobuf:"bytes,2,opt,name=value"`
	xxx_hidden_CreationUnixTime uint64                 `protobuf:"varint,4,opt,name=creation_unix_time,json=creationUnixTime"`
	xxx_hidden_StorageChannel   uint32                 `protobuf:"varint,5,opt,name=storage_channel,json=storageChannel"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ReadRangeResult_KeyValuePair) Reset() {
	*x = ReadRangeResult_KeyValuePair{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRangeResult_KeyValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRangeResult_KeyValuePair) ProtoMessage() {}

func (x *ReadRangeResult_KeyValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadRangeResult_KeyValuePair) GetKey() string {
	if x != nil {
		if x.xxx_hidden_Key != nil {
			return *x.xxx_hidden_Key
		}
		return ""
	}
	return ""
}

func (x *ReadRangeResult_KeyValuePair) GetValue() []byte {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return nil
}

func (x *ReadRangeResult_KeyValuePair) GetCreationUnixTime() uint64 {
	if x != nil {
		return x.xxx_hidden_CreationUnixTime
	}
	return 0
}

func (x *ReadRangeResult_KeyValuePair) GetStorageChannel() uint32 {
	if x != nil {
		return x.xxx_hidden_StorageChannel
	}
	return 0
}

func (x *ReadRangeResult_KeyValuePair) SetKey(v string) {
	x.xxx_hidden_Key = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ReadRangeResult_KeyValuePair) SetValue(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ReadRangeResult_KeyValuePair) SetCreationUnixTime(v uint64) {
	x.xxx_hidden_CreationUnixTime = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ReadRangeResult_KeyValuePair) SetStorageChannel(v uint32) {
	x.xxx_hidden_StorageChannel = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ReadRangeResult_KeyValuePair) HasKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ReadRangeResult_KeyValuePair) HasValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ReadRangeResult_KeyValuePair) HasCreationUnixTime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ReadRangeResult_KeyValuePair) HasStorageChannel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ReadRangeResult_KeyValuePair) ClearKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Key = nil
}

func (x *ReadRangeResult_KeyValuePair) ClearValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Value = nil
}

func (x *ReadRangeResult_KeyValuePair) ClearCreationUnixTime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CreationUnixTime = 0
}

func (x *ReadRangeResult_KeyValuePair) ClearStorageChannel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_StorageChannel = 0
}

type ReadRangeResult_KeyValuePair_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The key of the key-value pair.
	Key *string
	// The value of the key-value pair.
	Value []byte
	// Unix time of the creation of the key-value pair (in ms).
	CreationUnixTime *uint64
	// Contains the index of the actually used storage channel. The actually used storage channel may differ from
	// the value specified in the write request for example if there were no such storage channel at the moment
	// of execution of the write command.
	// For values created as a result of concatenation or copy of concatenated values, the storage channel of the first
	// part of the value is specified.
	StorageChannel *uint32
}

func (b0 ReadRangeResult_KeyValuePair_builder) Build() *ReadRangeResult_KeyValuePair {
	m0 := &ReadRangeResult_KeyValuePair{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Key != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Key = b.Key
	}
	if b.Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Value = b.Value
	}
	if b.CreationUnixTime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_CreationUnixTime = *b.CreationUnixTime
	}
	if b.StorageChannel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_StorageChannel = *b.StorageChannel
	}
	return m0
}

type ListRangeResult_KeyInfo struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Key              *string                `protobuf:"bytes,1,opt,name=key"`
	xxx_hidden_ValueSize        uint32                 `protobuf:"varint,2,opt,name=value_size,json=valueSize"`
	xxx_hidden_CreationUnixTime uint64                 `protobuf:"varint,3,opt,name=creation_unix_time,json=creationUnixTime"`
	xxx_hidden_StorageChannel   uint32                 `protobuf:"varint,4,opt,name=storage_channel,json=storageChannel"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ListRangeResult_KeyInfo) Reset() {
	*x = ListRangeResult_KeyInfo{}
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRangeResult_KeyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRangeResult_KeyInfo) ProtoMessage() {}

func (x *ListRangeResult_KeyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_draft_protos_ydb_keyvalue_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListRangeResult_KeyInfo) GetKey() string {
	if x != nil {
		if x.xxx_hidden_Key != nil {
			return *x.xxx_hidden_Key
		}
		return ""
	}
	return ""
}

func (x *ListRangeResult_KeyInfo) GetValueSize() uint32 {
	if x != nil {
		return x.xxx_hidden_ValueSize
	}
	return 0
}

func (x *ListRangeResult_KeyInfo) GetCreationUnixTime() uint64 {
	if x != nil {
		return x.xxx_hidden_CreationUnixTime
	}
	return 0
}

func (x *ListRangeResult_KeyInfo) GetStorageChannel() uint32 {
	if x != nil {
		return x.xxx_hidden_StorageChannel
	}
	return 0
}

func (x *ListRangeResult_KeyInfo) SetKey(v string) {
	x.xxx_hidden_Key = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ListRangeResult_KeyInfo) SetValueSize(v uint32) {
	x.xxx_hidden_ValueSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ListRangeResult_KeyInfo) SetCreationUnixTime(v uint64) {
	x.xxx_hidden_CreationUnixTime = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ListRangeResult_KeyInfo) SetStorageChannel(v uint32) {
	x.xxx_hidden_StorageChannel = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ListRangeResult_KeyInfo) HasKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListRangeResult_KeyInfo) HasValueSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListRangeResult_KeyInfo) HasCreationUnixTime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ListRangeResult_KeyInfo) HasStorageChannel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ListRangeResult_KeyInfo) ClearKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Key = nil
}

func (x *ListRangeResult_KeyInfo) ClearValueSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ValueSize = 0
}

func (x *ListRangeResult_KeyInfo) ClearCreationUnixTime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CreationUnixTime = 0
}

func (x *ListRangeResult_KeyInfo) ClearStorageChannel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_StorageChannel = 0
}

type ListRangeResult_KeyInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The key of the key-value pair.
	Key *string
	// Full size of the value of the key-value pair.
	ValueSize *uint32
	// Unix time of the creation of the key-value pair (in ms).
	CreationUnixTime *uint64
	// Contains the index of the actually used storage channel. The actually used storage channel may differ from
	// the value specified in the write request for example if there were no such storage channel at the moment
	// of execution of the write command.
	// For values created as a result of concatenation or copy of concatenated values, the storage channel of the first
	// part of the value is specified.
	StorageChannel *uint32
}

func (b0 ListRangeResult_KeyInfo_builder) Build() *ListRangeResult_KeyInfo {
	m0 := &ListRangeResult_KeyInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Key != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Key = b.Key
	}
	if b.ValueSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_ValueSize = *b.ValueSize
	}
	if b.CreationUnixTime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_CreationUnixTime = *b.CreationUnixTime
	}
	if b.StorageChannel != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_StorageChannel = *b.StorageChannel
	}
	return m0
}

var File_draft_protos_ydb_keyvalue_proto protoreflect.FileDescriptor

const file_draft_protos_ydb_keyvalue_proto_rawDesc = "" +
	"\n" +
	"\x1fdraft/protos/ydb_keyvalue.proto\x12\fYdb.KeyValue\x1a\x1aprotos/ydb_operation.proto\x1a!google/protobuf/go_features.proto\"\x8c\x02\n" +
	"\x12StorageChannelInfo\x12'\n" +
	"\x0fstorage_channel\x18\x01 \x01(\rR\x0estorageChannel\x12L\n" +
	"\vstatus_flag\x18\x02 \x01(\x0e2+.Ydb.KeyValue.StorageChannelInfo.StatusFlagR\n" +
	"statusFlag\"\x7f\n" +
	"\n" +
	"StatusFlag\x12\x1b\n" +
	"\x17STATUS_FLAG_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11STATUS_FLAG_GREEN\x10\n" +
	"\x12\x1b\n" +
	"\x17STATUS_FLAG_YELLOW_STOP\x10\x14\x12 \n" +
	"\x1cSTATUS_FLAG_ORANGE_OUT_SPACE\x10\x1e\"b\n" +
	"\n" +
	"Priorities\"T\n" +
	"\bPriority\x12\x18\n" +
	"\x14PRIORITY_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11PRIORITY_REALTIME\x10\x01\x12\x17\n" +
	"\x13PRIORITY_BACKGROUND\x10\x02\"{\n" +
	"\rStorageConfig\x12C\n" +
	"\achannel\x18\x01 \x03(\v2).Ydb.KeyValue.StorageConfig.ChannelConfigR\achannel\x1a%\n" +
	"\rChannelConfig\x12\x14\n" +
	"\x05media\x18\x01 \x01(\tR\x05media\"\xdc\x01\n" +
	"\bKeyRange\x12.\n" +
	"\x12from_key_inclusive\x18\x01 \x01(\tH\x00R\x10fromKeyInclusive\x12.\n" +
	"\x12from_key_exclusive\x18\x02 \x01(\tH\x00R\x10fromKeyExclusive\x12*\n" +
	"\x10to_key_inclusive\x18\x03 \x01(\tH\x01R\x0etoKeyInclusive\x12*\n" +
	"\x10to_key_exclusive\x18\x04 \x01(\tH\x01R\x0etoKeyExclusiveB\f\n" +
	"\n" +
	"from_boundB\n" +
	"\n" +
	"\bto_bound\"\x97\x01\n" +
	"\x12AcquireLockRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12!\n" +
	"\fpartition_id\x18\x03 \x01(\x04R\vpartitionId\"N\n" +
	"\x13AcquireLockResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"U\n" +
	"\x11AcquireLockResult\x12'\n" +
	"\x0flock_generation\x18\x01 \x01(\x04R\x0elockGeneration\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\rR\x06nodeId\"\x8c\v\n" +
	"\x19ExecuteTransactionRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12!\n" +
	"\fpartition_id\x18\x03 \x01(\x04R\vpartitionId\x12'\n" +
	"\x0flock_generation\x18\x04 \x01(\x04R\x0elockGeneration\x12K\n" +
	"\bcommands\x18\x05 \x03(\v2/.Ydb.KeyValue.ExecuteTransactionRequest.CommandR\bcommands\x1a\xf5\b\n" +
	"\aCommand\x12`\n" +
	"\fdelete_range\x18\x01 \x01(\v2;.Ydb.KeyValue.ExecuteTransactionRequest.Command.DeleteRangeH\x00R\vdeleteRange\x12P\n" +
	"\x06rename\x18\x02 \x01(\v26.Ydb.KeyValue.ExecuteTransactionRequest.Command.RenameH\x00R\x06rename\x12Z\n" +
	"\n" +
	"copy_range\x18\x03 \x01(\v29.Ydb.KeyValue.ExecuteTransactionRequest.Command.CopyRangeH\x00R\tcopyRange\x12P\n" +
	"\x06concat\x18\x04 \x01(\v26.Ydb.KeyValue.ExecuteTransactionRequest.Command.ConcatH\x00R\x06concat\x12M\n" +
	"\x05write\x18\x05 \x01(\v25.Ydb.KeyValue.ExecuteTransactionRequest.Command.WriteH\x00R\x05write\x1a:\n" +
	"\x06Rename\x12\x17\n" +
	"\aold_key\x18\x01 \x01(\tR\x06oldKey\x12\x17\n" +
	"\anew_key\x18\x02 \x01(\tR\x06newKey\x1ag\n" +
	"\x06Concat\x12\x1d\n" +
	"\n" +
	"input_keys\x18\x01 \x03(\tR\tinputKeys\x12\x1d\n" +
	"\n" +
	"output_key\x18\x02 \x01(\tR\toutputKey\x12\x1f\n" +
	"\vkeep_inputs\x18\x03 \x01(\bR\n" +
	"keepInputs\x1a\x87\x01\n" +
	"\tCopyRange\x12,\n" +
	"\x05range\x18\x01 \x01(\v2\x16.Ydb.KeyValue.KeyRangeR\x05range\x12(\n" +
	"\x10prefix_to_remove\x18\x02 \x01(\tR\x0eprefixToRemove\x12\"\n" +
	"\rprefix_to_add\x18\x03 \x01(\tR\vprefixToAdd\x1a\xc2\x02\n" +
	"\x05Write\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12'\n" +
	"\x0fstorage_channel\x18\x03 \x01(\rR\x0estorageChannel\x12=\n" +
	"\bpriority\x18\x04 \x01(\x0e2!.Ydb.KeyValue.Priorities.PriorityR\bpriority\x12T\n" +
	"\x06tactic\x18\x05 \x01(\x0e2<.Ydb.KeyValue.ExecuteTransactionRequest.Command.Write.TacticR\x06tactic\"S\n" +
	"\x06Tactic\x12\x16\n" +
	"\x12TACTIC_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15TACTIC_MAX_THROUGHPUT\x10\x01\x12\x16\n" +
	"\x12TACTIC_MIN_LATENCY\x10\x02\x1a;\n" +
	"\vDeleteRange\x12,\n" +
	"\x05range\x18\x01 \x01(\v2\x16.Ydb.KeyValue.KeyRangeR\x05rangeB\b\n" +
	"\x06action\"U\n" +
	"\x1aExecuteTransactionResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x87\x01\n" +
	"\x18ExecuteTransactionResult\x12R\n" +
	"\x14storage_channel_info\x18\x01 \x03(\v2 .Ydb.KeyValue.StorageChannelInfoR\x12storageChannelInfo\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\rR\x06nodeId\"\xd7\x02\n" +
	"\vReadRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12!\n" +
	"\fpartition_id\x18\x03 \x01(\x04R\vpartitionId\x12'\n" +
	"\x0flock_generation\x18\x04 \x01(\x04R\x0elockGeneration\x12\x10\n" +
	"\x03key\x18\x05 \x01(\tR\x03key\x12\x16\n" +
	"\x06offset\x18\x06 \x01(\x04R\x06offset\x12\x12\n" +
	"\x04size\x18\a \x01(\x04R\x04size\x12\x1f\n" +
	"\vlimit_bytes\x18\b \x01(\x04R\n" +
	"limitBytes\x12=\n" +
	"\bpriority\x18\t \x01(\x0e2!.Ydb.KeyValue.Priorities.PriorityR\bpriority\"G\n" +
	"\fReadResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\xd1\x01\n" +
	"\n" +
	"ReadResult\x12#\n" +
	"\rrequested_key\x18\x01 \x01(\tR\frequestedKey\x12)\n" +
	"\x10requested_offset\x18\x02 \x01(\x04R\x0frequestedOffset\x12%\n" +
	"\x0erequested_size\x18\x03 \x01(\x04R\rrequestedSize\x12\x14\n" +
	"\x05value\x18\x04 \x01(\fR\x05value\x12\x1d\n" +
	"\n" +
	"is_overrun\x18\x05 \x01(\bR\tisOverrun\x12\x17\n" +
	"\anode_id\x18\x06 \x01(\rR\x06nodeId\"\xcc\x02\n" +
	"\x10ReadRangeRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12!\n" +
	"\fpartition_id\x18\x03 \x01(\x04R\vpartitionId\x12'\n" +
	"\x0flock_generation\x18\x04 \x01(\x04R\x0elockGeneration\x12,\n" +
	"\x05range\x18\x05 \x01(\v2\x16.Ydb.KeyValue.KeyRangeR\x05range\x12\x1f\n" +
	"\vlimit_bytes\x18\x06 \x01(\x04R\n" +
	"limitBytes\x12=\n" +
	"\bpriority\x18\a \x01(\x0e2!.Ydb.KeyValue.Priorities.PriorityR\bpriority\"L\n" +
	"\x11ReadRangeResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x99\x02\n" +
	"\x0fReadRangeResult\x12>\n" +
	"\x04pair\x18\x01 \x03(\v2*.Ydb.KeyValue.ReadRangeResult.KeyValuePairR\x04pair\x12\x1d\n" +
	"\n" +
	"is_overrun\x18\x02 \x01(\bR\tisOverrun\x12\x17\n" +
	"\anode_id\x18\x03 \x01(\rR\x06nodeId\x1a\x8d\x01\n" +
	"\fKeyValuePair\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12,\n" +
	"\x12creation_unix_time\x18\x04 \x01(\x04R\x10creationUnixTime\x12'\n" +
	"\x0fstorage_channel\x18\x05 \x01(\rR\x0estorageChannel\"\x8d\x02\n" +
	"\x10ListRangeRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12!\n" +
	"\fpartition_id\x18\x03 \x01(\x04R\vpartitionId\x12'\n" +
	"\x0flock_generation\x18\x04 \x01(\x04R\x0elockGeneration\x12,\n" +
	"\x05range\x18\x05 \x01(\v2\x16.Ydb.KeyValue.KeyRangeR\x05range\x12\x1f\n" +
	"\vlimit_bytes\x18\x06 \x01(\x04R\n" +
	"limitBytes\"L\n" +
	"\x11ListRangeResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x96\x02\n" +
	"\x0fListRangeResult\x127\n" +
	"\x03key\x18\x01 \x03(\v2%.Ydb.KeyValue.ListRangeResult.KeyInfoR\x03key\x12\x1d\n" +
	"\n" +
	"is_overrun\x18\x02 \x01(\bR\tisOverrun\x12\x17\n" +
	"\anode_id\x18\x03 \x01(\rR\x06nodeId\x1a\x91\x01\n" +
	"\aKeyInfo\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1d\n" +
	"\n" +
	"value_size\x18\x02 \x01(\rR\tvalueSize\x12,\n" +
	"\x12creation_unix_time\x18\x03 \x01(\x04R\x10creationUnixTime\x12'\n" +
	"\x0fstorage_channel\x18\x04 \x01(\rR\x0estorageChannel\"\xf5\x01\n" +
	"\x1eGetStorageChannelStatusRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12!\n" +
	"\fpartition_id\x18\x03 \x01(\x04R\vpartitionId\x12'\n" +
	"\x0flock_generation\x18\x04 \x01(\x04R\x0elockGeneration\x12'\n" +
	"\x0fstorage_channel\x18\x05 \x03(\rR\x0estorageChannel\"Z\n" +
	"\x1fGetStorageChannelStatusResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x8c\x01\n" +
	"\x1dGetStorageChannelStatusResult\x12R\n" +
	"\x14storage_channel_info\x18\x01 \x03(\v2 .Ydb.KeyValue.StorageChannelInfoR\x12storageChannelInfo\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\rR\x06nodeId\"\xe2\x01\n" +
	"\x13CreateVolumeRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12'\n" +
	"\x0fpartition_count\x18\x04 \x01(\rR\x0epartitionCount\x12B\n" +
	"\x0estorage_config\x18\x05 \x01(\v2\x1b.Ydb.KeyValue.StorageConfigR\rstorageConfig\"O\n" +
	"\x14CreateVolumeResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x14\n" +
	"\x12CreateVolumeResult\"s\n" +
	"\x11DropVolumeRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\"M\n" +
	"\x12DropVolumeResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x12\n" +
	"\x10DropVolumeResult\"\xec\x01\n" +
	"\x12AlterVolumeRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x122\n" +
	"\x15alter_partition_count\x18\x03 \x01(\rR\x13alterPartitionCount\x12B\n" +
	"\x0estorage_config\x18\x04 \x01(\v2\x1b.Ydb.KeyValue.StorageConfigR\rstorageConfig\"N\n" +
	"\x13AlterVolumeResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x13\n" +
	"\x11AlterVolumeResult\"w\n" +
	"\x15DescribeVolumeRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\"Q\n" +
	"\x16DescribeVolumeResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"S\n" +
	"\x14DescribeVolumeResult\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12'\n" +
	"\x0fpartition_count\x18\x02 \x01(\x04R\x0epartitionCount\"\x95\x01\n" +
	"\x1aListLocalPartitionsRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x17\n" +
	"\anode_id\x18\x03 \x01(\x04R\x06nodeId\"V\n" +
	"\x1bListLocalPartitionsResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"m\n" +
	"\x19ListLocalPartitionsResult\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\x04R\x06nodeId\x12#\n" +
	"\rpartition_ids\x18\x03 \x03(\x04R\fpartitionIdsBp\n" +
	" tech.ydb.proto.draft.keyvalue.v1ZAgithub.com/ydb-platform/ydb-go-genproto/draft/protos/Ydb_KeyValue\xf8\x01\x01\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_draft_protos_ydb_keyvalue_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_draft_protos_ydb_keyvalue_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_draft_protos_ydb_keyvalue_proto_goTypes = []any{
	(StorageChannelInfo_StatusFlag)(0),                    // 0: Ydb.KeyValue.StorageChannelInfo.StatusFlag
	(Priorities_Priority)(0),                              // 1: Ydb.KeyValue.Priorities.Priority
	(ExecuteTransactionRequest_Command_Write_Tactic)(0),   // 2: Ydb.KeyValue.ExecuteTransactionRequest.Command.Write.Tactic
	(*StorageChannelInfo)(nil),                            // 3: Ydb.KeyValue.StorageChannelInfo
	(*Priorities)(nil),                                    // 4: Ydb.KeyValue.Priorities
	(*StorageConfig)(nil),                                 // 5: Ydb.KeyValue.StorageConfig
	(*KeyRange)(nil),                                      // 6: Ydb.KeyValue.KeyRange
	(*AcquireLockRequest)(nil),                            // 7: Ydb.KeyValue.AcquireLockRequest
	(*AcquireLockResponse)(nil),                           // 8: Ydb.KeyValue.AcquireLockResponse
	(*AcquireLockResult)(nil),                             // 9: Ydb.KeyValue.AcquireLockResult
	(*ExecuteTransactionRequest)(nil),                     // 10: Ydb.KeyValue.ExecuteTransactionRequest
	(*ExecuteTransactionResponse)(nil),                    // 11: Ydb.KeyValue.ExecuteTransactionResponse
	(*ExecuteTransactionResult)(nil),                      // 12: Ydb.KeyValue.ExecuteTransactionResult
	(*ReadRequest)(nil),                                   // 13: Ydb.KeyValue.ReadRequest
	(*ReadResponse)(nil),                                  // 14: Ydb.KeyValue.ReadResponse
	(*ReadResult)(nil),                                    // 15: Ydb.KeyValue.ReadResult
	(*ReadRangeRequest)(nil),                              // 16: Ydb.KeyValue.ReadRangeRequest
	(*ReadRangeResponse)(nil),                             // 17: Ydb.KeyValue.ReadRangeResponse
	(*ReadRangeResult)(nil),                               // 18: Ydb.KeyValue.ReadRangeResult
	(*ListRangeRequest)(nil),                              // 19: Ydb.KeyValue.ListRangeRequest
	(*ListRangeResponse)(nil),                             // 20: Ydb.KeyValue.ListRangeResponse
	(*ListRangeResult)(nil),                               // 21: Ydb.KeyValue.ListRangeResult
	(*GetStorageChannelStatusRequest)(nil),                // 22: Ydb.KeyValue.GetStorageChannelStatusRequest
	(*GetStorageChannelStatusResponse)(nil),               // 23: Ydb.KeyValue.GetStorageChannelStatusResponse
	(*GetStorageChannelStatusResult)(nil),                 // 24: Ydb.KeyValue.GetStorageChannelStatusResult
	(*CreateVolumeRequest)(nil),                           // 25: Ydb.KeyValue.CreateVolumeRequest
	(*CreateVolumeResponse)(nil),                          // 26: Ydb.KeyValue.CreateVolumeResponse
	(*CreateVolumeResult)(nil),                            // 27: Ydb.KeyValue.CreateVolumeResult
	(*DropVolumeRequest)(nil),                             // 28: Ydb.KeyValue.DropVolumeRequest
	(*DropVolumeResponse)(nil),                            // 29: Ydb.KeyValue.DropVolumeResponse
	(*DropVolumeResult)(nil),                              // 30: Ydb.KeyValue.DropVolumeResult
	(*AlterVolumeRequest)(nil),                            // 31: Ydb.KeyValue.AlterVolumeRequest
	(*AlterVolumeResponse)(nil),                           // 32: Ydb.KeyValue.AlterVolumeResponse
	(*AlterVolumeResult)(nil),                             // 33: Ydb.KeyValue.AlterVolumeResult
	(*DescribeVolumeRequest)(nil),                         // 34: Ydb.KeyValue.DescribeVolumeRequest
	(*DescribeVolumeResponse)(nil),                        // 35: Ydb.KeyValue.DescribeVolumeResponse
	(*DescribeVolumeResult)(nil),                          // 36: Ydb.KeyValue.DescribeVolumeResult
	(*ListLocalPartitionsRequest)(nil),                    // 37: Ydb.KeyValue.ListLocalPartitionsRequest
	(*ListLocalPartitionsResponse)(nil),                   // 38: Ydb.KeyValue.ListLocalPartitionsResponse
	(*ListLocalPartitionsResult)(nil),                     // 39: Ydb.KeyValue.ListLocalPartitionsResult
	(*StorageConfig_ChannelConfig)(nil),                   // 40: Ydb.KeyValue.StorageConfig.ChannelConfig
	(*ExecuteTransactionRequest_Command)(nil),             // 41: Ydb.KeyValue.ExecuteTransactionRequest.Command
	(*ExecuteTransactionRequest_Command_Rename)(nil),      // 42: Ydb.KeyValue.ExecuteTransactionRequest.Command.Rename
	(*ExecuteTransactionRequest_Command_Concat)(nil),      // 43: Ydb.KeyValue.ExecuteTransactionRequest.Command.Concat
	(*ExecuteTransactionRequest_Command_CopyRange)(nil),   // 44: Ydb.KeyValue.ExecuteTransactionRequest.Command.CopyRange
	(*ExecuteTransactionRequest_Command_Write)(nil),       // 45: Ydb.KeyValue.ExecuteTransactionRequest.Command.Write
	(*ExecuteTransactionRequest_Command_DeleteRange)(nil), // 46: Ydb.KeyValue.ExecuteTransactionRequest.Command.DeleteRange
	(*ReadRangeResult_KeyValuePair)(nil),                  // 47: Ydb.KeyValue.ReadRangeResult.KeyValuePair
	(*ListRangeResult_KeyInfo)(nil),                       // 48: Ydb.KeyValue.ListRangeResult.KeyInfo
	(*Ydb_Operations.OperationParams)(nil),                // 49: Ydb.Operations.OperationParams
	(*Ydb_Operations.Operation)(nil),                      // 50: Ydb.Operations.Operation
}
var file_draft_protos_ydb_keyvalue_proto_depIdxs = []int32{
	0,  // 0: Ydb.KeyValue.StorageChannelInfo.status_flag:type_name -> Ydb.KeyValue.StorageChannelInfo.StatusFlag
	40, // 1: Ydb.KeyValue.StorageConfig.channel:type_name -> Ydb.KeyValue.StorageConfig.ChannelConfig
	49, // 2: Ydb.KeyValue.AcquireLockRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	50, // 3: Ydb.KeyValue.AcquireLockResponse.operation:type_name -> Ydb.Operations.Operation
	49, // 4: Ydb.KeyValue.ExecuteTransactionRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	41, // 5: Ydb.KeyValue.ExecuteTransactionRequest.commands:type_name -> Ydb.KeyValue.ExecuteTransactionRequest.Command
	50, // 6: Ydb.KeyValue.ExecuteTransactionResponse.operation:type_name -> Ydb.Operations.Operation
	3,  // 7: Ydb.KeyValue.ExecuteTransactionResult.storage_channel_info:type_name -> Ydb.KeyValue.StorageChannelInfo
	49, // 8: Ydb.KeyValue.ReadRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	1,  // 9: Ydb.KeyValue.ReadRequest.priority:type_name -> Ydb.KeyValue.Priorities.Priority
	50, // 10: Ydb.KeyValue.ReadResponse.operation:type_name -> Ydb.Operations.Operation
	49, // 11: Ydb.KeyValue.ReadRangeRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	6,  // 12: Ydb.KeyValue.ReadRangeRequest.range:type_name -> Ydb.KeyValue.KeyRange
	1,  // 13: Ydb.KeyValue.ReadRangeRequest.priority:type_name -> Ydb.KeyValue.Priorities.Priority
	50, // 14: Ydb.KeyValue.ReadRangeResponse.operation:type_name -> Ydb.Operations.Operation
	47, // 15: Ydb.KeyValue.ReadRangeResult.pair:type_name -> Ydb.KeyValue.ReadRangeResult.KeyValuePair
	49, // 16: Ydb.KeyValue.ListRangeRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	6,  // 17: Ydb.KeyValue.ListRangeRequest.range:type_name -> Ydb.KeyValue.KeyRange
	50, // 18: Ydb.KeyValue.ListRangeResponse.operation:type_name -> Ydb.Operations.Operation
	48, // 19: Ydb.KeyValue.ListRangeResult.key:type_name -> Ydb.KeyValue.ListRangeResult.KeyInfo
	49, // 20: Ydb.KeyValue.GetStorageChannelStatusRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	50, // 21: Ydb.KeyValue.GetStorageChannelStatusResponse.operation:type_name -> Ydb.Operations.Operation
	3,  // 22: Ydb.KeyValue.GetStorageChannelStatusResult.storage_channel_info:type_name -> Ydb.KeyValue.StorageChannelInfo
	49, // 23: Ydb.KeyValue.CreateVolumeRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	5,  // 24: Ydb.KeyValue.CreateVolumeRequest.storage_config:type_name -> Ydb.KeyValue.StorageConfig
	50, // 25: Ydb.KeyValue.CreateVolumeResponse.operation:type_name -> Ydb.Operations.Operation
	49, // 26: Ydb.KeyValue.DropVolumeRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	50, // 27: Ydb.KeyValue.DropVolumeResponse.operation:type_name -> Ydb.Operations.Operation
	49, // 28: Ydb.KeyValue.AlterVolumeRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	5,  // 29: Ydb.KeyValue.AlterVolumeRequest.storage_config:type_name -> Ydb.KeyValue.StorageConfig
	50, // 30: Ydb.KeyValue.AlterVolumeResponse.operation:type_name -> Ydb.Operations.Operation
	49, // 31: Ydb.KeyValue.DescribeVolumeRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	50, // 32: Ydb.KeyValue.DescribeVolumeResponse.operation:type_name -> Ydb.Operations.Operation
	49, // 33: Ydb.KeyValue.ListLocalPartitionsRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	50, // 34: Ydb.KeyValue.ListLocalPartitionsResponse.operation:type_name -> Ydb.Operations.Operation
	46, // 35: Ydb.KeyValue.ExecuteTransactionRequest.Command.delete_range:type_name -> Ydb.KeyValue.ExecuteTransactionRequest.Command.DeleteRange
	42, // 36: Ydb.KeyValue.ExecuteTransactionRequest.Command.rename:type_name -> Ydb.KeyValue.ExecuteTransactionRequest.Command.Rename
	44, // 37: Ydb.KeyValue.ExecuteTransactionRequest.Command.copy_range:type_name -> Ydb.KeyValue.ExecuteTransactionRequest.Command.CopyRange
	43, // 38: Ydb.KeyValue.ExecuteTransactionRequest.Command.concat:type_name -> Ydb.KeyValue.ExecuteTransactionRequest.Command.Concat
	45, // 39: Ydb.KeyValue.ExecuteTransactionRequest.Command.write:type_name -> Ydb.KeyValue.ExecuteTransactionRequest.Command.Write
	6,  // 40: Ydb.KeyValue.ExecuteTransactionRequest.Command.CopyRange.range:type_name -> Ydb.KeyValue.KeyRange
	1,  // 41: Ydb.KeyValue.ExecuteTransactionRequest.Command.Write.priority:type_name -> Ydb.KeyValue.Priorities.Priority
	2,  // 42: Ydb.KeyValue.ExecuteTransactionRequest.Command.Write.tactic:type_name -> Ydb.KeyValue.ExecuteTransactionRequest.Command.Write.Tactic
	6,  // 43: Ydb.KeyValue.ExecuteTransactionRequest.Command.DeleteRange.range:type_name -> Ydb.KeyValue.KeyRange
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_draft_protos_ydb_keyvalue_proto_init() }
func file_draft_protos_ydb_keyvalue_proto_init() {
	if File_draft_protos_ydb_keyvalue_proto != nil {
		return
	}
	file_draft_protos_ydb_keyvalue_proto_msgTypes[3].OneofWrappers = []any{
		(*keyRange_FromKeyInclusive)(nil),
		(*keyRange_FromKeyExclusive)(nil),
		(*keyRange_ToKeyInclusive)(nil),
		(*keyRange_ToKeyExclusive)(nil),
	}
	file_draft_protos_ydb_keyvalue_proto_msgTypes[38].OneofWrappers = []any{
		(*executeTransactionRequest_Command_DeleteRange_)(nil),
		(*executeTransactionRequest_Command_Rename_)(nil),
		(*executeTransactionRequest_Command_CopyRange_)(nil),
		(*executeTransactionRequest_Command_Concat_)(nil),
		(*executeTransactionRequest_Command_Write_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_draft_protos_ydb_keyvalue_proto_rawDesc), len(file_draft_protos_ydb_keyvalue_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_draft_protos_ydb_keyvalue_proto_goTypes,
		DependencyIndexes: file_draft_protos_ydb_keyvalue_proto_depIdxs,
		EnumInfos:         file_draft_protos_ydb_keyvalue_proto_enumTypes,
		MessageInfos:      file_draft_protos_ydb_keyvalue_proto_msgTypes,
	}.Build()
	File_draft_protos_ydb_keyvalue_proto = out.File
	file_draft_protos_ydb_keyvalue_proto_goTypes = nil
	file_draft_protos_ydb_keyvalue_proto_depIdxs = nil
}
