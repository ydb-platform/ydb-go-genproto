// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: protos/ydb_cms.proto

package Ydb_Cms

import (
	Ydb_Operations "github.com/ydb-platform/ydb-go-genproto/protos/Ydb_Operations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDatabaseStatusResult_State int32

const (
	GetDatabaseStatusResult_STATE_UNSPECIFIED GetDatabaseStatusResult_State = 0
	GetDatabaseStatusResult_CREATING          GetDatabaseStatusResult_State = 1
	GetDatabaseStatusResult_RUNNING           GetDatabaseStatusResult_State = 2
	GetDatabaseStatusResult_REMOVING          GetDatabaseStatusResult_State = 3
	GetDatabaseStatusResult_PENDING_RESOURCES GetDatabaseStatusResult_State = 4
	GetDatabaseStatusResult_CONFIGURING       GetDatabaseStatusResult_State = 5
)

// Enum value maps for GetDatabaseStatusResult_State.
var (
	GetDatabaseStatusResult_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "CREATING",
		2: "RUNNING",
		3: "REMOVING",
		4: "PENDING_RESOURCES",
		5: "CONFIGURING",
	}
	GetDatabaseStatusResult_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"CREATING":          1,
		"RUNNING":           2,
		"REMOVING":          3,
		"PENDING_RESOURCES": 4,
		"CONFIGURING":       5,
	}
)

func (x GetDatabaseStatusResult_State) Enum() *GetDatabaseStatusResult_State {
	p := new(GetDatabaseStatusResult_State)
	*p = x
	return p
}

func (x GetDatabaseStatusResult_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetDatabaseStatusResult_State) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_cms_proto_enumTypes[0].Descriptor()
}

func (GetDatabaseStatusResult_State) Type() protoreflect.EnumType {
	return &file_protos_ydb_cms_proto_enumTypes[0]
}

func (x GetDatabaseStatusResult_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetDatabaseStatusResult_State.Descriptor instead.
func (GetDatabaseStatusResult_State) EnumDescriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{12, 0}
}

// A set of uniform storage units.
// Single storage unit can be thought of as a reserved part of a RAID.
type StorageUnits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Kind of the storage unit. Determine guarantees
	// for all main unit parameters: used hard disk type, capacity
	// throughput, IOPS etc.
	UnitKind string `protobuf:"bytes,1,opt,name=unit_kind,json=unitKind,proto3" json:"unit_kind,omitempty"`
	// Required. The number of units in this set.
	Count uint64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *StorageUnits) Reset() {
	*x = StorageUnits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageUnits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageUnits) ProtoMessage() {}

func (x *StorageUnits) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageUnits.ProtoReflect.Descriptor instead.
func (*StorageUnits) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{0}
}

func (x *StorageUnits) GetUnitKind() string {
	if x != nil {
		return x.UnitKind
	}
	return ""
}

func (x *StorageUnits) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// A set of uniform computational units.
type ComputationalUnits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Kind of the computational unit. Determine main
	// unit parameters like available memory, CPU, etc.
	UnitKind string `protobuf:"bytes,1,opt,name=unit_kind,json=unitKind,proto3" json:"unit_kind,omitempty"`
	// The availability zone all unit should be located in.
	// By default any availability zone can be used.
	AvailabilityZone string `protobuf:"bytes,2,opt,name=availability_zone,json=availabilityZone,proto3" json:"availability_zone,omitempty"`
	// Required. The number of units in this set.
	Count uint64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ComputationalUnits) Reset() {
	*x = ComputationalUnits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputationalUnits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputationalUnits) ProtoMessage() {}

func (x *ComputationalUnits) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputationalUnits.ProtoReflect.Descriptor instead.
func (*ComputationalUnits) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{1}
}

func (x *ComputationalUnits) GetUnitKind() string {
	if x != nil {
		return x.UnitKind
	}
	return ""
}

func (x *ComputationalUnits) GetAvailabilityZone() string {
	if x != nil {
		return x.AvailabilityZone
	}
	return ""
}

func (x *ComputationalUnits) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Computational unit allocated for database. Used to register
// externally allocated computational resources in CMS.
type AllocatedComputationalUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Computational unit host name.
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Required. Computational unit port.
	Port uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// Required. Computational unit kind.
	UnitKind string `protobuf:"bytes,3,opt,name=unit_kind,json=unitKind,proto3" json:"unit_kind,omitempty"`
}

func (x *AllocatedComputationalUnit) Reset() {
	*x = AllocatedComputationalUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocatedComputationalUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocatedComputationalUnit) ProtoMessage() {}

func (x *AllocatedComputationalUnit) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocatedComputationalUnit.ProtoReflect.Descriptor instead.
func (*AllocatedComputationalUnit) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{2}
}

func (x *AllocatedComputationalUnit) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *AllocatedComputationalUnit) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *AllocatedComputationalUnit) GetUnitKind() string {
	if x != nil {
		return x.UnitKind
	}
	return ""
}

// A set of computational and storage resources.
type Resources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Storage resources.
	StorageUnits []*StorageUnits `protobuf:"bytes,1,rep,name=storage_units,json=storageUnits,proto3" json:"storage_units,omitempty"`
	// Computational resources.
	ComputationalUnits []*ComputationalUnits `protobuf:"bytes,2,rep,name=computational_units,json=computationalUnits,proto3" json:"computational_units,omitempty"`
}

func (x *Resources) Reset() {
	*x = Resources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{3}
}

func (x *Resources) GetStorageUnits() []*StorageUnits {
	if x != nil {
		return x.StorageUnits
	}
	return nil
}

func (x *Resources) GetComputationalUnits() []*ComputationalUnits {
	if x != nil {
		return x.ComputationalUnits
	}
	return nil
}

type ServerlessResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Full path to shared database's home dir whose resources will be used.
	SharedDatabasePath string `protobuf:"bytes,1,opt,name=shared_database_path,json=sharedDatabasePath,proto3" json:"shared_database_path,omitempty"`
}

func (x *ServerlessResources) Reset() {
	*x = ServerlessResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerlessResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerlessResources) ProtoMessage() {}

func (x *ServerlessResources) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerlessResources.ProtoReflect.Descriptor instead.
func (*ServerlessResources) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{4}
}

func (x *ServerlessResources) GetSharedDatabasePath() string {
	if x != nil {
		return x.SharedDatabasePath
	}
	return ""
}

type DatabaseOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Do not initialize services required for transactions processing.
	DisableTxService bool `protobuf:"varint,1,opt,name=disable_tx_service,json=disableTxService,proto3" json:"disable_tx_service,omitempty"`
	// Old-style database, do not create external schemeshard for database
	DisableExternalSubdomain bool `protobuf:"varint,2,opt,name=disable_external_subdomain,json=disableExternalSubdomain,proto3" json:"disable_external_subdomain,omitempty"`
	// Transaction plan resolution in milliseconds
	PlanResolution uint32 `protobuf:"varint,3,opt,name=plan_resolution,json=planResolution,proto3" json:"plan_resolution,omitempty"`
}

func (x *DatabaseOptions) Reset() {
	*x = DatabaseOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseOptions) ProtoMessage() {}

func (x *DatabaseOptions) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseOptions.ProtoReflect.Descriptor instead.
func (*DatabaseOptions) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{5}
}

func (x *DatabaseOptions) GetDisableTxService() bool {
	if x != nil {
		return x.DisableTxService
	}
	return false
}

func (x *DatabaseOptions) GetDisableExternalSubdomain() bool {
	if x != nil {
		return x.DisableExternalSubdomain
	}
	return false
}

func (x *DatabaseOptions) GetPlanResolution() uint32 {
	if x != nil {
		return x.PlanResolution
	}
	return 0
}

// A set of quotas for schema operations
type SchemaOperationQuotas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Leaky bucket based quotas
	LeakyBucketQuotas []*SchemaOperationQuotas_LeakyBucket `protobuf:"bytes,1,rep,name=leaky_bucket_quotas,json=leakyBucketQuotas,proto3" json:"leaky_bucket_quotas,omitempty"`
}

func (x *SchemaOperationQuotas) Reset() {
	*x = SchemaOperationQuotas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemaOperationQuotas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaOperationQuotas) ProtoMessage() {}

func (x *SchemaOperationQuotas) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaOperationQuotas.ProtoReflect.Descriptor instead.
func (*SchemaOperationQuotas) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{6}
}

func (x *SchemaOperationQuotas) GetLeakyBucketQuotas() []*SchemaOperationQuotas_LeakyBucket {
	if x != nil {
		return x.LeakyBucketQuotas
	}
	return nil
}

// A set of quotas for the database
type DatabaseQuotas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A maximum data size in bytes, new data will be rejected when exceeded
	DataSizeHardQuota uint64 `protobuf:"varint,1,opt,name=data_size_hard_quota,json=dataSizeHardQuota,proto3" json:"data_size_hard_quota,omitempty"`
	// An optional size in bytes (lower than data_size_hard_quota). When data
	// size becomes lower than this value new data ingestion is re-enabled
	// again. This is useful to help avoid database from rapidly entering and
	// exiting from the overloaded state.
	DataSizeSoftQuota uint64 `protobuf:"varint,2,opt,name=data_size_soft_quota,json=dataSizeSoftQuota,proto3" json:"data_size_soft_quota,omitempty"`
	// A maximum count of shards in all data streams.
	DataStreamShardsQuota uint64 `protobuf:"varint,3,opt,name=data_stream_shards_quota,json=dataStreamShardsQuota,proto3" json:"data_stream_shards_quota,omitempty"`
	// A maximum storage that will be reserved for all data stream shards.
	DataStreamReservedStorageQuota uint64 `protobuf:"varint,5,opt,name=data_stream_reserved_storage_quota,json=dataStreamReservedStorageQuota,proto3" json:"data_stream_reserved_storage_quota,omitempty"`
	// A minimum value of `TtlSettings.run_interval_seconds` that can be specified.
	// Default is 1800 (15 minutes).
	TtlMinRunInternalSeconds uint32 `protobuf:"varint,4,opt,name=ttl_min_run_internal_seconds,json=ttlMinRunInternalSeconds,proto3" json:"ttl_min_run_internal_seconds,omitempty"`
}

func (x *DatabaseQuotas) Reset() {
	*x = DatabaseQuotas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseQuotas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseQuotas) ProtoMessage() {}

func (x *DatabaseQuotas) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseQuotas.ProtoReflect.Descriptor instead.
func (*DatabaseQuotas) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{7}
}

func (x *DatabaseQuotas) GetDataSizeHardQuota() uint64 {
	if x != nil {
		return x.DataSizeHardQuota
	}
	return 0
}

func (x *DatabaseQuotas) GetDataSizeSoftQuota() uint64 {
	if x != nil {
		return x.DataSizeSoftQuota
	}
	return 0
}

func (x *DatabaseQuotas) GetDataStreamShardsQuota() uint64 {
	if x != nil {
		return x.DataStreamShardsQuota
	}
	return 0
}

func (x *DatabaseQuotas) GetDataStreamReservedStorageQuota() uint64 {
	if x != nil {
		return x.DataStreamReservedStorageQuota
	}
	return 0
}

func (x *DatabaseQuotas) GetTtlMinRunInternalSeconds() uint32 {
	if x != nil {
		return x.TtlMinRunInternalSeconds
	}
	return 0
}

// Request to create a new database. For successfull creation
// specified database shouldn't exist. At least one storage
// unit should be requested for the database.
type CreateDatabaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Required. Full path to database's home dir. Used as database ID.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Types that are assignable to ResourcesKind:
	//
	//	*CreateDatabaseRequest_Resources
	//	*CreateDatabaseRequest_SharedResources
	//	*CreateDatabaseRequest_ServerlessResources
	ResourcesKind isCreateDatabaseRequest_ResourcesKind `protobuf_oneof:"resources_kind"`
	// Additional database options.
	Options *DatabaseOptions `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
	// Attach attributes to database.
	Attributes map[string]string `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Optional quotas for schema operations
	SchemaOperationQuotas *SchemaOperationQuotas `protobuf:"bytes,8,opt,name=schema_operation_quotas,json=schemaOperationQuotas,proto3" json:"schema_operation_quotas,omitempty"`
	// Optional idempotency key
	IdempotencyKey string `protobuf:"bytes,9,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
	// Optional quotas for the database
	DatabaseQuotas *DatabaseQuotas `protobuf:"bytes,10,opt,name=database_quotas,json=databaseQuotas,proto3" json:"database_quotas,omitempty"`
}

func (x *CreateDatabaseRequest) Reset() {
	*x = CreateDatabaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDatabaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatabaseRequest) ProtoMessage() {}

func (x *CreateDatabaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatabaseRequest.ProtoReflect.Descriptor instead.
func (*CreateDatabaseRequest) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{8}
}

func (x *CreateDatabaseRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *CreateDatabaseRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (m *CreateDatabaseRequest) GetResourcesKind() isCreateDatabaseRequest_ResourcesKind {
	if m != nil {
		return m.ResourcesKind
	}
	return nil
}

func (x *CreateDatabaseRequest) GetResources() *Resources {
	if x, ok := x.GetResourcesKind().(*CreateDatabaseRequest_Resources); ok {
		return x.Resources
	}
	return nil
}

func (x *CreateDatabaseRequest) GetSharedResources() *Resources {
	if x, ok := x.GetResourcesKind().(*CreateDatabaseRequest_SharedResources); ok {
		return x.SharedResources
	}
	return nil
}

func (x *CreateDatabaseRequest) GetServerlessResources() *ServerlessResources {
	if x, ok := x.GetResourcesKind().(*CreateDatabaseRequest_ServerlessResources); ok {
		return x.ServerlessResources
	}
	return nil
}

func (x *CreateDatabaseRequest) GetOptions() *DatabaseOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CreateDatabaseRequest) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *CreateDatabaseRequest) GetSchemaOperationQuotas() *SchemaOperationQuotas {
	if x != nil {
		return x.SchemaOperationQuotas
	}
	return nil
}

func (x *CreateDatabaseRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *CreateDatabaseRequest) GetDatabaseQuotas() *DatabaseQuotas {
	if x != nil {
		return x.DatabaseQuotas
	}
	return nil
}

type isCreateDatabaseRequest_ResourcesKind interface {
	isCreateDatabaseRequest_ResourcesKind()
}

type CreateDatabaseRequest_Resources struct {
	// Resources to allocate for database by CMS.
	Resources *Resources `protobuf:"bytes,3,opt,name=resources,proto3,oneof"`
}

type CreateDatabaseRequest_SharedResources struct {
	// Shared resources can be used by serverless databases.
	SharedResources *Resources `protobuf:"bytes,6,opt,name=shared_resources,json=sharedResources,proto3,oneof"`
}

type CreateDatabaseRequest_ServerlessResources struct {
	// If specified, the created database will be "serverless".
	ServerlessResources *ServerlessResources `protobuf:"bytes,7,opt,name=serverless_resources,json=serverlessResources,proto3,oneof"`
}

func (*CreateDatabaseRequest_Resources) isCreateDatabaseRequest_ResourcesKind() {}

func (*CreateDatabaseRequest_SharedResources) isCreateDatabaseRequest_ResourcesKind() {}

func (*CreateDatabaseRequest_ServerlessResources) isCreateDatabaseRequest_ResourcesKind() {}

type CreateDatabaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *CreateDatabaseResponse) Reset() {
	*x = CreateDatabaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDatabaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDatabaseResponse) ProtoMessage() {}

func (x *CreateDatabaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDatabaseResponse.ProtoReflect.Descriptor instead.
func (*CreateDatabaseResponse) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{9}
}

func (x *CreateDatabaseResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

// Get current database status.
type GetDatabaseStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Full path to database's home dir.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Operation parameters
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,2,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
}

func (x *GetDatabaseStatusRequest) Reset() {
	*x = GetDatabaseStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatabaseStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatabaseStatusRequest) ProtoMessage() {}

func (x *GetDatabaseStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatabaseStatusRequest.ProtoReflect.Descriptor instead.
func (*GetDatabaseStatusRequest) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{10}
}

func (x *GetDatabaseStatusRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetDatabaseStatusRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

type GetDatabaseStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// operation.result holds GetDatabaseStatusResult
	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *GetDatabaseStatusResponse) Reset() {
	*x = GetDatabaseStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatabaseStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatabaseStatusResponse) ProtoMessage() {}

func (x *GetDatabaseStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatabaseStatusResponse.ProtoReflect.Descriptor instead.
func (*GetDatabaseStatusResponse) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{11}
}

func (x *GetDatabaseStatusResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type GetDatabaseStatusResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Full path to database's home dir.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Current database state.
	State GetDatabaseStatusResult_State `protobuf:"varint,2,opt,name=state,proto3,enum=Ydb.Cms.GetDatabaseStatusResult_State" json:"state,omitempty"`
	// Types that are assignable to ResourcesKind:
	//
	//	*GetDatabaseStatusResult_RequiredResources
	//	*GetDatabaseStatusResult_RequiredSharedResources
	//	*GetDatabaseStatusResult_ServerlessResources
	ResourcesKind isGetDatabaseStatusResult_ResourcesKind `protobuf_oneof:"resources_kind"`
	// Database resources allocated by CMS.
	AllocatedResources *Resources `protobuf:"bytes,4,opt,name=allocated_resources,json=allocatedResources,proto3" json:"allocated_resources,omitempty"`
	// Externally allocated database resources registered in CMS.
	RegisteredResources []*AllocatedComputationalUnit `protobuf:"bytes,5,rep,name=registered_resources,json=registeredResources,proto3" json:"registered_resources,omitempty"`
	// Current database generation. Incremented at each successful
	// alter request.
	Generation uint64 `protobuf:"varint,6,opt,name=generation,proto3" json:"generation,omitempty"`
	// Current quotas for schema operations
	SchemaOperationQuotas *SchemaOperationQuotas `protobuf:"bytes,9,opt,name=schema_operation_quotas,json=schemaOperationQuotas,proto3" json:"schema_operation_quotas,omitempty"`
	// Current quotas for the database
	DatabaseQuotas *DatabaseQuotas `protobuf:"bytes,10,opt,name=database_quotas,json=databaseQuotas,proto3" json:"database_quotas,omitempty"`
}

func (x *GetDatabaseStatusResult) Reset() {
	*x = GetDatabaseStatusResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatabaseStatusResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatabaseStatusResult) ProtoMessage() {}

func (x *GetDatabaseStatusResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatabaseStatusResult.ProtoReflect.Descriptor instead.
func (*GetDatabaseStatusResult) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{12}
}

func (x *GetDatabaseStatusResult) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetDatabaseStatusResult) GetState() GetDatabaseStatusResult_State {
	if x != nil {
		return x.State
	}
	return GetDatabaseStatusResult_STATE_UNSPECIFIED
}

func (m *GetDatabaseStatusResult) GetResourcesKind() isGetDatabaseStatusResult_ResourcesKind {
	if m != nil {
		return m.ResourcesKind
	}
	return nil
}

func (x *GetDatabaseStatusResult) GetRequiredResources() *Resources {
	if x, ok := x.GetResourcesKind().(*GetDatabaseStatusResult_RequiredResources); ok {
		return x.RequiredResources
	}
	return nil
}

func (x *GetDatabaseStatusResult) GetRequiredSharedResources() *Resources {
	if x, ok := x.GetResourcesKind().(*GetDatabaseStatusResult_RequiredSharedResources); ok {
		return x.RequiredSharedResources
	}
	return nil
}

func (x *GetDatabaseStatusResult) GetServerlessResources() *ServerlessResources {
	if x, ok := x.GetResourcesKind().(*GetDatabaseStatusResult_ServerlessResources); ok {
		return x.ServerlessResources
	}
	return nil
}

func (x *GetDatabaseStatusResult) GetAllocatedResources() *Resources {
	if x != nil {
		return x.AllocatedResources
	}
	return nil
}

func (x *GetDatabaseStatusResult) GetRegisteredResources() []*AllocatedComputationalUnit {
	if x != nil {
		return x.RegisteredResources
	}
	return nil
}

func (x *GetDatabaseStatusResult) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *GetDatabaseStatusResult) GetSchemaOperationQuotas() *SchemaOperationQuotas {
	if x != nil {
		return x.SchemaOperationQuotas
	}
	return nil
}

func (x *GetDatabaseStatusResult) GetDatabaseQuotas() *DatabaseQuotas {
	if x != nil {
		return x.DatabaseQuotas
	}
	return nil
}

type isGetDatabaseStatusResult_ResourcesKind interface {
	isGetDatabaseStatusResult_ResourcesKind()
}

type GetDatabaseStatusResult_RequiredResources struct {
	// Database resources requested for allocation.
	RequiredResources *Resources `protobuf:"bytes,3,opt,name=required_resources,json=requiredResources,proto3,oneof"`
}

type GetDatabaseStatusResult_RequiredSharedResources struct {
	RequiredSharedResources *Resources `protobuf:"bytes,7,opt,name=required_shared_resources,json=requiredSharedResources,proto3,oneof"`
}

type GetDatabaseStatusResult_ServerlessResources struct {
	ServerlessResources *ServerlessResources `protobuf:"bytes,8,opt,name=serverless_resources,json=serverlessResources,proto3,oneof"`
}

func (*GetDatabaseStatusResult_RequiredResources) isGetDatabaseStatusResult_ResourcesKind() {}

func (*GetDatabaseStatusResult_RequiredSharedResources) isGetDatabaseStatusResult_ResourcesKind() {}

func (*GetDatabaseStatusResult_ServerlessResources) isGetDatabaseStatusResult_ResourcesKind() {}

// Change resources allocated for database.
type AlterDatabaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Full path to database's home dir.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Additional computational units to allocate for database.
	ComputationalUnitsToAdd []*ComputationalUnits `protobuf:"bytes,2,rep,name=computational_units_to_add,json=computationalUnitsToAdd,proto3" json:"computational_units_to_add,omitempty"`
	// Computational units to deallocate.
	ComputationalUnitsToRemove []*ComputationalUnits `protobuf:"bytes,3,rep,name=computational_units_to_remove,json=computationalUnitsToRemove,proto3" json:"computational_units_to_remove,omitempty"`
	// Additional storage units to allocate for database.
	StorageUnitsToAdd []*StorageUnits `protobuf:"bytes,4,rep,name=storage_units_to_add,json=storageUnitsToAdd,proto3" json:"storage_units_to_add,omitempty"`
	// Externally allocated computational units to register for database.
	ComputationalUnitsToRegister []*AllocatedComputationalUnit `protobuf:"bytes,5,rep,name=computational_units_to_register,json=computationalUnitsToRegister,proto3" json:"computational_units_to_register,omitempty"`
	// Externally allocated computational units to deregister.
	ComputationalUnitsToDeregister []*AllocatedComputationalUnit `protobuf:"bytes,6,rep,name=computational_units_to_deregister,json=computationalUnitsToDeregister,proto3" json:"computational_units_to_deregister,omitempty"`
	// Operation parameters.
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,7,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
	// Current generation of altered database.
	Generation uint64 `protobuf:"varint,8,opt,name=generation,proto3" json:"generation,omitempty"`
	// Change quotas for schema operations
	SchemaOperationQuotas *SchemaOperationQuotas `protobuf:"bytes,9,opt,name=schema_operation_quotas,json=schemaOperationQuotas,proto3" json:"schema_operation_quotas,omitempty"`
	// Optional idempotency key
	IdempotencyKey string `protobuf:"bytes,10,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`
	// Change quotas for the database
	DatabaseQuotas *DatabaseQuotas `protobuf:"bytes,11,opt,name=database_quotas,json=databaseQuotas,proto3" json:"database_quotas,omitempty"`
	// Alter attributes. Leave the value blank to drop an attribute.
	AlterAttributes map[string]string `protobuf:"bytes,12,rep,name=alter_attributes,json=alterAttributes,proto3" json:"alter_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AlterDatabaseRequest) Reset() {
	*x = AlterDatabaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterDatabaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterDatabaseRequest) ProtoMessage() {}

func (x *AlterDatabaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterDatabaseRequest.ProtoReflect.Descriptor instead.
func (*AlterDatabaseRequest) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{13}
}

func (x *AlterDatabaseRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AlterDatabaseRequest) GetComputationalUnitsToAdd() []*ComputationalUnits {
	if x != nil {
		return x.ComputationalUnitsToAdd
	}
	return nil
}

func (x *AlterDatabaseRequest) GetComputationalUnitsToRemove() []*ComputationalUnits {
	if x != nil {
		return x.ComputationalUnitsToRemove
	}
	return nil
}

func (x *AlterDatabaseRequest) GetStorageUnitsToAdd() []*StorageUnits {
	if x != nil {
		return x.StorageUnitsToAdd
	}
	return nil
}

func (x *AlterDatabaseRequest) GetComputationalUnitsToRegister() []*AllocatedComputationalUnit {
	if x != nil {
		return x.ComputationalUnitsToRegister
	}
	return nil
}

func (x *AlterDatabaseRequest) GetComputationalUnitsToDeregister() []*AllocatedComputationalUnit {
	if x != nil {
		return x.ComputationalUnitsToDeregister
	}
	return nil
}

func (x *AlterDatabaseRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *AlterDatabaseRequest) GetGeneration() uint64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *AlterDatabaseRequest) GetSchemaOperationQuotas() *SchemaOperationQuotas {
	if x != nil {
		return x.SchemaOperationQuotas
	}
	return nil
}

func (x *AlterDatabaseRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *AlterDatabaseRequest) GetDatabaseQuotas() *DatabaseQuotas {
	if x != nil {
		return x.DatabaseQuotas
	}
	return nil
}

func (x *AlterDatabaseRequest) GetAlterAttributes() map[string]string {
	if x != nil {
		return x.AlterAttributes
	}
	return nil
}

type AlterDatabaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *AlterDatabaseResponse) Reset() {
	*x = AlterDatabaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlterDatabaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterDatabaseResponse) ProtoMessage() {}

func (x *AlterDatabaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterDatabaseResponse.ProtoReflect.Descriptor instead.
func (*AlterDatabaseResponse) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{14}
}

func (x *AlterDatabaseResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

// List all databases known by CMS.
type ListDatabasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation parameters
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
}

func (x *ListDatabasesRequest) Reset() {
	*x = ListDatabasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatabasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatabasesRequest) ProtoMessage() {}

func (x *ListDatabasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatabasesRequest.ProtoReflect.Descriptor instead.
func (*ListDatabasesRequest) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{15}
}

func (x *ListDatabasesRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

type ListDatabasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// operation.result holds ListDatabasesResult
	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *ListDatabasesResponse) Reset() {
	*x = ListDatabasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatabasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatabasesResponse) ProtoMessage() {}

func (x *ListDatabasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatabasesResponse.ProtoReflect.Descriptor instead.
func (*ListDatabasesResponse) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{16}
}

func (x *ListDatabasesResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type ListDatabasesResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paths []string `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
}

func (x *ListDatabasesResult) Reset() {
	*x = ListDatabasesResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDatabasesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatabasesResult) ProtoMessage() {}

func (x *ListDatabasesResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatabasesResult.ProtoReflect.Descriptor instead.
func (*ListDatabasesResult) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{17}
}

func (x *ListDatabasesResult) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

// Completely remove database and all his data.
type RemoveDatabaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. Full path to database's home dir.
	Path            string                          `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,2,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
}

func (x *RemoveDatabaseRequest) Reset() {
	*x = RemoveDatabaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveDatabaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDatabaseRequest) ProtoMessage() {}

func (x *RemoveDatabaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDatabaseRequest.ProtoReflect.Descriptor instead.
func (*RemoveDatabaseRequest) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{18}
}

func (x *RemoveDatabaseRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RemoveDatabaseRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

type RemoveDatabaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *RemoveDatabaseResponse) Reset() {
	*x = RemoveDatabaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveDatabaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDatabaseResponse) ProtoMessage() {}

func (x *RemoveDatabaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDatabaseResponse.ProtoReflect.Descriptor instead.
func (*RemoveDatabaseResponse) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{19}
}

func (x *RemoveDatabaseResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type StorageUnitDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind   string            `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *StorageUnitDescription) Reset() {
	*x = StorageUnitDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageUnitDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageUnitDescription) ProtoMessage() {}

func (x *StorageUnitDescription) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageUnitDescription.ProtoReflect.Descriptor instead.
func (*StorageUnitDescription) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{20}
}

func (x *StorageUnitDescription) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *StorageUnitDescription) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type AvailabilityZoneDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AvailabilityZoneDescription) Reset() {
	*x = AvailabilityZoneDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailabilityZoneDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailabilityZoneDescription) ProtoMessage() {}

func (x *AvailabilityZoneDescription) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailabilityZoneDescription.ProtoReflect.Descriptor instead.
func (*AvailabilityZoneDescription) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{21}
}

func (x *AvailabilityZoneDescription) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AvailabilityZoneDescription) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ComputationalUnitDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind                     string            `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Labels                   map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AllowedAvailabilityZones []string          `protobuf:"bytes,3,rep,name=allowed_availability_zones,json=allowedAvailabilityZones,proto3" json:"allowed_availability_zones,omitempty"`
}

func (x *ComputationalUnitDescription) Reset() {
	*x = ComputationalUnitDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputationalUnitDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputationalUnitDescription) ProtoMessage() {}

func (x *ComputationalUnitDescription) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputationalUnitDescription.ProtoReflect.Descriptor instead.
func (*ComputationalUnitDescription) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{22}
}

func (x *ComputationalUnitDescription) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ComputationalUnitDescription) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ComputationalUnitDescription) GetAllowedAvailabilityZones() []string {
	if x != nil {
		return x.AllowedAvailabilityZones
	}
	return nil
}

type DescribeDatabaseOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation parameters
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3" json:"operation_params,omitempty"`
}

func (x *DescribeDatabaseOptionsRequest) Reset() {
	*x = DescribeDatabaseOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDatabaseOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDatabaseOptionsRequest) ProtoMessage() {}

func (x *DescribeDatabaseOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDatabaseOptionsRequest.ProtoReflect.Descriptor instead.
func (*DescribeDatabaseOptionsRequest) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{23}
}

func (x *DescribeDatabaseOptionsRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

type DescribeDatabaseOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// operation.result holds DescribeDatabaseOptionsResult
	Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *DescribeDatabaseOptionsResponse) Reset() {
	*x = DescribeDatabaseOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDatabaseOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDatabaseOptionsResponse) ProtoMessage() {}

func (x *DescribeDatabaseOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDatabaseOptionsResponse.ProtoReflect.Descriptor instead.
func (*DescribeDatabaseOptionsResponse) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{24}
}

func (x *DescribeDatabaseOptionsResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type DescribeDatabaseOptionsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageUnits       []*StorageUnitDescription       `protobuf:"bytes,1,rep,name=storage_units,json=storageUnits,proto3" json:"storage_units,omitempty"`
	AvailabilityZones  []*AvailabilityZoneDescription  `protobuf:"bytes,2,rep,name=availability_zones,json=availabilityZones,proto3" json:"availability_zones,omitempty"`
	ComputationalUnits []*ComputationalUnitDescription `protobuf:"bytes,3,rep,name=computational_units,json=computationalUnits,proto3" json:"computational_units,omitempty"`
}

func (x *DescribeDatabaseOptionsResult) Reset() {
	*x = DescribeDatabaseOptionsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDatabaseOptionsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDatabaseOptionsResult) ProtoMessage() {}

func (x *DescribeDatabaseOptionsResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDatabaseOptionsResult.ProtoReflect.Descriptor instead.
func (*DescribeDatabaseOptionsResult) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{25}
}

func (x *DescribeDatabaseOptionsResult) GetStorageUnits() []*StorageUnitDescription {
	if x != nil {
		return x.StorageUnits
	}
	return nil
}

func (x *DescribeDatabaseOptionsResult) GetAvailabilityZones() []*AvailabilityZoneDescription {
	if x != nil {
		return x.AvailabilityZones
	}
	return nil
}

func (x *DescribeDatabaseOptionsResult) GetComputationalUnits() []*ComputationalUnitDescription {
	if x != nil {
		return x.ComputationalUnits
	}
	return nil
}

// A single quota based on leaky bucket
type SchemaOperationQuotas_LeakyBucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Bucket size, e.g. <1000> per day
	BucketSize float64 `protobuf:"fixed64,1,opt,name=bucket_size,json=bucketSize,proto3" json:"bucket_size,omitempty"`
	// Bucket duration in seconds, e.g. 1000 per <day>
	BucketSeconds uint64 `protobuf:"varint,2,opt,name=bucket_seconds,json=bucketSeconds,proto3" json:"bucket_seconds,omitempty"`
}

func (x *SchemaOperationQuotas_LeakyBucket) Reset() {
	*x = SchemaOperationQuotas_LeakyBucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_ydb_cms_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemaOperationQuotas_LeakyBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaOperationQuotas_LeakyBucket) ProtoMessage() {}

func (x *SchemaOperationQuotas_LeakyBucket) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_cms_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaOperationQuotas_LeakyBucket.ProtoReflect.Descriptor instead.
func (*SchemaOperationQuotas_LeakyBucket) Descriptor() ([]byte, []int) {
	return file_protos_ydb_cms_proto_rawDescGZIP(), []int{6, 0}
}

func (x *SchemaOperationQuotas_LeakyBucket) GetBucketSize() float64 {
	if x != nil {
		return x.BucketSize
	}
	return 0
}

func (x *SchemaOperationQuotas_LeakyBucket) GetBucketSeconds() uint64 {
	if x != nil {
		return x.BucketSeconds
	}
	return 0
}

var File_protos_ydb_cms_proto protoreflect.FileDescriptor

var file_protos_ydb_cms_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x79, 0x64, 0x62, 0x5f, 0x63, 0x6d, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x1a,
	0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x79, 0x64, 0x62, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x0c, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x6e, 0x69, 0x74, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x6e, 0x69, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x74,
	0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x55,
	0x6e, 0x69, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x4b, 0x69, 0x6e,
	0x64, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x61, 0x0a, 0x1a, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e,
	0x69, 0x74, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x6e, 0x69, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x59,
	0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x6e,
	0x69, 0x74, 0x73, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x74,
	0x73, 0x12, 0x4c, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x12, 0x63, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x22,
	0x47, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0xa6, 0x01, 0x0a, 0x0f, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x12,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x78, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x54, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73,
	0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53,
	0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x6e,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xca, 0x01, 0x0a, 0x15, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x12, 0x5a, 0x0a, 0x13, 0x6c,
	0x65, 0x61, 0x6b, 0x79, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43,
	0x6d, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x6b, 0x79, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x11, 0x6c, 0x65, 0x61, 0x6b, 0x79, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x1a, 0x55, 0x0a, 0x0b, 0x4c, 0x65, 0x61, 0x6b, 0x79,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xb7,
	0x02, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x73, 0x12, 0x2f, 0x0a, 0x14, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x68,
	0x61, 0x72, 0x64, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x11, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x48, 0x61, 0x72, 0x64, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x12, 0x2f, 0x0a, 0x14, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f,
	0x73, 0x6f, 0x66, 0x74, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x11, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x53, 0x6f, 0x66, 0x74, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x18, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x22,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x1c, 0x74, 0x74, 0x6c, 0x5f,
	0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18,
	0x74, 0x74, 0x6c, 0x4d, 0x69, 0x6e, 0x52, 0x75, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xd7, 0x05, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x59,
	0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x32, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x10, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x59, 0x64,
	0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4e,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x56,
	0x0a, 0x17, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52,
	0x15, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x64, 0x65, 0x6d, 0x70, 0x6f,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x69, 0x64, 0x65, 0x6d, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4b, 0x65, 0x79, 0x12,
	0x40, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43,
	0x6d, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x73, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x42, 0x10, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x6b, 0x69,
	0x6e, 0x64, 0x22, 0x51, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x4a, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x54, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xaf, 0x06, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x48, 0x00, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x19, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x48, 0x00, 0x52, 0x17, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x14,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x59, 0x64, 0x62,
	0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x43, 0x0a, 0x13, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x59,
	0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x52, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x14, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x17,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x15, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x22, 0x6f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12,
	0x15, 0x0a, 0x11, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x53, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x55, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x42, 0x10, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0xda, 0x07, 0x0a, 0x14, 0x41, 0x6c,
	0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x58, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x5f, 0x74, 0x6f,
	0x5f, 0x61, 0x64, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x59, 0x64, 0x62,
	0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x17, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x41, 0x64, 0x64,
	0x12, 0x5e, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d,
	0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x55,
	0x6e, 0x69, 0x74, 0x73, 0x52, 0x1a, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x12, 0x46, 0x0a, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74,
	0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x6e,
	0x69, 0x74, 0x73, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x12, 0x6a, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x5f,
	0x74, 0x6f, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x1c, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x6e, 0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x64,
	0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x55, 0x6e, 0x69, 0x74, 0x52, 0x1e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x54, 0x6f, 0x44, 0x65, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52,
	0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x56, 0x0a, 0x17, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x73, 0x52, 0x15, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x64, 0x65, 0x6d,
	0x70, 0x6f, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x69, 0x64, 0x65, 0x6d, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4b, 0x65,
	0x79, 0x12, 0x40, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x71, 0x75,
	0x6f, 0x74, 0x61, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x59, 0x64, 0x62,
	0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x73, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x73, 0x12, 0x5d, 0x0a, 0x10, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0f, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x1a, 0x42, 0x0a, 0x14, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x50, 0x0a, 0x15, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4a, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x59, 0x64, 0x62,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x50, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2b,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x22, 0x77, 0x0a, 0x15, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x4a, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x22, 0x51, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xac, 0x01, 0x0a, 0x16, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x43, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb6, 0x01, 0x0a, 0x1b, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x59, 0x64, 0x62,
	0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xf6, 0x01, 0x0a, 0x1c, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x55, 0x6e, 0x69, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x49, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x3c, 0x0a, 0x1a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x18, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x1a, 0x39, 0x0a,
	0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6c, 0x0a, 0x1e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x5a, 0x0a, 0x1f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x59,
	0x64, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x92, 0x02, 0x0a, 0x1d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x44, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x59, 0x64,
	0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x53, 0x0a, 0x12, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x59, 0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73,
	0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5a, 0x6f, 0x6e,
	0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x12,
	0x56, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x59,
	0x64, 0x62, 0x2e, 0x43, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x42, 0x4f, 0x0a, 0x12, 0x74, 0x65, 0x63, 0x68, 0x2e,
	0x79, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6d, 0x73, 0x5a, 0x36, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x79, 0x64, 0x62, 0x2d, 0x67, 0x6f, 0x2d, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x59, 0x64,
	0x62, 0x5f, 0x43, 0x6d, 0x73, 0xf8, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_ydb_cms_proto_rawDescOnce sync.Once
	file_protos_ydb_cms_proto_rawDescData = file_protos_ydb_cms_proto_rawDesc
)

func file_protos_ydb_cms_proto_rawDescGZIP() []byte {
	file_protos_ydb_cms_proto_rawDescOnce.Do(func() {
		file_protos_ydb_cms_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_ydb_cms_proto_rawDescData)
	})
	return file_protos_ydb_cms_proto_rawDescData
}

var file_protos_ydb_cms_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_ydb_cms_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_protos_ydb_cms_proto_goTypes = []interface{}{
	(GetDatabaseStatusResult_State)(0),        // 0: Ydb.Cms.GetDatabaseStatusResult.State
	(*StorageUnits)(nil),                      // 1: Ydb.Cms.StorageUnits
	(*ComputationalUnits)(nil),                // 2: Ydb.Cms.ComputationalUnits
	(*AllocatedComputationalUnit)(nil),        // 3: Ydb.Cms.AllocatedComputationalUnit
	(*Resources)(nil),                         // 4: Ydb.Cms.Resources
	(*ServerlessResources)(nil),               // 5: Ydb.Cms.ServerlessResources
	(*DatabaseOptions)(nil),                   // 6: Ydb.Cms.DatabaseOptions
	(*SchemaOperationQuotas)(nil),             // 7: Ydb.Cms.SchemaOperationQuotas
	(*DatabaseQuotas)(nil),                    // 8: Ydb.Cms.DatabaseQuotas
	(*CreateDatabaseRequest)(nil),             // 9: Ydb.Cms.CreateDatabaseRequest
	(*CreateDatabaseResponse)(nil),            // 10: Ydb.Cms.CreateDatabaseResponse
	(*GetDatabaseStatusRequest)(nil),          // 11: Ydb.Cms.GetDatabaseStatusRequest
	(*GetDatabaseStatusResponse)(nil),         // 12: Ydb.Cms.GetDatabaseStatusResponse
	(*GetDatabaseStatusResult)(nil),           // 13: Ydb.Cms.GetDatabaseStatusResult
	(*AlterDatabaseRequest)(nil),              // 14: Ydb.Cms.AlterDatabaseRequest
	(*AlterDatabaseResponse)(nil),             // 15: Ydb.Cms.AlterDatabaseResponse
	(*ListDatabasesRequest)(nil),              // 16: Ydb.Cms.ListDatabasesRequest
	(*ListDatabasesResponse)(nil),             // 17: Ydb.Cms.ListDatabasesResponse
	(*ListDatabasesResult)(nil),               // 18: Ydb.Cms.ListDatabasesResult
	(*RemoveDatabaseRequest)(nil),             // 19: Ydb.Cms.RemoveDatabaseRequest
	(*RemoveDatabaseResponse)(nil),            // 20: Ydb.Cms.RemoveDatabaseResponse
	(*StorageUnitDescription)(nil),            // 21: Ydb.Cms.StorageUnitDescription
	(*AvailabilityZoneDescription)(nil),       // 22: Ydb.Cms.AvailabilityZoneDescription
	(*ComputationalUnitDescription)(nil),      // 23: Ydb.Cms.ComputationalUnitDescription
	(*DescribeDatabaseOptionsRequest)(nil),    // 24: Ydb.Cms.DescribeDatabaseOptionsRequest
	(*DescribeDatabaseOptionsResponse)(nil),   // 25: Ydb.Cms.DescribeDatabaseOptionsResponse
	(*DescribeDatabaseOptionsResult)(nil),     // 26: Ydb.Cms.DescribeDatabaseOptionsResult
	(*SchemaOperationQuotas_LeakyBucket)(nil), // 27: Ydb.Cms.SchemaOperationQuotas.LeakyBucket
	nil,                                    // 28: Ydb.Cms.CreateDatabaseRequest.AttributesEntry
	nil,                                    // 29: Ydb.Cms.AlterDatabaseRequest.AlterAttributesEntry
	nil,                                    // 30: Ydb.Cms.StorageUnitDescription.LabelsEntry
	nil,                                    // 31: Ydb.Cms.AvailabilityZoneDescription.LabelsEntry
	nil,                                    // 32: Ydb.Cms.ComputationalUnitDescription.LabelsEntry
	(*Ydb_Operations.OperationParams)(nil), // 33: Ydb.Operations.OperationParams
	(*Ydb_Operations.Operation)(nil),       // 34: Ydb.Operations.Operation
}
var file_protos_ydb_cms_proto_depIdxs = []int32{
	1,  // 0: Ydb.Cms.Resources.storage_units:type_name -> Ydb.Cms.StorageUnits
	2,  // 1: Ydb.Cms.Resources.computational_units:type_name -> Ydb.Cms.ComputationalUnits
	27, // 2: Ydb.Cms.SchemaOperationQuotas.leaky_bucket_quotas:type_name -> Ydb.Cms.SchemaOperationQuotas.LeakyBucket
	33, // 3: Ydb.Cms.CreateDatabaseRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	4,  // 4: Ydb.Cms.CreateDatabaseRequest.resources:type_name -> Ydb.Cms.Resources
	4,  // 5: Ydb.Cms.CreateDatabaseRequest.shared_resources:type_name -> Ydb.Cms.Resources
	5,  // 6: Ydb.Cms.CreateDatabaseRequest.serverless_resources:type_name -> Ydb.Cms.ServerlessResources
	6,  // 7: Ydb.Cms.CreateDatabaseRequest.options:type_name -> Ydb.Cms.DatabaseOptions
	28, // 8: Ydb.Cms.CreateDatabaseRequest.attributes:type_name -> Ydb.Cms.CreateDatabaseRequest.AttributesEntry
	7,  // 9: Ydb.Cms.CreateDatabaseRequest.schema_operation_quotas:type_name -> Ydb.Cms.SchemaOperationQuotas
	8,  // 10: Ydb.Cms.CreateDatabaseRequest.database_quotas:type_name -> Ydb.Cms.DatabaseQuotas
	34, // 11: Ydb.Cms.CreateDatabaseResponse.operation:type_name -> Ydb.Operations.Operation
	33, // 12: Ydb.Cms.GetDatabaseStatusRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	34, // 13: Ydb.Cms.GetDatabaseStatusResponse.operation:type_name -> Ydb.Operations.Operation
	0,  // 14: Ydb.Cms.GetDatabaseStatusResult.state:type_name -> Ydb.Cms.GetDatabaseStatusResult.State
	4,  // 15: Ydb.Cms.GetDatabaseStatusResult.required_resources:type_name -> Ydb.Cms.Resources
	4,  // 16: Ydb.Cms.GetDatabaseStatusResult.required_shared_resources:type_name -> Ydb.Cms.Resources
	5,  // 17: Ydb.Cms.GetDatabaseStatusResult.serverless_resources:type_name -> Ydb.Cms.ServerlessResources
	4,  // 18: Ydb.Cms.GetDatabaseStatusResult.allocated_resources:type_name -> Ydb.Cms.Resources
	3,  // 19: Ydb.Cms.GetDatabaseStatusResult.registered_resources:type_name -> Ydb.Cms.AllocatedComputationalUnit
	7,  // 20: Ydb.Cms.GetDatabaseStatusResult.schema_operation_quotas:type_name -> Ydb.Cms.SchemaOperationQuotas
	8,  // 21: Ydb.Cms.GetDatabaseStatusResult.database_quotas:type_name -> Ydb.Cms.DatabaseQuotas
	2,  // 22: Ydb.Cms.AlterDatabaseRequest.computational_units_to_add:type_name -> Ydb.Cms.ComputationalUnits
	2,  // 23: Ydb.Cms.AlterDatabaseRequest.computational_units_to_remove:type_name -> Ydb.Cms.ComputationalUnits
	1,  // 24: Ydb.Cms.AlterDatabaseRequest.storage_units_to_add:type_name -> Ydb.Cms.StorageUnits
	3,  // 25: Ydb.Cms.AlterDatabaseRequest.computational_units_to_register:type_name -> Ydb.Cms.AllocatedComputationalUnit
	3,  // 26: Ydb.Cms.AlterDatabaseRequest.computational_units_to_deregister:type_name -> Ydb.Cms.AllocatedComputationalUnit
	33, // 27: Ydb.Cms.AlterDatabaseRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	7,  // 28: Ydb.Cms.AlterDatabaseRequest.schema_operation_quotas:type_name -> Ydb.Cms.SchemaOperationQuotas
	8,  // 29: Ydb.Cms.AlterDatabaseRequest.database_quotas:type_name -> Ydb.Cms.DatabaseQuotas
	29, // 30: Ydb.Cms.AlterDatabaseRequest.alter_attributes:type_name -> Ydb.Cms.AlterDatabaseRequest.AlterAttributesEntry
	34, // 31: Ydb.Cms.AlterDatabaseResponse.operation:type_name -> Ydb.Operations.Operation
	33, // 32: Ydb.Cms.ListDatabasesRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	34, // 33: Ydb.Cms.ListDatabasesResponse.operation:type_name -> Ydb.Operations.Operation
	33, // 34: Ydb.Cms.RemoveDatabaseRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	34, // 35: Ydb.Cms.RemoveDatabaseResponse.operation:type_name -> Ydb.Operations.Operation
	30, // 36: Ydb.Cms.StorageUnitDescription.labels:type_name -> Ydb.Cms.StorageUnitDescription.LabelsEntry
	31, // 37: Ydb.Cms.AvailabilityZoneDescription.labels:type_name -> Ydb.Cms.AvailabilityZoneDescription.LabelsEntry
	32, // 38: Ydb.Cms.ComputationalUnitDescription.labels:type_name -> Ydb.Cms.ComputationalUnitDescription.LabelsEntry
	33, // 39: Ydb.Cms.DescribeDatabaseOptionsRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	34, // 40: Ydb.Cms.DescribeDatabaseOptionsResponse.operation:type_name -> Ydb.Operations.Operation
	21, // 41: Ydb.Cms.DescribeDatabaseOptionsResult.storage_units:type_name -> Ydb.Cms.StorageUnitDescription
	22, // 42: Ydb.Cms.DescribeDatabaseOptionsResult.availability_zones:type_name -> Ydb.Cms.AvailabilityZoneDescription
	23, // 43: Ydb.Cms.DescribeDatabaseOptionsResult.computational_units:type_name -> Ydb.Cms.ComputationalUnitDescription
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_protos_ydb_cms_proto_init() }
func file_protos_ydb_cms_proto_init() {
	if File_protos_ydb_cms_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_ydb_cms_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageUnits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputationalUnits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocatedComputationalUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerlessResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchemaOperationQuotas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseQuotas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDatabaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDatabaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDatabaseStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDatabaseStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDatabaseStatusResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterDatabaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlterDatabaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDatabasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDatabasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDatabasesResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveDatabaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveDatabaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageUnitDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailabilityZoneDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputationalUnitDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeDatabaseOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeDatabaseOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeDatabaseOptionsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_ydb_cms_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchemaOperationQuotas_LeakyBucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_ydb_cms_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*CreateDatabaseRequest_Resources)(nil),
		(*CreateDatabaseRequest_SharedResources)(nil),
		(*CreateDatabaseRequest_ServerlessResources)(nil),
	}
	file_protos_ydb_cms_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*GetDatabaseStatusResult_RequiredResources)(nil),
		(*GetDatabaseStatusResult_RequiredSharedResources)(nil),
		(*GetDatabaseStatusResult_ServerlessResources)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_ydb_cms_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_ydb_cms_proto_goTypes,
		DependencyIndexes: file_protos_ydb_cms_proto_depIdxs,
		EnumInfos:         file_protos_ydb_cms_proto_enumTypes,
		MessageInfos:      file_protos_ydb_cms_proto_msgTypes,
	}.Build()
	File_protos_ydb_cms_proto = out.File
	file_protos_ydb_cms_proto_rawDesc = nil
	file_protos_ydb_cms_proto_goTypes = nil
	file_protos_ydb_cms_proto_depIdxs = nil
}
