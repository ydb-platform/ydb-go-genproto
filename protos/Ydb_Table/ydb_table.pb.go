// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.1
// source: protos/ydb_table.proto

package Ydb_Table

import (
	Ydb "github.com/ydb-platform/ydb-go-genproto/protos/Ydb"
	Ydb_Formats "github.com/ydb-platform/ydb-go-genproto/protos/Ydb_Formats"
	Ydb_Issue "github.com/ydb-platform/ydb-go-genproto/protos/Ydb_Issue"
	Ydb_Operations "github.com/ydb-platform/ydb-go-genproto/protos/Ydb_Operations"
	Ydb_Scheme "github.com/ydb-platform/ydb-go-genproto/protos/Ydb_Scheme"
	Ydb_TableStats "github.com/ydb-platform/ydb-go-genproto/protos/Ydb_TableStats"
	Ydb_Topic "github.com/ydb-platform/ydb-go-genproto/protos/Ydb_Topic"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StoreType int32

const (
	StoreType_STORE_TYPE_UNSPECIFIED StoreType = 0
	StoreType_STORE_TYPE_ROW         StoreType = 1
	StoreType_STORE_TYPE_COLUMN      StoreType = 2
)

// Enum value maps for StoreType.
var (
	StoreType_name = map[int32]string{
		0: "STORE_TYPE_UNSPECIFIED",
		1: "STORE_TYPE_ROW",
		2: "STORE_TYPE_COLUMN",
	}
	StoreType_value = map[string]int32{
		"STORE_TYPE_UNSPECIFIED": 0,
		"STORE_TYPE_ROW":         1,
		"STORE_TYPE_COLUMN":      2,
	}
)

func (x StoreType) Enum() *StoreType {
	p := new(StoreType)
	*p = x
	return p
}

func (x StoreType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StoreType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_table_proto_enumTypes[0].Descriptor()
}

func (StoreType) Type() protoreflect.EnumType {
	return &file_protos_ydb_table_proto_enumTypes[0]
}

func (x StoreType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type TableIndexDescription_Status int32

const (
	TableIndexDescription_STATUS_UNSPECIFIED TableIndexDescription_Status = 0
	// Index is ready to use
	TableIndexDescription_STATUS_READY TableIndexDescription_Status = 1
	// index is being built
	TableIndexDescription_STATUS_BUILDING TableIndexDescription_Status = 2
)

// Enum value maps for TableIndexDescription_Status.
var (
	TableIndexDescription_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_READY",
		2: "STATUS_BUILDING",
	}
	TableIndexDescription_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_READY":       1,
		"STATUS_BUILDING":    2,
	}
)

func (x TableIndexDescription_Status) Enum() *TableIndexDescription_Status {
	p := new(TableIndexDescription_Status)
	*p = x
	return p
}

func (x TableIndexDescription_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TableIndexDescription_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_table_proto_enumTypes[1].Descriptor()
}

func (TableIndexDescription_Status) Type() protoreflect.EnumType {
	return &file_protos_ydb_table_proto_enumTypes[1]
}

func (x TableIndexDescription_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type IndexBuildState_State int32

const (
	IndexBuildState_STATE_UNSPECIFIED      IndexBuildState_State = 0
	IndexBuildState_STATE_PREPARING        IndexBuildState_State = 1
	IndexBuildState_STATE_TRANSFERING_DATA IndexBuildState_State = 2
	IndexBuildState_STATE_APPLYING         IndexBuildState_State = 3
	IndexBuildState_STATE_DONE             IndexBuildState_State = 4
	IndexBuildState_STATE_CANCELLATION     IndexBuildState_State = 5
	IndexBuildState_STATE_CANCELLED        IndexBuildState_State = 6
	IndexBuildState_STATE_REJECTION        IndexBuildState_State = 7
	IndexBuildState_STATE_REJECTED         IndexBuildState_State = 8
)

// Enum value maps for IndexBuildState_State.
var (
	IndexBuildState_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "STATE_PREPARING",
		2: "STATE_TRANSFERING_DATA",
		3: "STATE_APPLYING",
		4: "STATE_DONE",
		5: "STATE_CANCELLATION",
		6: "STATE_CANCELLED",
		7: "STATE_REJECTION",
		8: "STATE_REJECTED",
	}
	IndexBuildState_State_value = map[string]int32{
		"STATE_UNSPECIFIED":      0,
		"STATE_PREPARING":        1,
		"STATE_TRANSFERING_DATA": 2,
		"STATE_APPLYING":         3,
		"STATE_DONE":             4,
		"STATE_CANCELLATION":     5,
		"STATE_CANCELLED":        6,
		"STATE_REJECTION":        7,
		"STATE_REJECTED":         8,
	}
)

func (x IndexBuildState_State) Enum() *IndexBuildState_State {
	p := new(IndexBuildState_State)
	*p = x
	return p
}

func (x IndexBuildState_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexBuildState_State) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_table_proto_enumTypes[2].Descriptor()
}

func (IndexBuildState_State) Type() protoreflect.EnumType {
	return &file_protos_ydb_table_proto_enumTypes[2]
}

func (x IndexBuildState_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ChangefeedMode_Mode int32

const (
	ChangefeedMode_MODE_UNSPECIFIED ChangefeedMode_Mode = 0
	// Only the key component of the modified row
	ChangefeedMode_MODE_KEYS_ONLY ChangefeedMode_Mode = 1
	// Updated columns
	ChangefeedMode_MODE_UPDATES ChangefeedMode_Mode = 2
	// The entire row, as it appears after it was modified
	ChangefeedMode_MODE_NEW_IMAGE ChangefeedMode_Mode = 3
	// The entire row, as it appeared before it was modified
	ChangefeedMode_MODE_OLD_IMAGE ChangefeedMode_Mode = 4
	// Both new and old images of the row
	ChangefeedMode_MODE_NEW_AND_OLD_IMAGES ChangefeedMode_Mode = 5
)

// Enum value maps for ChangefeedMode_Mode.
var (
	ChangefeedMode_Mode_name = map[int32]string{
		0: "MODE_UNSPECIFIED",
		1: "MODE_KEYS_ONLY",
		2: "MODE_UPDATES",
		3: "MODE_NEW_IMAGE",
		4: "MODE_OLD_IMAGE",
		5: "MODE_NEW_AND_OLD_IMAGES",
	}
	ChangefeedMode_Mode_value = map[string]int32{
		"MODE_UNSPECIFIED":        0,
		"MODE_KEYS_ONLY":          1,
		"MODE_UPDATES":            2,
		"MODE_NEW_IMAGE":          3,
		"MODE_OLD_IMAGE":          4,
		"MODE_NEW_AND_OLD_IMAGES": 5,
	}
)

func (x ChangefeedMode_Mode) Enum() *ChangefeedMode_Mode {
	p := new(ChangefeedMode_Mode)
	*p = x
	return p
}

func (x ChangefeedMode_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangefeedMode_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_table_proto_enumTypes[3].Descriptor()
}

func (ChangefeedMode_Mode) Type() protoreflect.EnumType {
	return &file_protos_ydb_table_proto_enumTypes[3]
}

func (x ChangefeedMode_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ChangefeedFormat_Format int32

const (
	ChangefeedFormat_FORMAT_UNSPECIFIED ChangefeedFormat_Format = 0
	// Change record in JSON format for common (row oriented) tables
	ChangefeedFormat_FORMAT_JSON ChangefeedFormat_Format = 1
	// Change record in JSON format for document (DynamoDB-compatible) tables
	ChangefeedFormat_FORMAT_DYNAMODB_STREAMS_JSON ChangefeedFormat_Format = 2
	// Debezium-like change record JSON format for common (row oriented) tables
	ChangefeedFormat_FORMAT_DEBEZIUM_JSON ChangefeedFormat_Format = 3
)

// Enum value maps for ChangefeedFormat_Format.
var (
	ChangefeedFormat_Format_name = map[int32]string{
		0: "FORMAT_UNSPECIFIED",
		1: "FORMAT_JSON",
		2: "FORMAT_DYNAMODB_STREAMS_JSON",
		3: "FORMAT_DEBEZIUM_JSON",
	}
	ChangefeedFormat_Format_value = map[string]int32{
		"FORMAT_UNSPECIFIED":           0,
		"FORMAT_JSON":                  1,
		"FORMAT_DYNAMODB_STREAMS_JSON": 2,
		"FORMAT_DEBEZIUM_JSON":         3,
	}
)

func (x ChangefeedFormat_Format) Enum() *ChangefeedFormat_Format {
	p := new(ChangefeedFormat_Format)
	*p = x
	return p
}

func (x ChangefeedFormat_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangefeedFormat_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_table_proto_enumTypes[4].Descriptor()
}

func (ChangefeedFormat_Format) Type() protoreflect.EnumType {
	return &file_protos_ydb_table_proto_enumTypes[4]
}

func (x ChangefeedFormat_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ChangefeedDescription_State int32

const (
	ChangefeedDescription_STATE_UNSPECIFIED ChangefeedDescription_State = 0
	// Normal state, from this state changefeed can be disabled
	ChangefeedDescription_STATE_ENABLED ChangefeedDescription_State = 1
	// No new change records are generated, but the old ones remain available
	// From this state changefeed cannot be switched to any other state
	ChangefeedDescription_STATE_DISABLED ChangefeedDescription_State = 2
	// An initial scan is being performed.
	// After its completion changefeed will switch to the normal state
	ChangefeedDescription_STATE_INITIAL_SCAN ChangefeedDescription_State = 3
)

// Enum value maps for ChangefeedDescription_State.
var (
	ChangefeedDescription_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "STATE_ENABLED",
		2: "STATE_DISABLED",
		3: "STATE_INITIAL_SCAN",
	}
	ChangefeedDescription_State_value = map[string]int32{
		"STATE_UNSPECIFIED":  0,
		"STATE_ENABLED":      1,
		"STATE_DISABLED":     2,
		"STATE_INITIAL_SCAN": 3,
	}
)

func (x ChangefeedDescription_State) Enum() *ChangefeedDescription_State {
	p := new(ChangefeedDescription_State)
	*p = x
	return p
}

func (x ChangefeedDescription_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangefeedDescription_State) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_table_proto_enumTypes[5].Descriptor()
}

func (ChangefeedDescription_State) Type() protoreflect.EnumType {
	return &file_protos_ydb_table_proto_enumTypes[5]
}

func (x ChangefeedDescription_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ColumnFamilyPolicy_Compression int32

const (
	ColumnFamilyPolicy_COMPRESSION_UNSPECIFIED ColumnFamilyPolicy_Compression = 0
	ColumnFamilyPolicy_UNCOMPRESSED            ColumnFamilyPolicy_Compression = 1
	ColumnFamilyPolicy_COMPRESSED              ColumnFamilyPolicy_Compression = 2
)

// Enum value maps for ColumnFamilyPolicy_Compression.
var (
	ColumnFamilyPolicy_Compression_name = map[int32]string{
		0: "COMPRESSION_UNSPECIFIED",
		1: "UNCOMPRESSED",
		2: "COMPRESSED",
	}
	ColumnFamilyPolicy_Compression_value = map[string]int32{
		"COMPRESSION_UNSPECIFIED": 0,
		"UNCOMPRESSED":            1,
		"COMPRESSED":              2,
	}
)

func (x ColumnFamilyPolicy_Compression) Enum() *ColumnFamilyPolicy_Compression {
	p := new(ColumnFamilyPolicy_Compression)
	*p = x
	return p
}

func (x ColumnFamilyPolicy_Compression) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ColumnFamilyPolicy_Compression) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_table_proto_enumTypes[6].Descriptor()
}

func (ColumnFamilyPolicy_Compression) Type() protoreflect.EnumType {
	return &file_protos_ydb_table_proto_enumTypes[6]
}

func (x ColumnFamilyPolicy_Compression) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type PartitioningPolicy_AutoPartitioningPolicy int32

const (
	PartitioningPolicy_AUTO_PARTITIONING_POLICY_UNSPECIFIED PartitioningPolicy_AutoPartitioningPolicy = 0
	PartitioningPolicy_DISABLED                             PartitioningPolicy_AutoPartitioningPolicy = 1
	PartitioningPolicy_AUTO_SPLIT                           PartitioningPolicy_AutoPartitioningPolicy = 2
	PartitioningPolicy_AUTO_SPLIT_MERGE                     PartitioningPolicy_AutoPartitioningPolicy = 3
)

// Enum value maps for PartitioningPolicy_AutoPartitioningPolicy.
var (
	PartitioningPolicy_AutoPartitioningPolicy_name = map[int32]string{
		0: "AUTO_PARTITIONING_POLICY_UNSPECIFIED",
		1: "DISABLED",
		2: "AUTO_SPLIT",
		3: "AUTO_SPLIT_MERGE",
	}
	PartitioningPolicy_AutoPartitioningPolicy_value = map[string]int32{
		"AUTO_PARTITIONING_POLICY_UNSPECIFIED": 0,
		"DISABLED":                             1,
		"AUTO_SPLIT":                           2,
		"AUTO_SPLIT_MERGE":                     3,
	}
)

func (x PartitioningPolicy_AutoPartitioningPolicy) Enum() *PartitioningPolicy_AutoPartitioningPolicy {
	p := new(PartitioningPolicy_AutoPartitioningPolicy)
	*p = x
	return p
}

func (x PartitioningPolicy_AutoPartitioningPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PartitioningPolicy_AutoPartitioningPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_table_proto_enumTypes[7].Descriptor()
}

func (PartitioningPolicy_AutoPartitioningPolicy) Type() protoreflect.EnumType {
	return &file_protos_ydb_table_proto_enumTypes[7]
}

func (x PartitioningPolicy_AutoPartitioningPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ValueSinceUnixEpochModeSettings_Unit int32

const (
	ValueSinceUnixEpochModeSettings_UNIT_UNSPECIFIED  ValueSinceUnixEpochModeSettings_Unit = 0
	ValueSinceUnixEpochModeSettings_UNIT_SECONDS      ValueSinceUnixEpochModeSettings_Unit = 1
	ValueSinceUnixEpochModeSettings_UNIT_MILLISECONDS ValueSinceUnixEpochModeSettings_Unit = 2
	ValueSinceUnixEpochModeSettings_UNIT_MICROSECONDS ValueSinceUnixEpochModeSettings_Unit = 3
	ValueSinceUnixEpochModeSettings_UNIT_NANOSECONDS  ValueSinceUnixEpochModeSettings_Unit = 4
)

// Enum value maps for ValueSinceUnixEpochModeSettings_Unit.
var (
	ValueSinceUnixEpochModeSettings_Unit_name = map[int32]string{
		0: "UNIT_UNSPECIFIED",
		1: "UNIT_SECONDS",
		2: "UNIT_MILLISECONDS",
		3: "UNIT_MICROSECONDS",
		4: "UNIT_NANOSECONDS",
	}
	ValueSinceUnixEpochModeSettings_Unit_value = map[string]int32{
		"UNIT_UNSPECIFIED":  0,
		"UNIT_SECONDS":      1,
		"UNIT_MILLISECONDS": 2,
		"UNIT_MICROSECONDS": 3,
		"UNIT_NANOSECONDS":  4,
	}
)

func (x ValueSinceUnixEpochModeSettings_Unit) Enum() *ValueSinceUnixEpochModeSettings_Unit {
	p := new(ValueSinceUnixEpochModeSettings_Unit)
	*p = x
	return p
}

func (x ValueSinceUnixEpochModeSettings_Unit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValueSinceUnixEpochModeSettings_Unit) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_table_proto_enumTypes[8].Descriptor()
}

func (ValueSinceUnixEpochModeSettings_Unit) Type() protoreflect.EnumType {
	return &file_protos_ydb_table_proto_enumTypes[8]
}

func (x ValueSinceUnixEpochModeSettings_Unit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ColumnFamily_Compression int32

const (
	ColumnFamily_COMPRESSION_UNSPECIFIED ColumnFamily_Compression = 0
	ColumnFamily_COMPRESSION_NONE        ColumnFamily_Compression = 1
	ColumnFamily_COMPRESSION_LZ4         ColumnFamily_Compression = 2
)

// Enum value maps for ColumnFamily_Compression.
var (
	ColumnFamily_Compression_name = map[int32]string{
		0: "COMPRESSION_UNSPECIFIED",
		1: "COMPRESSION_NONE",
		2: "COMPRESSION_LZ4",
	}
	ColumnFamily_Compression_value = map[string]int32{
		"COMPRESSION_UNSPECIFIED": 0,
		"COMPRESSION_NONE":        1,
		"COMPRESSION_LZ4":         2,
	}
)

func (x ColumnFamily_Compression) Enum() *ColumnFamily_Compression {
	p := new(ColumnFamily_Compression)
	*p = x
	return p
}

func (x ColumnFamily_Compression) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ColumnFamily_Compression) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_table_proto_enumTypes[9].Descriptor()
}

func (ColumnFamily_Compression) Type() protoreflect.EnumType {
	return &file_protos_ydb_table_proto_enumTypes[9]
}

func (x ColumnFamily_Compression) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type QueryStatsCollection_Mode int32

const (
	QueryStatsCollection_STATS_COLLECTION_UNSPECIFIED QueryStatsCollection_Mode = 0
	QueryStatsCollection_STATS_COLLECTION_NONE        QueryStatsCollection_Mode = 1 // Stats collection is disabled
	QueryStatsCollection_STATS_COLLECTION_BASIC       QueryStatsCollection_Mode = 2 // Aggregated stats of reads, updates and deletes per table
	QueryStatsCollection_STATS_COLLECTION_FULL        QueryStatsCollection_Mode = 3 // Add execution stats and plan on top of STATS_COLLECTION_BASIC
	QueryStatsCollection_STATS_COLLECTION_PROFILE     QueryStatsCollection_Mode = 4 // Detailed execution stats including stats for individual tasks and channels
)

// Enum value maps for QueryStatsCollection_Mode.
var (
	QueryStatsCollection_Mode_name = map[int32]string{
		0: "STATS_COLLECTION_UNSPECIFIED",
		1: "STATS_COLLECTION_NONE",
		2: "STATS_COLLECTION_BASIC",
		3: "STATS_COLLECTION_FULL",
		4: "STATS_COLLECTION_PROFILE",
	}
	QueryStatsCollection_Mode_value = map[string]int32{
		"STATS_COLLECTION_UNSPECIFIED": 0,
		"STATS_COLLECTION_NONE":        1,
		"STATS_COLLECTION_BASIC":       2,
		"STATS_COLLECTION_FULL":        3,
		"STATS_COLLECTION_PROFILE":     4,
	}
)

func (x QueryStatsCollection_Mode) Enum() *QueryStatsCollection_Mode {
	p := new(QueryStatsCollection_Mode)
	*p = x
	return p
}

func (x QueryStatsCollection_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryStatsCollection_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_table_proto_enumTypes[10].Descriptor()
}

func (QueryStatsCollection_Mode) Type() protoreflect.EnumType {
	return &file_protos_ydb_table_proto_enumTypes[10]
}

func (x QueryStatsCollection_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type KeepAliveResult_SessionStatus int32

const (
	KeepAliveResult_SESSION_STATUS_UNSPECIFIED KeepAliveResult_SessionStatus = 0
	KeepAliveResult_SESSION_STATUS_READY       KeepAliveResult_SessionStatus = 1
	KeepAliveResult_SESSION_STATUS_BUSY        KeepAliveResult_SessionStatus = 2
)

// Enum value maps for KeepAliveResult_SessionStatus.
var (
	KeepAliveResult_SessionStatus_name = map[int32]string{
		0: "SESSION_STATUS_UNSPECIFIED",
		1: "SESSION_STATUS_READY",
		2: "SESSION_STATUS_BUSY",
	}
	KeepAliveResult_SessionStatus_value = map[string]int32{
		"SESSION_STATUS_UNSPECIFIED": 0,
		"SESSION_STATUS_READY":       1,
		"SESSION_STATUS_BUSY":        2,
	}
)

func (x KeepAliveResult_SessionStatus) Enum() *KeepAliveResult_SessionStatus {
	p := new(KeepAliveResult_SessionStatus)
	*p = x
	return p
}

func (x KeepAliveResult_SessionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeepAliveResult_SessionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_table_proto_enumTypes[11].Descriptor()
}

func (KeepAliveResult_SessionStatus) Type() protoreflect.EnumType {
	return &file_protos_ydb_table_proto_enumTypes[11]
}

func (x KeepAliveResult_SessionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ExecuteScanQueryRequest_Mode int32

const (
	ExecuteScanQueryRequest_MODE_UNSPECIFIED ExecuteScanQueryRequest_Mode = 0
	ExecuteScanQueryRequest_MODE_EXPLAIN     ExecuteScanQueryRequest_Mode = 1
	// MODE_PREPARE = 2;
	ExecuteScanQueryRequest_MODE_EXEC ExecuteScanQueryRequest_Mode = 3
)

// Enum value maps for ExecuteScanQueryRequest_Mode.
var (
	ExecuteScanQueryRequest_Mode_name = map[int32]string{
		0: "MODE_UNSPECIFIED",
		1: "MODE_EXPLAIN",
		3: "MODE_EXEC",
	}
	ExecuteScanQueryRequest_Mode_value = map[string]int32{
		"MODE_UNSPECIFIED": 0,
		"MODE_EXPLAIN":     1,
		"MODE_EXEC":        3,
	}
)

func (x ExecuteScanQueryRequest_Mode) Enum() *ExecuteScanQueryRequest_Mode {
	p := new(ExecuteScanQueryRequest_Mode)
	*p = x
	return p
}

func (x ExecuteScanQueryRequest_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecuteScanQueryRequest_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_table_proto_enumTypes[12].Descriptor()
}

func (ExecuteScanQueryRequest_Mode) Type() protoreflect.EnumType {
	return &file_protos_ydb_table_proto_enumTypes[12]
}

func (x ExecuteScanQueryRequest_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Create new session
type CreateSessionRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateSessionRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *CreateSessionRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *CreateSessionRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *CreateSessionRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

type CreateSessionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
}

func (b0 CreateSessionRequest_builder) Build() *CreateSessionRequest {
	m0 := &CreateSessionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_OperationParams = b.OperationParams
	return m0
}

// Create new session
type CreateSessionResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CreateSessionResponse) Reset() {
	*x = CreateSessionResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResponse) ProtoMessage() {}

func (x *CreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateSessionResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *CreateSessionResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *CreateSessionResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *CreateSessionResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type CreateSessionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Holds CreateSessionResult in case of CreateSessionResult
	Operation *Ydb_Operations.Operation
}

func (b0 CreateSessionResponse_builder) Build() *CreateSessionResponse {
	m0 := &CreateSessionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type CreateSessionResult struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SessionId string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CreateSessionResult) Reset() {
	*x = CreateSessionResult{}
	mi := &file_protos_ydb_table_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResult) ProtoMessage() {}

func (x *CreateSessionResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateSessionResult) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *CreateSessionResult) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

type CreateSessionResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier
	SessionId string
}

func (b0 CreateSessionResult_builder) Build() *CreateSessionResult {
	m0 := &CreateSessionResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	return m0
}

// Delete session with given id string
type DeleteSessionRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_SessionId       string                          `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,2,opt,name=operation_params,json=operationParams,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *DeleteSessionRequest) Reset() {
	*x = DeleteSessionRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionRequest) ProtoMessage() {}

func (x *DeleteSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteSessionRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *DeleteSessionRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *DeleteSessionRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *DeleteSessionRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *DeleteSessionRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *DeleteSessionRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

type DeleteSessionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier
	SessionId       string
	OperationParams *Ydb_Operations.OperationParams
}

func (b0 DeleteSessionRequest_builder) Build() *DeleteSessionRequest {
	m0 := &DeleteSessionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_OperationParams = b.OperationParams
	return m0
}

type DeleteSessionResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DeleteSessionResponse) Reset() {
	*x = DeleteSessionResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionResponse) ProtoMessage() {}

func (x *DeleteSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteSessionResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *DeleteSessionResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *DeleteSessionResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *DeleteSessionResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type DeleteSessionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 DeleteSessionResponse_builder) Build() *DeleteSessionResponse {
	m0 := &DeleteSessionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type GlobalIndex struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GlobalIndex) Reset() {
	*x = GlobalIndex{}
	mi := &file_protos_ydb_table_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalIndex) ProtoMessage() {}

func (x *GlobalIndex) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type GlobalIndex_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 GlobalIndex_builder) Build() *GlobalIndex {
	m0 := &GlobalIndex{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type GlobalAsyncIndex struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GlobalAsyncIndex) Reset() {
	*x = GlobalAsyncIndex{}
	mi := &file_protos_ydb_table_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalAsyncIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalAsyncIndex) ProtoMessage() {}

func (x *GlobalAsyncIndex) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type GlobalAsyncIndex_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 GlobalAsyncIndex_builder) Build() *GlobalAsyncIndex {
	m0 := &GlobalAsyncIndex{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type GlobalUniqueIndex struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GlobalUniqueIndex) Reset() {
	*x = GlobalUniqueIndex{}
	mi := &file_protos_ydb_table_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalUniqueIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalUniqueIndex) ProtoMessage() {}

func (x *GlobalUniqueIndex) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type GlobalUniqueIndex_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 GlobalUniqueIndex_builder) Build() *GlobalUniqueIndex {
	m0 := &GlobalUniqueIndex{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

// Represent secondary index
type TableIndex struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name         string                 `protobuf:"bytes,1,opt,name=name,proto3"`
	xxx_hidden_IndexColumns []string               `protobuf:"bytes,2,rep,name=index_columns,json=indexColumns,proto3"`
	xxx_hidden_Type         isTableIndex_Type      `protobuf_oneof:"type"`
	xxx_hidden_DataColumns  []string               `protobuf:"bytes,5,rep,name=data_columns,json=dataColumns,proto3"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *TableIndex) Reset() {
	*x = TableIndex{}
	mi := &file_protos_ydb_table_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableIndex) ProtoMessage() {}

func (x *TableIndex) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TableIndex) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *TableIndex) GetIndexColumns() []string {
	if x != nil {
		return x.xxx_hidden_IndexColumns
	}
	return nil
}

func (x *TableIndex) GetGlobalIndex() *GlobalIndex {
	if x != nil {
		if x, ok := x.xxx_hidden_Type.(*tableIndex_GlobalIndex); ok {
			return x.GlobalIndex
		}
	}
	return nil
}

func (x *TableIndex) GetGlobalAsyncIndex() *GlobalAsyncIndex {
	if x != nil {
		if x, ok := x.xxx_hidden_Type.(*tableIndex_GlobalAsyncIndex); ok {
			return x.GlobalAsyncIndex
		}
	}
	return nil
}

func (x *TableIndex) GetGlobalUniqueIndex() *GlobalUniqueIndex {
	if x != nil {
		if x, ok := x.xxx_hidden_Type.(*tableIndex_GlobalUniqueIndex); ok {
			return x.GlobalUniqueIndex
		}
	}
	return nil
}

func (x *TableIndex) GetDataColumns() []string {
	if x != nil {
		return x.xxx_hidden_DataColumns
	}
	return nil
}

func (x *TableIndex) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *TableIndex) SetIndexColumns(v []string) {
	x.xxx_hidden_IndexColumns = v
}

func (x *TableIndex) SetGlobalIndex(v *GlobalIndex) {
	if v == nil {
		x.xxx_hidden_Type = nil
		return
	}
	x.xxx_hidden_Type = &tableIndex_GlobalIndex{v}
}

func (x *TableIndex) SetGlobalAsyncIndex(v *GlobalAsyncIndex) {
	if v == nil {
		x.xxx_hidden_Type = nil
		return
	}
	x.xxx_hidden_Type = &tableIndex_GlobalAsyncIndex{v}
}

func (x *TableIndex) SetGlobalUniqueIndex(v *GlobalUniqueIndex) {
	if v == nil {
		x.xxx_hidden_Type = nil
		return
	}
	x.xxx_hidden_Type = &tableIndex_GlobalUniqueIndex{v}
}

func (x *TableIndex) SetDataColumns(v []string) {
	x.xxx_hidden_DataColumns = v
}

func (x *TableIndex) HasType() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Type != nil
}

func (x *TableIndex) HasGlobalIndex() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Type.(*tableIndex_GlobalIndex)
	return ok
}

func (x *TableIndex) HasGlobalAsyncIndex() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Type.(*tableIndex_GlobalAsyncIndex)
	return ok
}

func (x *TableIndex) HasGlobalUniqueIndex() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Type.(*tableIndex_GlobalUniqueIndex)
	return ok
}

func (x *TableIndex) ClearType() {
	x.xxx_hidden_Type = nil
}

func (x *TableIndex) ClearGlobalIndex() {
	if _, ok := x.xxx_hidden_Type.(*tableIndex_GlobalIndex); ok {
		x.xxx_hidden_Type = nil
	}
}

func (x *TableIndex) ClearGlobalAsyncIndex() {
	if _, ok := x.xxx_hidden_Type.(*tableIndex_GlobalAsyncIndex); ok {
		x.xxx_hidden_Type = nil
	}
}

func (x *TableIndex) ClearGlobalUniqueIndex() {
	if _, ok := x.xxx_hidden_Type.(*tableIndex_GlobalUniqueIndex); ok {
		x.xxx_hidden_Type = nil
	}
}

const TableIndex_Type_not_set_case case_TableIndex_Type = 0
const TableIndex_GlobalIndex_case case_TableIndex_Type = 3
const TableIndex_GlobalAsyncIndex_case case_TableIndex_Type = 4
const TableIndex_GlobalUniqueIndex_case case_TableIndex_Type = 6

func (x *TableIndex) WhichType() case_TableIndex_Type {
	if x == nil {
		return TableIndex_Type_not_set_case
	}
	switch x.xxx_hidden_Type.(type) {
	case *tableIndex_GlobalIndex:
		return TableIndex_GlobalIndex_case
	case *tableIndex_GlobalAsyncIndex:
		return TableIndex_GlobalAsyncIndex_case
	case *tableIndex_GlobalUniqueIndex:
		return TableIndex_GlobalUniqueIndex_case
	default:
		return TableIndex_Type_not_set_case
	}
}

type TableIndex_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Name of index
	Name string
	// list of columns
	IndexColumns []string
	// Type of index

	// Fields of oneof xxx_hidden_Type:
	GlobalIndex       *GlobalIndex
	GlobalAsyncIndex  *GlobalAsyncIndex
	GlobalUniqueIndex *GlobalUniqueIndex
	// -- end of xxx_hidden_Type
	// list of columns content to be copied in to index table
	DataColumns []string
}

func (b0 TableIndex_builder) Build() *TableIndex {
	m0 := &TableIndex{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_IndexColumns = b.IndexColumns
	if b.GlobalIndex != nil {
		x.xxx_hidden_Type = &tableIndex_GlobalIndex{b.GlobalIndex}
	}
	if b.GlobalAsyncIndex != nil {
		x.xxx_hidden_Type = &tableIndex_GlobalAsyncIndex{b.GlobalAsyncIndex}
	}
	if b.GlobalUniqueIndex != nil {
		x.xxx_hidden_Type = &tableIndex_GlobalUniqueIndex{b.GlobalUniqueIndex}
	}
	x.xxx_hidden_DataColumns = b.DataColumns
	return m0
}

type case_TableIndex_Type protoreflect.FieldNumber

func (x case_TableIndex_Type) String() string {
	md := file_protos_ydb_table_proto_msgTypes[8].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isTableIndex_Type interface {
	isTableIndex_Type()
}

type tableIndex_GlobalIndex struct {
	GlobalIndex *GlobalIndex `protobuf:"bytes,3,opt,name=global_index,json=globalIndex,proto3,oneof"`
}

type tableIndex_GlobalAsyncIndex struct {
	GlobalAsyncIndex *GlobalAsyncIndex `protobuf:"bytes,4,opt,name=global_async_index,json=globalAsyncIndex,proto3,oneof"`
}

type tableIndex_GlobalUniqueIndex struct {
	GlobalUniqueIndex *GlobalUniqueIndex `protobuf:"bytes,6,opt,name=global_unique_index,json=globalUniqueIndex,proto3,oneof"`
}

func (*tableIndex_GlobalIndex) isTableIndex_Type() {}

func (*tableIndex_GlobalAsyncIndex) isTableIndex_Type() {}

func (*tableIndex_GlobalUniqueIndex) isTableIndex_Type() {}

// Represent secondary index with index state
type TableIndexDescription struct {
	state                   protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_Name         string                       `protobuf:"bytes,1,opt,name=name,proto3"`
	xxx_hidden_IndexColumns []string                     `protobuf:"bytes,2,rep,name=index_columns,json=indexColumns,proto3"`
	xxx_hidden_Type         isTableIndexDescription_Type `protobuf_oneof:"type"`
	xxx_hidden_Status       TableIndexDescription_Status `protobuf:"varint,4,opt,name=status,proto3,enum=Ydb.Table.TableIndexDescription_Status"`
	xxx_hidden_DataColumns  []string                     `protobuf:"bytes,6,rep,name=data_columns,json=dataColumns,proto3"`
	xxx_hidden_SizeBytes    uint64                       `protobuf:"varint,7,opt,name=size_bytes,json=sizeBytes,proto3"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *TableIndexDescription) Reset() {
	*x = TableIndexDescription{}
	mi := &file_protos_ydb_table_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableIndexDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableIndexDescription) ProtoMessage() {}

func (x *TableIndexDescription) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TableIndexDescription) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *TableIndexDescription) GetIndexColumns() []string {
	if x != nil {
		return x.xxx_hidden_IndexColumns
	}
	return nil
}

func (x *TableIndexDescription) GetGlobalIndex() *GlobalIndex {
	if x != nil {
		if x, ok := x.xxx_hidden_Type.(*tableIndexDescription_GlobalIndex); ok {
			return x.GlobalIndex
		}
	}
	return nil
}

func (x *TableIndexDescription) GetGlobalAsyncIndex() *GlobalAsyncIndex {
	if x != nil {
		if x, ok := x.xxx_hidden_Type.(*tableIndexDescription_GlobalAsyncIndex); ok {
			return x.GlobalAsyncIndex
		}
	}
	return nil
}

func (x *TableIndexDescription) GetGlobalUniqueIndex() *GlobalUniqueIndex {
	if x != nil {
		if x, ok := x.xxx_hidden_Type.(*tableIndexDescription_GlobalUniqueIndex); ok {
			return x.GlobalUniqueIndex
		}
	}
	return nil
}

func (x *TableIndexDescription) GetStatus() TableIndexDescription_Status {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return TableIndexDescription_STATUS_UNSPECIFIED
}

func (x *TableIndexDescription) GetDataColumns() []string {
	if x != nil {
		return x.xxx_hidden_DataColumns
	}
	return nil
}

func (x *TableIndexDescription) GetSizeBytes() uint64 {
	if x != nil {
		return x.xxx_hidden_SizeBytes
	}
	return 0
}

func (x *TableIndexDescription) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *TableIndexDescription) SetIndexColumns(v []string) {
	x.xxx_hidden_IndexColumns = v
}

func (x *TableIndexDescription) SetGlobalIndex(v *GlobalIndex) {
	if v == nil {
		x.xxx_hidden_Type = nil
		return
	}
	x.xxx_hidden_Type = &tableIndexDescription_GlobalIndex{v}
}

func (x *TableIndexDescription) SetGlobalAsyncIndex(v *GlobalAsyncIndex) {
	if v == nil {
		x.xxx_hidden_Type = nil
		return
	}
	x.xxx_hidden_Type = &tableIndexDescription_GlobalAsyncIndex{v}
}

func (x *TableIndexDescription) SetGlobalUniqueIndex(v *GlobalUniqueIndex) {
	if v == nil {
		x.xxx_hidden_Type = nil
		return
	}
	x.xxx_hidden_Type = &tableIndexDescription_GlobalUniqueIndex{v}
}

func (x *TableIndexDescription) SetStatus(v TableIndexDescription_Status) {
	x.xxx_hidden_Status = v
}

func (x *TableIndexDescription) SetDataColumns(v []string) {
	x.xxx_hidden_DataColumns = v
}

func (x *TableIndexDescription) SetSizeBytes(v uint64) {
	x.xxx_hidden_SizeBytes = v
}

func (x *TableIndexDescription) HasType() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Type != nil
}

func (x *TableIndexDescription) HasGlobalIndex() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Type.(*tableIndexDescription_GlobalIndex)
	return ok
}

func (x *TableIndexDescription) HasGlobalAsyncIndex() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Type.(*tableIndexDescription_GlobalAsyncIndex)
	return ok
}

func (x *TableIndexDescription) HasGlobalUniqueIndex() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Type.(*tableIndexDescription_GlobalUniqueIndex)
	return ok
}

func (x *TableIndexDescription) ClearType() {
	x.xxx_hidden_Type = nil
}

func (x *TableIndexDescription) ClearGlobalIndex() {
	if _, ok := x.xxx_hidden_Type.(*tableIndexDescription_GlobalIndex); ok {
		x.xxx_hidden_Type = nil
	}
}

func (x *TableIndexDescription) ClearGlobalAsyncIndex() {
	if _, ok := x.xxx_hidden_Type.(*tableIndexDescription_GlobalAsyncIndex); ok {
		x.xxx_hidden_Type = nil
	}
}

func (x *TableIndexDescription) ClearGlobalUniqueIndex() {
	if _, ok := x.xxx_hidden_Type.(*tableIndexDescription_GlobalUniqueIndex); ok {
		x.xxx_hidden_Type = nil
	}
}

const TableIndexDescription_Type_not_set_case case_TableIndexDescription_Type = 0
const TableIndexDescription_GlobalIndex_case case_TableIndexDescription_Type = 3
const TableIndexDescription_GlobalAsyncIndex_case case_TableIndexDescription_Type = 5
const TableIndexDescription_GlobalUniqueIndex_case case_TableIndexDescription_Type = 8

func (x *TableIndexDescription) WhichType() case_TableIndexDescription_Type {
	if x == nil {
		return TableIndexDescription_Type_not_set_case
	}
	switch x.xxx_hidden_Type.(type) {
	case *tableIndexDescription_GlobalIndex:
		return TableIndexDescription_GlobalIndex_case
	case *tableIndexDescription_GlobalAsyncIndex:
		return TableIndexDescription_GlobalAsyncIndex_case
	case *tableIndexDescription_GlobalUniqueIndex:
		return TableIndexDescription_GlobalUniqueIndex_case
	default:
		return TableIndexDescription_Type_not_set_case
	}
}

type TableIndexDescription_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Name of index
	Name string
	// list of columns
	IndexColumns []string
	// Type of index

	// Fields of oneof xxx_hidden_Type:
	GlobalIndex       *GlobalIndex
	GlobalAsyncIndex  *GlobalAsyncIndex
	GlobalUniqueIndex *GlobalUniqueIndex
	// -- end of xxx_hidden_Type
	Status TableIndexDescription_Status
	// list of columns content to be copied in to index table
	DataColumns []string
	// Size of index data in bytes
	SizeBytes uint64
}

func (b0 TableIndexDescription_builder) Build() *TableIndexDescription {
	m0 := &TableIndexDescription{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_IndexColumns = b.IndexColumns
	if b.GlobalIndex != nil {
		x.xxx_hidden_Type = &tableIndexDescription_GlobalIndex{b.GlobalIndex}
	}
	if b.GlobalAsyncIndex != nil {
		x.xxx_hidden_Type = &tableIndexDescription_GlobalAsyncIndex{b.GlobalAsyncIndex}
	}
	if b.GlobalUniqueIndex != nil {
		x.xxx_hidden_Type = &tableIndexDescription_GlobalUniqueIndex{b.GlobalUniqueIndex}
	}
	x.xxx_hidden_Status = b.Status
	x.xxx_hidden_DataColumns = b.DataColumns
	x.xxx_hidden_SizeBytes = b.SizeBytes
	return m0
}

type case_TableIndexDescription_Type protoreflect.FieldNumber

func (x case_TableIndexDescription_Type) String() string {
	md := file_protos_ydb_table_proto_msgTypes[9].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isTableIndexDescription_Type interface {
	isTableIndexDescription_Type()
}

type tableIndexDescription_GlobalIndex struct {
	GlobalIndex *GlobalIndex `protobuf:"bytes,3,opt,name=global_index,json=globalIndex,proto3,oneof"`
}

type tableIndexDescription_GlobalAsyncIndex struct {
	GlobalAsyncIndex *GlobalAsyncIndex `protobuf:"bytes,5,opt,name=global_async_index,json=globalAsyncIndex,proto3,oneof"`
}

type tableIndexDescription_GlobalUniqueIndex struct {
	GlobalUniqueIndex *GlobalUniqueIndex `protobuf:"bytes,8,opt,name=global_unique_index,json=globalUniqueIndex,proto3,oneof"`
}

func (*tableIndexDescription_GlobalIndex) isTableIndexDescription_Type() {}

func (*tableIndexDescription_GlobalAsyncIndex) isTableIndexDescription_Type() {}

func (*tableIndexDescription_GlobalUniqueIndex) isTableIndexDescription_Type() {}

// State of index building operation
type IndexBuildState struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexBuildState) Reset() {
	*x = IndexBuildState{}
	mi := &file_protos_ydb_table_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexBuildState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexBuildState) ProtoMessage() {}

func (x *IndexBuildState) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type IndexBuildState_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 IndexBuildState_builder) Build() *IndexBuildState {
	m0 := &IndexBuildState{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

// Description of index building operation
type IndexBuildDescription struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Path  string                 `protobuf:"bytes,1,opt,name=path,proto3"`
	xxx_hidden_Index *TableIndex            `protobuf:"bytes,2,opt,name=index,proto3"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *IndexBuildDescription) Reset() {
	*x = IndexBuildDescription{}
	mi := &file_protos_ydb_table_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexBuildDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexBuildDescription) ProtoMessage() {}

func (x *IndexBuildDescription) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *IndexBuildDescription) GetPath() string {
	if x != nil {
		return x.xxx_hidden_Path
	}
	return ""
}

func (x *IndexBuildDescription) GetIndex() *TableIndex {
	if x != nil {
		return x.xxx_hidden_Index
	}
	return nil
}

func (x *IndexBuildDescription) SetPath(v string) {
	x.xxx_hidden_Path = v
}

func (x *IndexBuildDescription) SetIndex(v *TableIndex) {
	x.xxx_hidden_Index = v
}

func (x *IndexBuildDescription) HasIndex() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Index != nil
}

func (x *IndexBuildDescription) ClearIndex() {
	x.xxx_hidden_Index = nil
}

type IndexBuildDescription_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Path  string
	Index *TableIndex
}

func (b0 IndexBuildDescription_builder) Build() *IndexBuildDescription {
	m0 := &IndexBuildDescription{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Path = b.Path
	x.xxx_hidden_Index = b.Index
	return m0
}

type IndexBuildMetadata struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Description *IndexBuildDescription `protobuf:"bytes,1,opt,name=description,proto3"`
	xxx_hidden_State       IndexBuildState_State  `protobuf:"varint,2,opt,name=state,proto3,enum=Ydb.Table.IndexBuildState_State"`
	xxx_hidden_Progress    float32                `protobuf:"fixed32,3,opt,name=progress,proto3"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *IndexBuildMetadata) Reset() {
	*x = IndexBuildMetadata{}
	mi := &file_protos_ydb_table_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexBuildMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexBuildMetadata) ProtoMessage() {}

func (x *IndexBuildMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *IndexBuildMetadata) GetDescription() *IndexBuildDescription {
	if x != nil {
		return x.xxx_hidden_Description
	}
	return nil
}

func (x *IndexBuildMetadata) GetState() IndexBuildState_State {
	if x != nil {
		return x.xxx_hidden_State
	}
	return IndexBuildState_STATE_UNSPECIFIED
}

func (x *IndexBuildMetadata) GetProgress() float32 {
	if x != nil {
		return x.xxx_hidden_Progress
	}
	return 0
}

func (x *IndexBuildMetadata) SetDescription(v *IndexBuildDescription) {
	x.xxx_hidden_Description = v
}

func (x *IndexBuildMetadata) SetState(v IndexBuildState_State) {
	x.xxx_hidden_State = v
}

func (x *IndexBuildMetadata) SetProgress(v float32) {
	x.xxx_hidden_Progress = v
}

func (x *IndexBuildMetadata) HasDescription() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Description != nil
}

func (x *IndexBuildMetadata) ClearDescription() {
	x.xxx_hidden_Description = nil
}

type IndexBuildMetadata_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Description *IndexBuildDescription
	State       IndexBuildState_State
	Progress    float32
}

func (b0 IndexBuildMetadata_builder) Build() *IndexBuildMetadata {
	m0 := &IndexBuildMetadata{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Description = b.Description
	x.xxx_hidden_State = b.State
	x.xxx_hidden_Progress = b.Progress
	return m0
}

type ChangefeedMode struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangefeedMode) Reset() {
	*x = ChangefeedMode{}
	mi := &file_protos_ydb_table_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangefeedMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangefeedMode) ProtoMessage() {}

func (x *ChangefeedMode) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ChangefeedMode_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ChangefeedMode_builder) Build() *ChangefeedMode {
	m0 := &ChangefeedMode{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ChangefeedFormat struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangefeedFormat) Reset() {
	*x = ChangefeedFormat{}
	mi := &file_protos_ydb_table_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangefeedFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangefeedFormat) ProtoMessage() {}

func (x *ChangefeedFormat) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ChangefeedFormat_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ChangefeedFormat_builder) Build() *ChangefeedFormat {
	m0 := &ChangefeedFormat{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Changefeed struct {
	state                                 protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_Name                       string                          `protobuf:"bytes,1,opt,name=name,proto3"`
	xxx_hidden_Mode                       ChangefeedMode_Mode             `protobuf:"varint,2,opt,name=mode,proto3,enum=Ydb.Table.ChangefeedMode_Mode"`
	xxx_hidden_Format                     ChangefeedFormat_Format         `protobuf:"varint,3,opt,name=format,proto3,enum=Ydb.Table.ChangefeedFormat_Format"`
	xxx_hidden_RetentionPeriod            *durationpb.Duration            `protobuf:"bytes,4,opt,name=retention_period,json=retentionPeriod,proto3"`
	xxx_hidden_VirtualTimestamps          bool                            `protobuf:"varint,5,opt,name=virtual_timestamps,json=virtualTimestamps,proto3"`
	xxx_hidden_InitialScan                bool                            `protobuf:"varint,6,opt,name=initial_scan,json=initialScan,proto3"`
	xxx_hidden_Attributes                 map[string]string               `protobuf:"bytes,7,rep,name=attributes,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_AwsRegion                  string                          `protobuf:"bytes,8,opt,name=aws_region,json=awsRegion,proto3"`
	xxx_hidden_ResolvedTimestampsInterval *durationpb.Duration            `protobuf:"bytes,9,opt,name=resolved_timestamps_interval,json=resolvedTimestampsInterval,proto3"`
	xxx_hidden_TopicPartitioningSettings  *Ydb_Topic.PartitioningSettings `protobuf:"bytes,10,opt,name=topic_partitioning_settings,json=topicPartitioningSettings,proto3"`
	unknownFields                         protoimpl.UnknownFields
	sizeCache                             protoimpl.SizeCache
}

func (x *Changefeed) Reset() {
	*x = Changefeed{}
	mi := &file_protos_ydb_table_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Changefeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Changefeed) ProtoMessage() {}

func (x *Changefeed) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Changefeed) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *Changefeed) GetMode() ChangefeedMode_Mode {
	if x != nil {
		return x.xxx_hidden_Mode
	}
	return ChangefeedMode_MODE_UNSPECIFIED
}

func (x *Changefeed) GetFormat() ChangefeedFormat_Format {
	if x != nil {
		return x.xxx_hidden_Format
	}
	return ChangefeedFormat_FORMAT_UNSPECIFIED
}

func (x *Changefeed) GetRetentionPeriod() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_RetentionPeriod
	}
	return nil
}

func (x *Changefeed) GetVirtualTimestamps() bool {
	if x != nil {
		return x.xxx_hidden_VirtualTimestamps
	}
	return false
}

func (x *Changefeed) GetInitialScan() bool {
	if x != nil {
		return x.xxx_hidden_InitialScan
	}
	return false
}

func (x *Changefeed) GetAttributes() map[string]string {
	if x != nil {
		return x.xxx_hidden_Attributes
	}
	return nil
}

func (x *Changefeed) GetAwsRegion() string {
	if x != nil {
		return x.xxx_hidden_AwsRegion
	}
	return ""
}

func (x *Changefeed) GetResolvedTimestampsInterval() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_ResolvedTimestampsInterval
	}
	return nil
}

func (x *Changefeed) GetTopicPartitioningSettings() *Ydb_Topic.PartitioningSettings {
	if x != nil {
		return x.xxx_hidden_TopicPartitioningSettings
	}
	return nil
}

func (x *Changefeed) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *Changefeed) SetMode(v ChangefeedMode_Mode) {
	x.xxx_hidden_Mode = v
}

func (x *Changefeed) SetFormat(v ChangefeedFormat_Format) {
	x.xxx_hidden_Format = v
}

func (x *Changefeed) SetRetentionPeriod(v *durationpb.Duration) {
	x.xxx_hidden_RetentionPeriod = v
}

func (x *Changefeed) SetVirtualTimestamps(v bool) {
	x.xxx_hidden_VirtualTimestamps = v
}

func (x *Changefeed) SetInitialScan(v bool) {
	x.xxx_hidden_InitialScan = v
}

func (x *Changefeed) SetAttributes(v map[string]string) {
	x.xxx_hidden_Attributes = v
}

func (x *Changefeed) SetAwsRegion(v string) {
	x.xxx_hidden_AwsRegion = v
}

func (x *Changefeed) SetResolvedTimestampsInterval(v *durationpb.Duration) {
	x.xxx_hidden_ResolvedTimestampsInterval = v
}

func (x *Changefeed) SetTopicPartitioningSettings(v *Ydb_Topic.PartitioningSettings) {
	x.xxx_hidden_TopicPartitioningSettings = v
}

func (x *Changefeed) HasRetentionPeriod() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RetentionPeriod != nil
}

func (x *Changefeed) HasResolvedTimestampsInterval() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ResolvedTimestampsInterval != nil
}

func (x *Changefeed) HasTopicPartitioningSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TopicPartitioningSettings != nil
}

func (x *Changefeed) ClearRetentionPeriod() {
	x.xxx_hidden_RetentionPeriod = nil
}

func (x *Changefeed) ClearResolvedTimestampsInterval() {
	x.xxx_hidden_ResolvedTimestampsInterval = nil
}

func (x *Changefeed) ClearTopicPartitioningSettings() {
	x.xxx_hidden_TopicPartitioningSettings = nil
}

type Changefeed_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Name of the feed
	Name string
	// Mode specifies the information that will be written to the feed
	Mode ChangefeedMode_Mode
	// Format of the data
	Format ChangefeedFormat_Format
	// How long data in changefeed's underlying topic should be stored
	RetentionPeriod *durationpb.Duration
	// Emit virtual timestamps of changes along with data or not
	VirtualTimestamps bool
	// Initial scan will output the current state of the table first
	InitialScan bool
	// Attributes. Total size is limited to 10 KB.
	Attributes map[string]string
	// Value that will be emitted in the `awsRegion` field of the record in DYNAMODB_STREAMS_JSON format
	AwsRegion string
	// Periodically emit resolved timestamps. If unspecified, resolved timestamps are not emitted.
	ResolvedTimestampsInterval *durationpb.Duration
	// Partitioning settings of underlying topic.
	TopicPartitioningSettings *Ydb_Topic.PartitioningSettings
}

func (b0 Changefeed_builder) Build() *Changefeed {
	m0 := &Changefeed{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Mode = b.Mode
	x.xxx_hidden_Format = b.Format
	x.xxx_hidden_RetentionPeriod = b.RetentionPeriod
	x.xxx_hidden_VirtualTimestamps = b.VirtualTimestamps
	x.xxx_hidden_InitialScan = b.InitialScan
	x.xxx_hidden_Attributes = b.Attributes
	x.xxx_hidden_AwsRegion = b.AwsRegion
	x.xxx_hidden_ResolvedTimestampsInterval = b.ResolvedTimestampsInterval
	x.xxx_hidden_TopicPartitioningSettings = b.TopicPartitioningSettings
	return m0
}

type ChangefeedDescription struct {
	state                                 protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_Name                       string                      `protobuf:"bytes,1,opt,name=name,proto3"`
	xxx_hidden_Mode                       ChangefeedMode_Mode         `protobuf:"varint,2,opt,name=mode,proto3,enum=Ydb.Table.ChangefeedMode_Mode"`
	xxx_hidden_Format                     ChangefeedFormat_Format     `protobuf:"varint,3,opt,name=format,proto3,enum=Ydb.Table.ChangefeedFormat_Format"`
	xxx_hidden_State                      ChangefeedDescription_State `protobuf:"varint,4,opt,name=state,proto3,enum=Ydb.Table.ChangefeedDescription_State"`
	xxx_hidden_VirtualTimestamps          bool                        `protobuf:"varint,5,opt,name=virtual_timestamps,json=virtualTimestamps,proto3"`
	xxx_hidden_Attributes                 map[string]string           `protobuf:"bytes,6,rep,name=attributes,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_AwsRegion                  string                      `protobuf:"bytes,7,opt,name=aws_region,json=awsRegion,proto3"`
	xxx_hidden_ResolvedTimestampsInterval *durationpb.Duration        `protobuf:"bytes,8,opt,name=resolved_timestamps_interval,json=resolvedTimestampsInterval,proto3"`
	unknownFields                         protoimpl.UnknownFields
	sizeCache                             protoimpl.SizeCache
}

func (x *ChangefeedDescription) Reset() {
	*x = ChangefeedDescription{}
	mi := &file_protos_ydb_table_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangefeedDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangefeedDescription) ProtoMessage() {}

func (x *ChangefeedDescription) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ChangefeedDescription) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *ChangefeedDescription) GetMode() ChangefeedMode_Mode {
	if x != nil {
		return x.xxx_hidden_Mode
	}
	return ChangefeedMode_MODE_UNSPECIFIED
}

func (x *ChangefeedDescription) GetFormat() ChangefeedFormat_Format {
	if x != nil {
		return x.xxx_hidden_Format
	}
	return ChangefeedFormat_FORMAT_UNSPECIFIED
}

func (x *ChangefeedDescription) GetState() ChangefeedDescription_State {
	if x != nil {
		return x.xxx_hidden_State
	}
	return ChangefeedDescription_STATE_UNSPECIFIED
}

func (x *ChangefeedDescription) GetVirtualTimestamps() bool {
	if x != nil {
		return x.xxx_hidden_VirtualTimestamps
	}
	return false
}

func (x *ChangefeedDescription) GetAttributes() map[string]string {
	if x != nil {
		return x.xxx_hidden_Attributes
	}
	return nil
}

func (x *ChangefeedDescription) GetAwsRegion() string {
	if x != nil {
		return x.xxx_hidden_AwsRegion
	}
	return ""
}

func (x *ChangefeedDescription) GetResolvedTimestampsInterval() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_ResolvedTimestampsInterval
	}
	return nil
}

func (x *ChangefeedDescription) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *ChangefeedDescription) SetMode(v ChangefeedMode_Mode) {
	x.xxx_hidden_Mode = v
}

func (x *ChangefeedDescription) SetFormat(v ChangefeedFormat_Format) {
	x.xxx_hidden_Format = v
}

func (x *ChangefeedDescription) SetState(v ChangefeedDescription_State) {
	x.xxx_hidden_State = v
}

func (x *ChangefeedDescription) SetVirtualTimestamps(v bool) {
	x.xxx_hidden_VirtualTimestamps = v
}

func (x *ChangefeedDescription) SetAttributes(v map[string]string) {
	x.xxx_hidden_Attributes = v
}

func (x *ChangefeedDescription) SetAwsRegion(v string) {
	x.xxx_hidden_AwsRegion = v
}

func (x *ChangefeedDescription) SetResolvedTimestampsInterval(v *durationpb.Duration) {
	x.xxx_hidden_ResolvedTimestampsInterval = v
}

func (x *ChangefeedDescription) HasResolvedTimestampsInterval() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ResolvedTimestampsInterval != nil
}

func (x *ChangefeedDescription) ClearResolvedTimestampsInterval() {
	x.xxx_hidden_ResolvedTimestampsInterval = nil
}

type ChangefeedDescription_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Name of the feed
	Name string
	// Mode specifies the information that will be written to the feed
	Mode ChangefeedMode_Mode
	// Format of the data
	Format ChangefeedFormat_Format
	// State of the feed
	State ChangefeedDescription_State
	// State of emitting of virtual timestamps along with data
	VirtualTimestamps bool
	// Attributes
	Attributes map[string]string
	// Value that will be emitted in the `awsRegion` field of the record in DYNAMODB_STREAMS_JSON format
	AwsRegion string
	// Interval of emitting of resolved timestamps. If unspecified, resolved timestamps are not emitted.
	ResolvedTimestampsInterval *durationpb.Duration
}

func (b0 ChangefeedDescription_builder) Build() *ChangefeedDescription {
	m0 := &ChangefeedDescription{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Mode = b.Mode
	x.xxx_hidden_Format = b.Format
	x.xxx_hidden_State = b.State
	x.xxx_hidden_VirtualTimestamps = b.VirtualTimestamps
	x.xxx_hidden_Attributes = b.Attributes
	x.xxx_hidden_AwsRegion = b.AwsRegion
	x.xxx_hidden_ResolvedTimestampsInterval = b.ResolvedTimestampsInterval
	return m0
}

type StoragePool struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Media string                 `protobuf:"bytes,1,opt,name=media,proto3"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *StoragePool) Reset() {
	*x = StoragePool{}
	mi := &file_protos_ydb_table_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoragePool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoragePool) ProtoMessage() {}

func (x *StoragePool) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StoragePool) GetMedia() string {
	if x != nil {
		return x.xxx_hidden_Media
	}
	return ""
}

func (x *StoragePool) SetMedia(v string) {
	x.xxx_hidden_Media = v
}

type StoragePool_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Media string
}

func (b0 StoragePool_builder) Build() *StoragePool {
	m0 := &StoragePool{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Media = b.Media
	return m0
}

type StoragePolicy struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PresetName     string                 `protobuf:"bytes,1,opt,name=preset_name,json=presetName,proto3"`
	xxx_hidden_Syslog         *StoragePool           `protobuf:"bytes,2,opt,name=syslog,proto3"`
	xxx_hidden_Log            *StoragePool           `protobuf:"bytes,3,opt,name=log,proto3"`
	xxx_hidden_Data           *StoragePool           `protobuf:"bytes,4,opt,name=data,proto3"`
	xxx_hidden_External       *StoragePool           `protobuf:"bytes,5,opt,name=external,proto3"`
	xxx_hidden_KeepInMemory   Ydb.FeatureFlag_Status `protobuf:"varint,6,opt,name=keep_in_memory,json=keepInMemory,proto3,enum=Ydb.FeatureFlag_Status"`
	xxx_hidden_ColumnFamilies *[]*ColumnFamilyPolicy `protobuf:"bytes,7,rep,name=column_families,json=columnFamilies,proto3"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *StoragePolicy) Reset() {
	*x = StoragePolicy{}
	mi := &file_protos_ydb_table_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoragePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoragePolicy) ProtoMessage() {}

func (x *StoragePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StoragePolicy) GetPresetName() string {
	if x != nil {
		return x.xxx_hidden_PresetName
	}
	return ""
}

func (x *StoragePolicy) GetSyslog() *StoragePool {
	if x != nil {
		return x.xxx_hidden_Syslog
	}
	return nil
}

func (x *StoragePolicy) GetLog() *StoragePool {
	if x != nil {
		return x.xxx_hidden_Log
	}
	return nil
}

func (x *StoragePolicy) GetData() *StoragePool {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *StoragePolicy) GetExternal() *StoragePool {
	if x != nil {
		return x.xxx_hidden_External
	}
	return nil
}

func (x *StoragePolicy) GetKeepInMemory() Ydb.FeatureFlag_Status {
	if x != nil {
		return x.xxx_hidden_KeepInMemory
	}
	return Ydb.FeatureFlag_Status(0)
}

func (x *StoragePolicy) GetColumnFamilies() []*ColumnFamilyPolicy {
	if x != nil {
		if x.xxx_hidden_ColumnFamilies != nil {
			return *x.xxx_hidden_ColumnFamilies
		}
	}
	return nil
}

func (x *StoragePolicy) SetPresetName(v string) {
	x.xxx_hidden_PresetName = v
}

func (x *StoragePolicy) SetSyslog(v *StoragePool) {
	x.xxx_hidden_Syslog = v
}

func (x *StoragePolicy) SetLog(v *StoragePool) {
	x.xxx_hidden_Log = v
}

func (x *StoragePolicy) SetData(v *StoragePool) {
	x.xxx_hidden_Data = v
}

func (x *StoragePolicy) SetExternal(v *StoragePool) {
	x.xxx_hidden_External = v
}

func (x *StoragePolicy) SetKeepInMemory(v Ydb.FeatureFlag_Status) {
	x.xxx_hidden_KeepInMemory = v
}

func (x *StoragePolicy) SetColumnFamilies(v []*ColumnFamilyPolicy) {
	x.xxx_hidden_ColumnFamilies = &v
}

func (x *StoragePolicy) HasSyslog() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Syslog != nil
}

func (x *StoragePolicy) HasLog() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Log != nil
}

func (x *StoragePolicy) HasData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data != nil
}

func (x *StoragePolicy) HasExternal() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_External != nil
}

func (x *StoragePolicy) ClearSyslog() {
	x.xxx_hidden_Syslog = nil
}

func (x *StoragePolicy) ClearLog() {
	x.xxx_hidden_Log = nil
}

func (x *StoragePolicy) ClearData() {
	x.xxx_hidden_Data = nil
}

func (x *StoragePolicy) ClearExternal() {
	x.xxx_hidden_External = nil
}

type StoragePolicy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PresetName     string
	Syslog         *StoragePool
	Log            *StoragePool
	Data           *StoragePool
	External       *StoragePool
	KeepInMemory   Ydb.FeatureFlag_Status
	ColumnFamilies []*ColumnFamilyPolicy
}

func (b0 StoragePolicy_builder) Build() *StoragePolicy {
	m0 := &StoragePolicy{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PresetName = b.PresetName
	x.xxx_hidden_Syslog = b.Syslog
	x.xxx_hidden_Log = b.Log
	x.xxx_hidden_Data = b.Data
	x.xxx_hidden_External = b.External
	x.xxx_hidden_KeepInMemory = b.KeepInMemory
	x.xxx_hidden_ColumnFamilies = &b.ColumnFamilies
	return m0
}

type ColumnFamilyPolicy struct {
	state                   protoimpl.MessageState         `protogen:"opaque.v1"`
	xxx_hidden_Name         string                         `protobuf:"bytes,1,opt,name=name,proto3"`
	xxx_hidden_Data         *StoragePool                   `protobuf:"bytes,2,opt,name=data,proto3"`
	xxx_hidden_External     *StoragePool                   `protobuf:"bytes,3,opt,name=external,proto3"`
	xxx_hidden_KeepInMemory Ydb.FeatureFlag_Status         `protobuf:"varint,4,opt,name=keep_in_memory,json=keepInMemory,proto3,enum=Ydb.FeatureFlag_Status"`
	xxx_hidden_Compression  ColumnFamilyPolicy_Compression `protobuf:"varint,5,opt,name=compression,proto3,enum=Ydb.Table.ColumnFamilyPolicy_Compression"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ColumnFamilyPolicy) Reset() {
	*x = ColumnFamilyPolicy{}
	mi := &file_protos_ydb_table_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnFamilyPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnFamilyPolicy) ProtoMessage() {}

func (x *ColumnFamilyPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ColumnFamilyPolicy) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *ColumnFamilyPolicy) GetData() *StoragePool {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *ColumnFamilyPolicy) GetExternal() *StoragePool {
	if x != nil {
		return x.xxx_hidden_External
	}
	return nil
}

func (x *ColumnFamilyPolicy) GetKeepInMemory() Ydb.FeatureFlag_Status {
	if x != nil {
		return x.xxx_hidden_KeepInMemory
	}
	return Ydb.FeatureFlag_Status(0)
}

func (x *ColumnFamilyPolicy) GetCompression() ColumnFamilyPolicy_Compression {
	if x != nil {
		return x.xxx_hidden_Compression
	}
	return ColumnFamilyPolicy_COMPRESSION_UNSPECIFIED
}

func (x *ColumnFamilyPolicy) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *ColumnFamilyPolicy) SetData(v *StoragePool) {
	x.xxx_hidden_Data = v
}

func (x *ColumnFamilyPolicy) SetExternal(v *StoragePool) {
	x.xxx_hidden_External = v
}

func (x *ColumnFamilyPolicy) SetKeepInMemory(v Ydb.FeatureFlag_Status) {
	x.xxx_hidden_KeepInMemory = v
}

func (x *ColumnFamilyPolicy) SetCompression(v ColumnFamilyPolicy_Compression) {
	x.xxx_hidden_Compression = v
}

func (x *ColumnFamilyPolicy) HasData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data != nil
}

func (x *ColumnFamilyPolicy) HasExternal() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_External != nil
}

func (x *ColumnFamilyPolicy) ClearData() {
	x.xxx_hidden_Data = nil
}

func (x *ColumnFamilyPolicy) ClearExternal() {
	x.xxx_hidden_External = nil
}

type ColumnFamilyPolicy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Name of the column family, the name "default" must be used for the
	// primary column family that contains as least primary key columns
	Name string
	// Storage settings for the column group (default to values in storage policy)
	Data     *StoragePool
	External *StoragePool
	// When enabled table data will be kept in memory
	// WARNING: DO NOT USE
	KeepInMemory Ydb.FeatureFlag_Status
	// Optionally specify whether data should be compressed
	Compression ColumnFamilyPolicy_Compression
}

func (b0 ColumnFamilyPolicy_builder) Build() *ColumnFamilyPolicy {
	m0 := &ColumnFamilyPolicy{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Data = b.Data
	x.xxx_hidden_External = b.External
	x.xxx_hidden_KeepInMemory = b.KeepInMemory
	x.xxx_hidden_Compression = b.Compression
	return m0
}

type CompactionPolicy struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PresetName string                 `protobuf:"bytes,1,opt,name=preset_name,json=presetName,proto3"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CompactionPolicy) Reset() {
	*x = CompactionPolicy{}
	mi := &file_protos_ydb_table_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompactionPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompactionPolicy) ProtoMessage() {}

func (x *CompactionPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CompactionPolicy) GetPresetName() string {
	if x != nil {
		return x.xxx_hidden_PresetName
	}
	return ""
}

func (x *CompactionPolicy) SetPresetName(v string) {
	x.xxx_hidden_PresetName = v
}

type CompactionPolicy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PresetName string
}

func (b0 CompactionPolicy_builder) Build() *CompactionPolicy {
	m0 := &CompactionPolicy{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PresetName = b.PresetName
	return m0
}

type ExplicitPartitions struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SplitPoints *[]*Ydb.TypedValue     `protobuf:"bytes,1,rep,name=split_points,json=splitPoints,proto3"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ExplicitPartitions) Reset() {
	*x = ExplicitPartitions{}
	mi := &file_protos_ydb_table_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExplicitPartitions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplicitPartitions) ProtoMessage() {}

func (x *ExplicitPartitions) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExplicitPartitions) GetSplitPoints() []*Ydb.TypedValue {
	if x != nil {
		if x.xxx_hidden_SplitPoints != nil {
			return *x.xxx_hidden_SplitPoints
		}
	}
	return nil
}

func (x *ExplicitPartitions) SetSplitPoints(v []*Ydb.TypedValue) {
	x.xxx_hidden_SplitPoints = &v
}

type ExplicitPartitions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Specify key values used to split table into partitions.
	// Each value becomes the first key of a new partition.
	// Key values should go in ascending order.
	// Total number of created partitions is number of specified
	// keys + 1.
	SplitPoints []*Ydb.TypedValue
}

func (b0 ExplicitPartitions_builder) Build() *ExplicitPartitions {
	m0 := &ExplicitPartitions{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SplitPoints = &b.SplitPoints
	return m0
}

type PartitionStats struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RowsEstimate uint64                 `protobuf:"varint,1,opt,name=rows_estimate,json=rowsEstimate,proto3"`
	xxx_hidden_StoreSize    uint64                 `protobuf:"varint,2,opt,name=store_size,json=storeSize,proto3"`
	xxx_hidden_LeaderNodeId uint32                 `protobuf:"varint,3,opt,name=leader_node_id,json=leaderNodeId,proto3"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *PartitionStats) Reset() {
	*x = PartitionStats{}
	mi := &file_protos_ydb_table_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionStats) ProtoMessage() {}

func (x *PartitionStats) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PartitionStats) GetRowsEstimate() uint64 {
	if x != nil {
		return x.xxx_hidden_RowsEstimate
	}
	return 0
}

func (x *PartitionStats) GetStoreSize() uint64 {
	if x != nil {
		return x.xxx_hidden_StoreSize
	}
	return 0
}

func (x *PartitionStats) GetLeaderNodeId() uint32 {
	if x != nil {
		return x.xxx_hidden_LeaderNodeId
	}
	return 0
}

func (x *PartitionStats) SetRowsEstimate(v uint64) {
	x.xxx_hidden_RowsEstimate = v
}

func (x *PartitionStats) SetStoreSize(v uint64) {
	x.xxx_hidden_StoreSize = v
}

func (x *PartitionStats) SetLeaderNodeId(v uint32) {
	x.xxx_hidden_LeaderNodeId = v
}

type PartitionStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Approximate number of rows in shard
	RowsEstimate uint64
	// Approximate size of shard (bytes)
	StoreSize uint64
	// id of node that serve shard key range
	LeaderNodeId uint32
}

func (b0 PartitionStats_builder) Build() *PartitionStats {
	m0 := &PartitionStats{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_RowsEstimate = b.RowsEstimate
	x.xxx_hidden_StoreSize = b.StoreSize
	x.xxx_hidden_LeaderNodeId = b.LeaderNodeId
	return m0
}

type TableStats struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PartitionStats   *[]*PartitionStats     `protobuf:"bytes,1,rep,name=partition_stats,json=partitionStats,proto3"`
	xxx_hidden_RowsEstimate     uint64                 `protobuf:"varint,2,opt,name=rows_estimate,json=rowsEstimate,proto3"`
	xxx_hidden_StoreSize        uint64                 `protobuf:"varint,3,opt,name=store_size,json=storeSize,proto3"`
	xxx_hidden_Partitions       uint64                 `protobuf:"varint,4,opt,name=partitions,proto3"`
	xxx_hidden_CreationTime     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=creation_time,json=creationTime,proto3"`
	xxx_hidden_ModificationTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=modification_time,json=modificationTime,proto3"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *TableStats) Reset() {
	*x = TableStats{}
	mi := &file_protos_ydb_table_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableStats) ProtoMessage() {}

func (x *TableStats) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TableStats) GetPartitionStats() []*PartitionStats {
	if x != nil {
		if x.xxx_hidden_PartitionStats != nil {
			return *x.xxx_hidden_PartitionStats
		}
	}
	return nil
}

func (x *TableStats) GetRowsEstimate() uint64 {
	if x != nil {
		return x.xxx_hidden_RowsEstimate
	}
	return 0
}

func (x *TableStats) GetStoreSize() uint64 {
	if x != nil {
		return x.xxx_hidden_StoreSize
	}
	return 0
}

func (x *TableStats) GetPartitions() uint64 {
	if x != nil {
		return x.xxx_hidden_Partitions
	}
	return 0
}

func (x *TableStats) GetCreationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreationTime
	}
	return nil
}

func (x *TableStats) GetModificationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ModificationTime
	}
	return nil
}

func (x *TableStats) SetPartitionStats(v []*PartitionStats) {
	x.xxx_hidden_PartitionStats = &v
}

func (x *TableStats) SetRowsEstimate(v uint64) {
	x.xxx_hidden_RowsEstimate = v
}

func (x *TableStats) SetStoreSize(v uint64) {
	x.xxx_hidden_StoreSize = v
}

func (x *TableStats) SetPartitions(v uint64) {
	x.xxx_hidden_Partitions = v
}

func (x *TableStats) SetCreationTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreationTime = v
}

func (x *TableStats) SetModificationTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_ModificationTime = v
}

func (x *TableStats) HasCreationTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreationTime != nil
}

func (x *TableStats) HasModificationTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ModificationTime != nil
}

func (x *TableStats) ClearCreationTime() {
	x.xxx_hidden_CreationTime = nil
}

func (x *TableStats) ClearModificationTime() {
	x.xxx_hidden_ModificationTime = nil
}

type TableStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Stats for each partition
	PartitionStats []*PartitionStats
	// Approximate number of rows in table
	RowsEstimate uint64
	// Approximate size of table (bytes)
	StoreSize uint64
	// Number of partitions in table
	Partitions uint64
	// Timestamp of table creation
	CreationTime *timestamppb.Timestamp
	// Timestamp of last modification
	ModificationTime *timestamppb.Timestamp
}

func (b0 TableStats_builder) Build() *TableStats {
	m0 := &TableStats{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PartitionStats = &b.PartitionStats
	x.xxx_hidden_RowsEstimate = b.RowsEstimate
	x.xxx_hidden_StoreSize = b.StoreSize
	x.xxx_hidden_Partitions = b.Partitions
	x.xxx_hidden_CreationTime = b.CreationTime
	x.xxx_hidden_ModificationTime = b.ModificationTime
	return m0
}

type PartitioningPolicy struct {
	state                       protoimpl.MessageState                    `protogen:"opaque.v1"`
	xxx_hidden_PresetName       string                                    `protobuf:"bytes,1,opt,name=preset_name,json=presetName,proto3"`
	xxx_hidden_AutoPartitioning PartitioningPolicy_AutoPartitioningPolicy `protobuf:"varint,2,opt,name=auto_partitioning,json=autoPartitioning,proto3,enum=Ydb.Table.PartitioningPolicy_AutoPartitioningPolicy"`
	xxx_hidden_Partitions       isPartitioningPolicy_Partitions           `protobuf_oneof:"partitions"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *PartitioningPolicy) Reset() {
	*x = PartitioningPolicy{}
	mi := &file_protos_ydb_table_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitioningPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitioningPolicy) ProtoMessage() {}

func (x *PartitioningPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PartitioningPolicy) GetPresetName() string {
	if x != nil {
		return x.xxx_hidden_PresetName
	}
	return ""
}

func (x *PartitioningPolicy) GetAutoPartitioning() PartitioningPolicy_AutoPartitioningPolicy {
	if x != nil {
		return x.xxx_hidden_AutoPartitioning
	}
	return PartitioningPolicy_AUTO_PARTITIONING_POLICY_UNSPECIFIED
}

func (x *PartitioningPolicy) GetUniformPartitions() uint64 {
	if x != nil {
		if x, ok := x.xxx_hidden_Partitions.(*partitioningPolicy_UniformPartitions); ok {
			return x.UniformPartitions
		}
	}
	return 0
}

func (x *PartitioningPolicy) GetExplicitPartitions() *ExplicitPartitions {
	if x != nil {
		if x, ok := x.xxx_hidden_Partitions.(*partitioningPolicy_ExplicitPartitions); ok {
			return x.ExplicitPartitions
		}
	}
	return nil
}

func (x *PartitioningPolicy) SetPresetName(v string) {
	x.xxx_hidden_PresetName = v
}

func (x *PartitioningPolicy) SetAutoPartitioning(v PartitioningPolicy_AutoPartitioningPolicy) {
	x.xxx_hidden_AutoPartitioning = v
}

func (x *PartitioningPolicy) SetUniformPartitions(v uint64) {
	x.xxx_hidden_Partitions = &partitioningPolicy_UniformPartitions{v}
}

func (x *PartitioningPolicy) SetExplicitPartitions(v *ExplicitPartitions) {
	if v == nil {
		x.xxx_hidden_Partitions = nil
		return
	}
	x.xxx_hidden_Partitions = &partitioningPolicy_ExplicitPartitions{v}
}

func (x *PartitioningPolicy) HasPartitions() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Partitions != nil
}

func (x *PartitioningPolicy) HasUniformPartitions() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Partitions.(*partitioningPolicy_UniformPartitions)
	return ok
}

func (x *PartitioningPolicy) HasExplicitPartitions() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Partitions.(*partitioningPolicy_ExplicitPartitions)
	return ok
}

func (x *PartitioningPolicy) ClearPartitions() {
	x.xxx_hidden_Partitions = nil
}

func (x *PartitioningPolicy) ClearUniformPartitions() {
	if _, ok := x.xxx_hidden_Partitions.(*partitioningPolicy_UniformPartitions); ok {
		x.xxx_hidden_Partitions = nil
	}
}

func (x *PartitioningPolicy) ClearExplicitPartitions() {
	if _, ok := x.xxx_hidden_Partitions.(*partitioningPolicy_ExplicitPartitions); ok {
		x.xxx_hidden_Partitions = nil
	}
}

const PartitioningPolicy_Partitions_not_set_case case_PartitioningPolicy_Partitions = 0
const PartitioningPolicy_UniformPartitions_case case_PartitioningPolicy_Partitions = 3
const PartitioningPolicy_ExplicitPartitions_case case_PartitioningPolicy_Partitions = 4

func (x *PartitioningPolicy) WhichPartitions() case_PartitioningPolicy_Partitions {
	if x == nil {
		return PartitioningPolicy_Partitions_not_set_case
	}
	switch x.xxx_hidden_Partitions.(type) {
	case *partitioningPolicy_UniformPartitions:
		return PartitioningPolicy_UniformPartitions_case
	case *partitioningPolicy_ExplicitPartitions:
		return PartitioningPolicy_ExplicitPartitions_case
	default:
		return PartitioningPolicy_Partitions_not_set_case
	}
}

type PartitioningPolicy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PresetName       string
	AutoPartitioning PartitioningPolicy_AutoPartitioningPolicy
	// Fields of oneof xxx_hidden_Partitions:
	// Allows to enable uniform sharding using given shards number.
	// The first components of primary key must have Uint32/Uint64 type.
	UniformPartitions *uint64
	// Explicitly specify key values which are used as borders for
	// created partitions.
	ExplicitPartitions *ExplicitPartitions
	// -- end of xxx_hidden_Partitions
}

func (b0 PartitioningPolicy_builder) Build() *PartitioningPolicy {
	m0 := &PartitioningPolicy{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PresetName = b.PresetName
	x.xxx_hidden_AutoPartitioning = b.AutoPartitioning
	if b.UniformPartitions != nil {
		x.xxx_hidden_Partitions = &partitioningPolicy_UniformPartitions{*b.UniformPartitions}
	}
	if b.ExplicitPartitions != nil {
		x.xxx_hidden_Partitions = &partitioningPolicy_ExplicitPartitions{b.ExplicitPartitions}
	}
	return m0
}

type case_PartitioningPolicy_Partitions protoreflect.FieldNumber

func (x case_PartitioningPolicy_Partitions) String() string {
	md := file_protos_ydb_table_proto_msgTypes[24].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isPartitioningPolicy_Partitions interface {
	isPartitioningPolicy_Partitions()
}

type partitioningPolicy_UniformPartitions struct {
	// Allows to enable uniform sharding using given shards number.
	// The first components of primary key must have Uint32/Uint64 type.
	UniformPartitions uint64 `protobuf:"varint,3,opt,name=uniform_partitions,json=uniformPartitions,proto3,oneof"`
}

type partitioningPolicy_ExplicitPartitions struct {
	// Explicitly specify key values which are used as borders for
	// created partitions.
	ExplicitPartitions *ExplicitPartitions `protobuf:"bytes,4,opt,name=explicit_partitions,json=explicitPartitions,proto3,oneof"`
}

func (*partitioningPolicy_UniformPartitions) isPartitioningPolicy_Partitions() {}

func (*partitioningPolicy_ExplicitPartitions) isPartitioningPolicy_Partitions() {}

type ExecutionPolicy struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PresetName string                 `protobuf:"bytes,1,opt,name=preset_name,json=presetName,proto3"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ExecutionPolicy) Reset() {
	*x = ExecutionPolicy{}
	mi := &file_protos_ydb_table_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionPolicy) ProtoMessage() {}

func (x *ExecutionPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecutionPolicy) GetPresetName() string {
	if x != nil {
		return x.xxx_hidden_PresetName
	}
	return ""
}

func (x *ExecutionPolicy) SetPresetName(v string) {
	x.xxx_hidden_PresetName = v
}

type ExecutionPolicy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PresetName string
}

func (b0 ExecutionPolicy_builder) Build() *ExecutionPolicy {
	m0 := &ExecutionPolicy{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PresetName = b.PresetName
	return m0
}

type ReplicationPolicy struct {
	state                                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PresetName                string                 `protobuf:"bytes,1,opt,name=preset_name,json=presetName,proto3"`
	xxx_hidden_ReplicasCount             uint32                 `protobuf:"varint,2,opt,name=replicas_count,json=replicasCount,proto3"`
	xxx_hidden_CreatePerAvailabilityZone Ydb.FeatureFlag_Status `protobuf:"varint,3,opt,name=create_per_availability_zone,json=createPerAvailabilityZone,proto3,enum=Ydb.FeatureFlag_Status"`
	xxx_hidden_AllowPromotion            Ydb.FeatureFlag_Status `protobuf:"varint,4,opt,name=allow_promotion,json=allowPromotion,proto3,enum=Ydb.FeatureFlag_Status"`
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *ReplicationPolicy) Reset() {
	*x = ReplicationPolicy{}
	mi := &file_protos_ydb_table_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicationPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationPolicy) ProtoMessage() {}

func (x *ReplicationPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReplicationPolicy) GetPresetName() string {
	if x != nil {
		return x.xxx_hidden_PresetName
	}
	return ""
}

func (x *ReplicationPolicy) GetReplicasCount() uint32 {
	if x != nil {
		return x.xxx_hidden_ReplicasCount
	}
	return 0
}

func (x *ReplicationPolicy) GetCreatePerAvailabilityZone() Ydb.FeatureFlag_Status {
	if x != nil {
		return x.xxx_hidden_CreatePerAvailabilityZone
	}
	return Ydb.FeatureFlag_Status(0)
}

func (x *ReplicationPolicy) GetAllowPromotion() Ydb.FeatureFlag_Status {
	if x != nil {
		return x.xxx_hidden_AllowPromotion
	}
	return Ydb.FeatureFlag_Status(0)
}

func (x *ReplicationPolicy) SetPresetName(v string) {
	x.xxx_hidden_PresetName = v
}

func (x *ReplicationPolicy) SetReplicasCount(v uint32) {
	x.xxx_hidden_ReplicasCount = v
}

func (x *ReplicationPolicy) SetCreatePerAvailabilityZone(v Ydb.FeatureFlag_Status) {
	x.xxx_hidden_CreatePerAvailabilityZone = v
}

func (x *ReplicationPolicy) SetAllowPromotion(v Ydb.FeatureFlag_Status) {
	x.xxx_hidden_AllowPromotion = v
}

type ReplicationPolicy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PresetName string
	// If value is non-zero then it specifies a number of read-only
	// replicas to create for a table. Zero value means preset
	// setting usage.
	ReplicasCount uint32
	// If this feature in enabled then requested number of replicas
	// will be created in each availability zone.
	CreatePerAvailabilityZone Ydb.FeatureFlag_Status
	// If this feature in enabled then read-only replicas can be promoted
	// to leader.
	AllowPromotion Ydb.FeatureFlag_Status
}

func (b0 ReplicationPolicy_builder) Build() *ReplicationPolicy {
	m0 := &ReplicationPolicy{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PresetName = b.PresetName
	x.xxx_hidden_ReplicasCount = b.ReplicasCount
	x.xxx_hidden_CreatePerAvailabilityZone = b.CreatePerAvailabilityZone
	x.xxx_hidden_AllowPromotion = b.AllowPromotion
	return m0
}

type CachingPolicy struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PresetName string                 `protobuf:"bytes,1,opt,name=preset_name,json=presetName,proto3"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CachingPolicy) Reset() {
	*x = CachingPolicy{}
	mi := &file_protos_ydb_table_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CachingPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CachingPolicy) ProtoMessage() {}

func (x *CachingPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CachingPolicy) GetPresetName() string {
	if x != nil {
		return x.xxx_hidden_PresetName
	}
	return ""
}

func (x *CachingPolicy) SetPresetName(v string) {
	x.xxx_hidden_PresetName = v
}

type CachingPolicy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PresetName string
}

func (b0 CachingPolicy_builder) Build() *CachingPolicy {
	m0 := &CachingPolicy{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PresetName = b.PresetName
	return m0
}

type TableProfile struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PresetName         string                 `protobuf:"bytes,1,opt,name=preset_name,json=presetName,proto3"`
	xxx_hidden_StoragePolicy      *StoragePolicy         `protobuf:"bytes,2,opt,name=storage_policy,json=storagePolicy,proto3"`
	xxx_hidden_CompactionPolicy   *CompactionPolicy      `protobuf:"bytes,3,opt,name=compaction_policy,json=compactionPolicy,proto3"`
	xxx_hidden_PartitioningPolicy *PartitioningPolicy    `protobuf:"bytes,4,opt,name=partitioning_policy,json=partitioningPolicy,proto3"`
	xxx_hidden_ExecutionPolicy    *ExecutionPolicy       `protobuf:"bytes,5,opt,name=execution_policy,json=executionPolicy,proto3"`
	xxx_hidden_ReplicationPolicy  *ReplicationPolicy     `protobuf:"bytes,6,opt,name=replication_policy,json=replicationPolicy,proto3"`
	xxx_hidden_CachingPolicy      *CachingPolicy         `protobuf:"bytes,7,opt,name=caching_policy,json=cachingPolicy,proto3"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *TableProfile) Reset() {
	*x = TableProfile{}
	mi := &file_protos_ydb_table_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableProfile) ProtoMessage() {}

func (x *TableProfile) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TableProfile) GetPresetName() string {
	if x != nil {
		return x.xxx_hidden_PresetName
	}
	return ""
}

func (x *TableProfile) GetStoragePolicy() *StoragePolicy {
	if x != nil {
		return x.xxx_hidden_StoragePolicy
	}
	return nil
}

func (x *TableProfile) GetCompactionPolicy() *CompactionPolicy {
	if x != nil {
		return x.xxx_hidden_CompactionPolicy
	}
	return nil
}

func (x *TableProfile) GetPartitioningPolicy() *PartitioningPolicy {
	if x != nil {
		return x.xxx_hidden_PartitioningPolicy
	}
	return nil
}

func (x *TableProfile) GetExecutionPolicy() *ExecutionPolicy {
	if x != nil {
		return x.xxx_hidden_ExecutionPolicy
	}
	return nil
}

func (x *TableProfile) GetReplicationPolicy() *ReplicationPolicy {
	if x != nil {
		return x.xxx_hidden_ReplicationPolicy
	}
	return nil
}

func (x *TableProfile) GetCachingPolicy() *CachingPolicy {
	if x != nil {
		return x.xxx_hidden_CachingPolicy
	}
	return nil
}

func (x *TableProfile) SetPresetName(v string) {
	x.xxx_hidden_PresetName = v
}

func (x *TableProfile) SetStoragePolicy(v *StoragePolicy) {
	x.xxx_hidden_StoragePolicy = v
}

func (x *TableProfile) SetCompactionPolicy(v *CompactionPolicy) {
	x.xxx_hidden_CompactionPolicy = v
}

func (x *TableProfile) SetPartitioningPolicy(v *PartitioningPolicy) {
	x.xxx_hidden_PartitioningPolicy = v
}

func (x *TableProfile) SetExecutionPolicy(v *ExecutionPolicy) {
	x.xxx_hidden_ExecutionPolicy = v
}

func (x *TableProfile) SetReplicationPolicy(v *ReplicationPolicy) {
	x.xxx_hidden_ReplicationPolicy = v
}

func (x *TableProfile) SetCachingPolicy(v *CachingPolicy) {
	x.xxx_hidden_CachingPolicy = v
}

func (x *TableProfile) HasStoragePolicy() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StoragePolicy != nil
}

func (x *TableProfile) HasCompactionPolicy() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CompactionPolicy != nil
}

func (x *TableProfile) HasPartitioningPolicy() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PartitioningPolicy != nil
}

func (x *TableProfile) HasExecutionPolicy() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ExecutionPolicy != nil
}

func (x *TableProfile) HasReplicationPolicy() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ReplicationPolicy != nil
}

func (x *TableProfile) HasCachingPolicy() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CachingPolicy != nil
}

func (x *TableProfile) ClearStoragePolicy() {
	x.xxx_hidden_StoragePolicy = nil
}

func (x *TableProfile) ClearCompactionPolicy() {
	x.xxx_hidden_CompactionPolicy = nil
}

func (x *TableProfile) ClearPartitioningPolicy() {
	x.xxx_hidden_PartitioningPolicy = nil
}

func (x *TableProfile) ClearExecutionPolicy() {
	x.xxx_hidden_ExecutionPolicy = nil
}

func (x *TableProfile) ClearReplicationPolicy() {
	x.xxx_hidden_ReplicationPolicy = nil
}

func (x *TableProfile) ClearCachingPolicy() {
	x.xxx_hidden_CachingPolicy = nil
}

type TableProfile_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PresetName         string
	StoragePolicy      *StoragePolicy
	CompactionPolicy   *CompactionPolicy
	PartitioningPolicy *PartitioningPolicy
	ExecutionPolicy    *ExecutionPolicy
	ReplicationPolicy  *ReplicationPolicy
	CachingPolicy      *CachingPolicy
}

func (b0 TableProfile_builder) Build() *TableProfile {
	m0 := &TableProfile{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PresetName = b.PresetName
	x.xxx_hidden_StoragePolicy = b.StoragePolicy
	x.xxx_hidden_CompactionPolicy = b.CompactionPolicy
	x.xxx_hidden_PartitioningPolicy = b.PartitioningPolicy
	x.xxx_hidden_ExecutionPolicy = b.ExecutionPolicy
	x.xxx_hidden_ReplicationPolicy = b.ReplicationPolicy
	x.xxx_hidden_CachingPolicy = b.CachingPolicy
	return m0
}

type SequenceDescription struct {
	state                  protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                     `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
	xxx_hidden_MinValue    int64                       `protobuf:"zigzag64,2,opt,name=min_value,json=minValue,proto3,oneof"`
	xxx_hidden_MaxValue    int64                       `protobuf:"zigzag64,3,opt,name=max_value,json=maxValue,proto3,oneof"`
	xxx_hidden_StartValue  int64                       `protobuf:"zigzag64,4,opt,name=start_value,json=startValue,proto3,oneof"`
	xxx_hidden_Cache       uint64                      `protobuf:"varint,5,opt,name=cache,proto3,oneof"`
	xxx_hidden_Increment   int64                       `protobuf:"zigzag64,6,opt,name=increment,proto3,oneof"`
	xxx_hidden_Cycle       bool                        `protobuf:"varint,7,opt,name=cycle,proto3,oneof"`
	xxx_hidden_SetVal      *SequenceDescription_SetVal `protobuf:"bytes,8,opt,name=set_val,json=setVal,proto3,oneof"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SequenceDescription) Reset() {
	*x = SequenceDescription{}
	mi := &file_protos_ydb_table_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequenceDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequenceDescription) ProtoMessage() {}

func (x *SequenceDescription) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SequenceDescription) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *SequenceDescription) GetMinValue() int64 {
	if x != nil {
		return x.xxx_hidden_MinValue
	}
	return 0
}

func (x *SequenceDescription) GetMaxValue() int64 {
	if x != nil {
		return x.xxx_hidden_MaxValue
	}
	return 0
}

func (x *SequenceDescription) GetStartValue() int64 {
	if x != nil {
		return x.xxx_hidden_StartValue
	}
	return 0
}

func (x *SequenceDescription) GetCache() uint64 {
	if x != nil {
		return x.xxx_hidden_Cache
	}
	return 0
}

func (x *SequenceDescription) GetIncrement() int64 {
	if x != nil {
		return x.xxx_hidden_Increment
	}
	return 0
}

func (x *SequenceDescription) GetCycle() bool {
	if x != nil {
		return x.xxx_hidden_Cycle
	}
	return false
}

func (x *SequenceDescription) GetSetVal() *SequenceDescription_SetVal {
	if x != nil {
		return x.xxx_hidden_SetVal
	}
	return nil
}

func (x *SequenceDescription) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *SequenceDescription) SetMinValue(v int64) {
	x.xxx_hidden_MinValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *SequenceDescription) SetMaxValue(v int64) {
	x.xxx_hidden_MaxValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *SequenceDescription) SetStartValue(v int64) {
	x.xxx_hidden_StartValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *SequenceDescription) SetCache(v uint64) {
	x.xxx_hidden_Cache = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *SequenceDescription) SetIncrement(v int64) {
	x.xxx_hidden_Increment = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *SequenceDescription) SetCycle(v bool) {
	x.xxx_hidden_Cycle = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *SequenceDescription) SetSetVal(v *SequenceDescription_SetVal) {
	x.xxx_hidden_SetVal = v
}

func (x *SequenceDescription) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SequenceDescription) HasMinValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SequenceDescription) HasMaxValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SequenceDescription) HasStartValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *SequenceDescription) HasCache() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *SequenceDescription) HasIncrement() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *SequenceDescription) HasCycle() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *SequenceDescription) HasSetVal() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SetVal != nil
}

func (x *SequenceDescription) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *SequenceDescription) ClearMinValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MinValue = 0
}

func (x *SequenceDescription) ClearMaxValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MaxValue = 0
}

func (x *SequenceDescription) ClearStartValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_StartValue = 0
}

func (x *SequenceDescription) ClearCache() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Cache = 0
}

func (x *SequenceDescription) ClearIncrement() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Increment = 0
}

func (x *SequenceDescription) ClearCycle() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Cycle = false
}

func (x *SequenceDescription) ClearSetVal() {
	x.xxx_hidden_SetVal = nil
}

type SequenceDescription_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name       *string
	MinValue   *int64
	MaxValue   *int64
	StartValue *int64
	Cache      *uint64
	Increment  *int64
	Cycle      *bool
	SetVal     *SequenceDescription_SetVal
}

func (b0 SequenceDescription_builder) Build() *SequenceDescription {
	m0 := &SequenceDescription{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_Name = b.Name
	}
	if b.MinValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_MinValue = *b.MinValue
	}
	if b.MaxValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_MaxValue = *b.MaxValue
	}
	if b.StartValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_StartValue = *b.StartValue
	}
	if b.Cache != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_Cache = *b.Cache
	}
	if b.Increment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_Increment = *b.Increment
	}
	if b.Cycle != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_Cycle = *b.Cycle
	}
	x.xxx_hidden_SetVal = b.SetVal
	return m0
}

type ColumnMeta struct {
	state                   protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Name         string                    `protobuf:"bytes,1,opt,name=name,proto3"`
	xxx_hidden_Type         *Ydb.Type                 `protobuf:"bytes,2,opt,name=type,proto3"`
	xxx_hidden_Family       string                    `protobuf:"bytes,3,opt,name=family,proto3"`
	xxx_hidden_NotNull      bool                      `protobuf:"varint,4,opt,name=not_null,json=notNull,proto3,oneof"`
	xxx_hidden_DefaultValue isColumnMeta_DefaultValue `protobuf_oneof:"default_value"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ColumnMeta) Reset() {
	*x = ColumnMeta{}
	mi := &file_protos_ydb_table_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnMeta) ProtoMessage() {}

func (x *ColumnMeta) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ColumnMeta) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *ColumnMeta) GetType() *Ydb.Type {
	if x != nil {
		return x.xxx_hidden_Type
	}
	return nil
}

func (x *ColumnMeta) GetFamily() string {
	if x != nil {
		return x.xxx_hidden_Family
	}
	return ""
}

func (x *ColumnMeta) GetNotNull() bool {
	if x != nil {
		return x.xxx_hidden_NotNull
	}
	return false
}

func (x *ColumnMeta) GetFromLiteral() *Ydb.TypedValue {
	if x != nil {
		if x, ok := x.xxx_hidden_DefaultValue.(*columnMeta_FromLiteral); ok {
			return x.FromLiteral
		}
	}
	return nil
}

func (x *ColumnMeta) GetFromSequence() *SequenceDescription {
	if x != nil {
		if x, ok := x.xxx_hidden_DefaultValue.(*columnMeta_FromSequence); ok {
			return x.FromSequence
		}
	}
	return nil
}

func (x *ColumnMeta) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *ColumnMeta) SetType(v *Ydb.Type) {
	x.xxx_hidden_Type = v
}

func (x *ColumnMeta) SetFamily(v string) {
	x.xxx_hidden_Family = v
}

func (x *ColumnMeta) SetNotNull(v bool) {
	x.xxx_hidden_NotNull = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *ColumnMeta) SetFromLiteral(v *Ydb.TypedValue) {
	if v == nil {
		x.xxx_hidden_DefaultValue = nil
		return
	}
	x.xxx_hidden_DefaultValue = &columnMeta_FromLiteral{v}
}

func (x *ColumnMeta) SetFromSequence(v *SequenceDescription) {
	if v == nil {
		x.xxx_hidden_DefaultValue = nil
		return
	}
	x.xxx_hidden_DefaultValue = &columnMeta_FromSequence{v}
}

func (x *ColumnMeta) HasType() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Type != nil
}

func (x *ColumnMeta) HasNotNull() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ColumnMeta) HasDefaultValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DefaultValue != nil
}

func (x *ColumnMeta) HasFromLiteral() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_DefaultValue.(*columnMeta_FromLiteral)
	return ok
}

func (x *ColumnMeta) HasFromSequence() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_DefaultValue.(*columnMeta_FromSequence)
	return ok
}

func (x *ColumnMeta) ClearType() {
	x.xxx_hidden_Type = nil
}

func (x *ColumnMeta) ClearNotNull() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_NotNull = false
}

func (x *ColumnMeta) ClearDefaultValue() {
	x.xxx_hidden_DefaultValue = nil
}

func (x *ColumnMeta) ClearFromLiteral() {
	if _, ok := x.xxx_hidden_DefaultValue.(*columnMeta_FromLiteral); ok {
		x.xxx_hidden_DefaultValue = nil
	}
}

func (x *ColumnMeta) ClearFromSequence() {
	if _, ok := x.xxx_hidden_DefaultValue.(*columnMeta_FromSequence); ok {
		x.xxx_hidden_DefaultValue = nil
	}
}

const ColumnMeta_DefaultValue_not_set_case case_ColumnMeta_DefaultValue = 0
const ColumnMeta_FromLiteral_case case_ColumnMeta_DefaultValue = 5
const ColumnMeta_FromSequence_case case_ColumnMeta_DefaultValue = 6

func (x *ColumnMeta) WhichDefaultValue() case_ColumnMeta_DefaultValue {
	if x == nil {
		return ColumnMeta_DefaultValue_not_set_case
	}
	switch x.xxx_hidden_DefaultValue.(type) {
	case *columnMeta_FromLiteral:
		return ColumnMeta_FromLiteral_case
	case *columnMeta_FromSequence:
		return ColumnMeta_FromSequence_case
	default:
		return ColumnMeta_DefaultValue_not_set_case
	}
}

type ColumnMeta_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Name of column
	Name string
	// Type of column
	Type *Ydb.Type
	// Column family name of the column
	Family string
	// Column nullability
	NotNull *bool
	// Column default value option

	// Fields of oneof xxx_hidden_DefaultValue:
	FromLiteral  *Ydb.TypedValue
	FromSequence *SequenceDescription
	// -- end of xxx_hidden_DefaultValue
}

func (b0 ColumnMeta_builder) Build() *ColumnMeta {
	m0 := &ColumnMeta{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Type = b.Type
	x.xxx_hidden_Family = b.Family
	if b.NotNull != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_NotNull = *b.NotNull
	}
	if b.FromLiteral != nil {
		x.xxx_hidden_DefaultValue = &columnMeta_FromLiteral{b.FromLiteral}
	}
	if b.FromSequence != nil {
		x.xxx_hidden_DefaultValue = &columnMeta_FromSequence{b.FromSequence}
	}
	return m0
}

type case_ColumnMeta_DefaultValue protoreflect.FieldNumber

func (x case_ColumnMeta_DefaultValue) String() string {
	md := file_protos_ydb_table_proto_msgTypes[30].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isColumnMeta_DefaultValue interface {
	isColumnMeta_DefaultValue()
}

type columnMeta_FromLiteral struct {
	FromLiteral *Ydb.TypedValue `protobuf:"bytes,5,opt,name=from_literal,json=fromLiteral,proto3,oneof"`
}

type columnMeta_FromSequence struct {
	FromSequence *SequenceDescription `protobuf:"bytes,6,opt,name=from_sequence,json=fromSequence,proto3,oneof"`
}

func (*columnMeta_FromLiteral) isColumnMeta_DefaultValue() {}

func (*columnMeta_FromSequence) isColumnMeta_DefaultValue() {}

type DateTypeColumnModeSettings struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ColumnName         string                 `protobuf:"bytes,1,opt,name=column_name,json=columnName,proto3"`
	xxx_hidden_ExpireAfterSeconds uint32                 `protobuf:"varint,2,opt,name=expire_after_seconds,json=expireAfterSeconds,proto3"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *DateTypeColumnModeSettings) Reset() {
	*x = DateTypeColumnModeSettings{}
	mi := &file_protos_ydb_table_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DateTypeColumnModeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateTypeColumnModeSettings) ProtoMessage() {}

func (x *DateTypeColumnModeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DateTypeColumnModeSettings) GetColumnName() string {
	if x != nil {
		return x.xxx_hidden_ColumnName
	}
	return ""
}

func (x *DateTypeColumnModeSettings) GetExpireAfterSeconds() uint32 {
	if x != nil {
		return x.xxx_hidden_ExpireAfterSeconds
	}
	return 0
}

func (x *DateTypeColumnModeSettings) SetColumnName(v string) {
	x.xxx_hidden_ColumnName = v
}

func (x *DateTypeColumnModeSettings) SetExpireAfterSeconds(v uint32) {
	x.xxx_hidden_ExpireAfterSeconds = v
}

type DateTypeColumnModeSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The column type must be a date type
	ColumnName         string
	ExpireAfterSeconds uint32
}

func (b0 DateTypeColumnModeSettings_builder) Build() *DateTypeColumnModeSettings {
	m0 := &DateTypeColumnModeSettings{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ColumnName = b.ColumnName
	x.xxx_hidden_ExpireAfterSeconds = b.ExpireAfterSeconds
	return m0
}

type ValueSinceUnixEpochModeSettings struct {
	state                         protoimpl.MessageState               `protogen:"opaque.v1"`
	xxx_hidden_ColumnName         string                               `protobuf:"bytes,1,opt,name=column_name,json=columnName,proto3"`
	xxx_hidden_ColumnUnit         ValueSinceUnixEpochModeSettings_Unit `protobuf:"varint,2,opt,name=column_unit,json=columnUnit,proto3,enum=Ydb.Table.ValueSinceUnixEpochModeSettings_Unit"`
	xxx_hidden_ExpireAfterSeconds uint32                               `protobuf:"varint,3,opt,name=expire_after_seconds,json=expireAfterSeconds,proto3"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ValueSinceUnixEpochModeSettings) Reset() {
	*x = ValueSinceUnixEpochModeSettings{}
	mi := &file_protos_ydb_table_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValueSinceUnixEpochModeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueSinceUnixEpochModeSettings) ProtoMessage() {}

func (x *ValueSinceUnixEpochModeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ValueSinceUnixEpochModeSettings) GetColumnName() string {
	if x != nil {
		return x.xxx_hidden_ColumnName
	}
	return ""
}

func (x *ValueSinceUnixEpochModeSettings) GetColumnUnit() ValueSinceUnixEpochModeSettings_Unit {
	if x != nil {
		return x.xxx_hidden_ColumnUnit
	}
	return ValueSinceUnixEpochModeSettings_UNIT_UNSPECIFIED
}

func (x *ValueSinceUnixEpochModeSettings) GetExpireAfterSeconds() uint32 {
	if x != nil {
		return x.xxx_hidden_ExpireAfterSeconds
	}
	return 0
}

func (x *ValueSinceUnixEpochModeSettings) SetColumnName(v string) {
	x.xxx_hidden_ColumnName = v
}

func (x *ValueSinceUnixEpochModeSettings) SetColumnUnit(v ValueSinceUnixEpochModeSettings_Unit) {
	x.xxx_hidden_ColumnUnit = v
}

func (x *ValueSinceUnixEpochModeSettings) SetExpireAfterSeconds(v uint32) {
	x.xxx_hidden_ExpireAfterSeconds = v
}

type ValueSinceUnixEpochModeSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The column type must be one of:
	// - Uint32
	// - Uint64
	// - DyNumber
	ColumnName string
	// Interpretation of the value stored in <column_name>
	ColumnUnit ValueSinceUnixEpochModeSettings_Unit
	// This option is always interpreted as seconds regardless of the
	// <column_unit> value.
	ExpireAfterSeconds uint32
}

func (b0 ValueSinceUnixEpochModeSettings_builder) Build() *ValueSinceUnixEpochModeSettings {
	m0 := &ValueSinceUnixEpochModeSettings{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ColumnName = b.ColumnName
	x.xxx_hidden_ColumnUnit = b.ColumnUnit
	x.xxx_hidden_ExpireAfterSeconds = b.ExpireAfterSeconds
	return m0
}

type TtlSettings struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Mode               isTtlSettings_Mode     `protobuf_oneof:"mode"`
	xxx_hidden_RunIntervalSeconds uint32                 `protobuf:"varint,3,opt,name=run_interval_seconds,json=runIntervalSeconds,proto3"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *TtlSettings) Reset() {
	*x = TtlSettings{}
	mi := &file_protos_ydb_table_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TtlSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TtlSettings) ProtoMessage() {}

func (x *TtlSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TtlSettings) GetDateTypeColumn() *DateTypeColumnModeSettings {
	if x != nil {
		if x, ok := x.xxx_hidden_Mode.(*ttlSettings_DateTypeColumn); ok {
			return x.DateTypeColumn
		}
	}
	return nil
}

func (x *TtlSettings) GetValueSinceUnixEpoch() *ValueSinceUnixEpochModeSettings {
	if x != nil {
		if x, ok := x.xxx_hidden_Mode.(*ttlSettings_ValueSinceUnixEpoch); ok {
			return x.ValueSinceUnixEpoch
		}
	}
	return nil
}

func (x *TtlSettings) GetRunIntervalSeconds() uint32 {
	if x != nil {
		return x.xxx_hidden_RunIntervalSeconds
	}
	return 0
}

func (x *TtlSettings) SetDateTypeColumn(v *DateTypeColumnModeSettings) {
	if v == nil {
		x.xxx_hidden_Mode = nil
		return
	}
	x.xxx_hidden_Mode = &ttlSettings_DateTypeColumn{v}
}

func (x *TtlSettings) SetValueSinceUnixEpoch(v *ValueSinceUnixEpochModeSettings) {
	if v == nil {
		x.xxx_hidden_Mode = nil
		return
	}
	x.xxx_hidden_Mode = &ttlSettings_ValueSinceUnixEpoch{v}
}

func (x *TtlSettings) SetRunIntervalSeconds(v uint32) {
	x.xxx_hidden_RunIntervalSeconds = v
}

func (x *TtlSettings) HasMode() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Mode != nil
}

func (x *TtlSettings) HasDateTypeColumn() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Mode.(*ttlSettings_DateTypeColumn)
	return ok
}

func (x *TtlSettings) HasValueSinceUnixEpoch() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Mode.(*ttlSettings_ValueSinceUnixEpoch)
	return ok
}

func (x *TtlSettings) ClearMode() {
	x.xxx_hidden_Mode = nil
}

func (x *TtlSettings) ClearDateTypeColumn() {
	if _, ok := x.xxx_hidden_Mode.(*ttlSettings_DateTypeColumn); ok {
		x.xxx_hidden_Mode = nil
	}
}

func (x *TtlSettings) ClearValueSinceUnixEpoch() {
	if _, ok := x.xxx_hidden_Mode.(*ttlSettings_ValueSinceUnixEpoch); ok {
		x.xxx_hidden_Mode = nil
	}
}

const TtlSettings_Mode_not_set_case case_TtlSettings_Mode = 0
const TtlSettings_DateTypeColumn_case case_TtlSettings_Mode = 1
const TtlSettings_ValueSinceUnixEpoch_case case_TtlSettings_Mode = 2

func (x *TtlSettings) WhichMode() case_TtlSettings_Mode {
	if x == nil {
		return TtlSettings_Mode_not_set_case
	}
	switch x.xxx_hidden_Mode.(type) {
	case *ttlSettings_DateTypeColumn:
		return TtlSettings_DateTypeColumn_case
	case *ttlSettings_ValueSinceUnixEpoch:
		return TtlSettings_ValueSinceUnixEpoch_case
	default:
		return TtlSettings_Mode_not_set_case
	}
}

type TtlSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Mode:
	DateTypeColumn      *DateTypeColumnModeSettings
	ValueSinceUnixEpoch *ValueSinceUnixEpochModeSettings
	// -- end of xxx_hidden_Mode
	// How often to run BRO on the same partition.
	// BRO will not be started more often, but may be started less often.
	RunIntervalSeconds uint32
}

func (b0 TtlSettings_builder) Build() *TtlSettings {
	m0 := &TtlSettings{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DateTypeColumn != nil {
		x.xxx_hidden_Mode = &ttlSettings_DateTypeColumn{b.DateTypeColumn}
	}
	if b.ValueSinceUnixEpoch != nil {
		x.xxx_hidden_Mode = &ttlSettings_ValueSinceUnixEpoch{b.ValueSinceUnixEpoch}
	}
	x.xxx_hidden_RunIntervalSeconds = b.RunIntervalSeconds
	return m0
}

type case_TtlSettings_Mode protoreflect.FieldNumber

func (x case_TtlSettings_Mode) String() string {
	md := file_protos_ydb_table_proto_msgTypes[33].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isTtlSettings_Mode interface {
	isTtlSettings_Mode()
}

type ttlSettings_DateTypeColumn struct {
	DateTypeColumn *DateTypeColumnModeSettings `protobuf:"bytes,1,opt,name=date_type_column,json=dateTypeColumn,proto3,oneof"`
}

type ttlSettings_ValueSinceUnixEpoch struct {
	ValueSinceUnixEpoch *ValueSinceUnixEpochModeSettings `protobuf:"bytes,2,opt,name=value_since_unix_epoch,json=valueSinceUnixEpoch,proto3,oneof"`
}

func (*ttlSettings_DateTypeColumn) isTtlSettings_Mode() {}

func (*ttlSettings_ValueSinceUnixEpoch) isTtlSettings_Mode() {}

type StorageSettings struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TabletCommitLog0   *StoragePool           `protobuf:"bytes,1,opt,name=tablet_commit_log0,json=tabletCommitLog0,proto3"`
	xxx_hidden_TabletCommitLog1   *StoragePool           `protobuf:"bytes,2,opt,name=tablet_commit_log1,json=tabletCommitLog1,proto3"`
	xxx_hidden_External           *StoragePool           `protobuf:"bytes,4,opt,name=external,proto3"`
	xxx_hidden_StoreExternalBlobs Ydb.FeatureFlag_Status `protobuf:"varint,5,opt,name=store_external_blobs,json=storeExternalBlobs,proto3,enum=Ydb.FeatureFlag_Status"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *StorageSettings) Reset() {
	*x = StorageSettings{}
	mi := &file_protos_ydb_table_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageSettings) ProtoMessage() {}

func (x *StorageSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StorageSettings) GetTabletCommitLog0() *StoragePool {
	if x != nil {
		return x.xxx_hidden_TabletCommitLog0
	}
	return nil
}

func (x *StorageSettings) GetTabletCommitLog1() *StoragePool {
	if x != nil {
		return x.xxx_hidden_TabletCommitLog1
	}
	return nil
}

func (x *StorageSettings) GetExternal() *StoragePool {
	if x != nil {
		return x.xxx_hidden_External
	}
	return nil
}

func (x *StorageSettings) GetStoreExternalBlobs() Ydb.FeatureFlag_Status {
	if x != nil {
		return x.xxx_hidden_StoreExternalBlobs
	}
	return Ydb.FeatureFlag_Status(0)
}

func (x *StorageSettings) SetTabletCommitLog0(v *StoragePool) {
	x.xxx_hidden_TabletCommitLog0 = v
}

func (x *StorageSettings) SetTabletCommitLog1(v *StoragePool) {
	x.xxx_hidden_TabletCommitLog1 = v
}

func (x *StorageSettings) SetExternal(v *StoragePool) {
	x.xxx_hidden_External = v
}

func (x *StorageSettings) SetStoreExternalBlobs(v Ydb.FeatureFlag_Status) {
	x.xxx_hidden_StoreExternalBlobs = v
}

func (x *StorageSettings) HasTabletCommitLog0() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TabletCommitLog0 != nil
}

func (x *StorageSettings) HasTabletCommitLog1() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TabletCommitLog1 != nil
}

func (x *StorageSettings) HasExternal() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_External != nil
}

func (x *StorageSettings) ClearTabletCommitLog0() {
	x.xxx_hidden_TabletCommitLog0 = nil
}

func (x *StorageSettings) ClearTabletCommitLog1() {
	x.xxx_hidden_TabletCommitLog1 = nil
}

func (x *StorageSettings) ClearExternal() {
	x.xxx_hidden_External = nil
}

type StorageSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// This specifies internal channel 0 commit log storage pool
	// Fastest available storage recommended, negligible amounts of short-lived data
	TabletCommitLog0 *StoragePool
	// This specifies internal channel 1 commit log storage pool
	// Fastest available storage recommended, small amounts of short-lived data
	TabletCommitLog1 *StoragePool
	// This specifies external blobs storage pool
	External *StoragePool
	// Optionally store large values in "external blobs"
	// WARNING: DO NOT USE
	// This feature is experimental and should not be used, restrictions apply:
	// * Table cannot split/merge when this is enabled
	// * Table cannot be copied or backed up when this is enabled
	// * This feature cannot be disabled once enabled for a table
	StoreExternalBlobs Ydb.FeatureFlag_Status
}

func (b0 StorageSettings_builder) Build() *StorageSettings {
	m0 := &StorageSettings{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_TabletCommitLog0 = b.TabletCommitLog0
	x.xxx_hidden_TabletCommitLog1 = b.TabletCommitLog1
	x.xxx_hidden_External = b.External
	x.xxx_hidden_StoreExternalBlobs = b.StoreExternalBlobs
	return m0
}

type ColumnFamily struct {
	state                   protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_Name         string                   `protobuf:"bytes,1,opt,name=name,proto3"`
	xxx_hidden_Data         *StoragePool             `protobuf:"bytes,2,opt,name=data,proto3"`
	xxx_hidden_Compression  ColumnFamily_Compression `protobuf:"varint,3,opt,name=compression,proto3,enum=Ydb.Table.ColumnFamily_Compression"`
	xxx_hidden_KeepInMemory Ydb.FeatureFlag_Status   `protobuf:"varint,4,opt,name=keep_in_memory,json=keepInMemory,proto3,enum=Ydb.FeatureFlag_Status"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ColumnFamily) Reset() {
	*x = ColumnFamily{}
	mi := &file_protos_ydb_table_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnFamily) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnFamily) ProtoMessage() {}

func (x *ColumnFamily) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ColumnFamily) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *ColumnFamily) GetData() *StoragePool {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *ColumnFamily) GetCompression() ColumnFamily_Compression {
	if x != nil {
		return x.xxx_hidden_Compression
	}
	return ColumnFamily_COMPRESSION_UNSPECIFIED
}

func (x *ColumnFamily) GetKeepInMemory() Ydb.FeatureFlag_Status {
	if x != nil {
		return x.xxx_hidden_KeepInMemory
	}
	return Ydb.FeatureFlag_Status(0)
}

func (x *ColumnFamily) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *ColumnFamily) SetData(v *StoragePool) {
	x.xxx_hidden_Data = v
}

func (x *ColumnFamily) SetCompression(v ColumnFamily_Compression) {
	x.xxx_hidden_Compression = v
}

func (x *ColumnFamily) SetKeepInMemory(v Ydb.FeatureFlag_Status) {
	x.xxx_hidden_KeepInMemory = v
}

func (x *ColumnFamily) HasData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data != nil
}

func (x *ColumnFamily) ClearData() {
	x.xxx_hidden_Data = nil
}

type ColumnFamily_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Name of the column family, the name "default" must be used for the
	// primary column family that contains at least primary key columns
	Name string
	// This specifies data storage settings for column family
	Data *StoragePool
	// Optionally specify how data should be compressed
	Compression ColumnFamily_Compression
	// When enabled table data will be kept in memory
	// WARNING: DO NOT USE
	KeepInMemory Ydb.FeatureFlag_Status
}

func (b0 ColumnFamily_builder) Build() *ColumnFamily {
	m0 := &ColumnFamily{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Data = b.Data
	x.xxx_hidden_Compression = b.Compression
	x.xxx_hidden_KeepInMemory = b.KeepInMemory
	return m0
}

type PartitioningSettings struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PartitionBy        []string               `protobuf:"bytes,1,rep,name=partition_by,json=partitionBy,proto3"`
	xxx_hidden_PartitioningBySize Ydb.FeatureFlag_Status `protobuf:"varint,2,opt,name=partitioning_by_size,json=partitioningBySize,proto3,enum=Ydb.FeatureFlag_Status"`
	xxx_hidden_PartitionSizeMb    uint64                 `protobuf:"varint,3,opt,name=partition_size_mb,json=partitionSizeMb,proto3"`
	xxx_hidden_PartitioningByLoad Ydb.FeatureFlag_Status `protobuf:"varint,4,opt,name=partitioning_by_load,json=partitioningByLoad,proto3,enum=Ydb.FeatureFlag_Status"`
	xxx_hidden_MinPartitionsCount uint64                 `protobuf:"varint,6,opt,name=min_partitions_count,json=minPartitionsCount,proto3"`
	xxx_hidden_MaxPartitionsCount uint64                 `protobuf:"varint,7,opt,name=max_partitions_count,json=maxPartitionsCount,proto3"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *PartitioningSettings) Reset() {
	*x = PartitioningSettings{}
	mi := &file_protos_ydb_table_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitioningSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitioningSettings) ProtoMessage() {}

func (x *PartitioningSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PartitioningSettings) GetPartitionBy() []string {
	if x != nil {
		return x.xxx_hidden_PartitionBy
	}
	return nil
}

func (x *PartitioningSettings) GetPartitioningBySize() Ydb.FeatureFlag_Status {
	if x != nil {
		return x.xxx_hidden_PartitioningBySize
	}
	return Ydb.FeatureFlag_Status(0)
}

func (x *PartitioningSettings) GetPartitionSizeMb() uint64 {
	if x != nil {
		return x.xxx_hidden_PartitionSizeMb
	}
	return 0
}

func (x *PartitioningSettings) GetPartitioningByLoad() Ydb.FeatureFlag_Status {
	if x != nil {
		return x.xxx_hidden_PartitioningByLoad
	}
	return Ydb.FeatureFlag_Status(0)
}

func (x *PartitioningSettings) GetMinPartitionsCount() uint64 {
	if x != nil {
		return x.xxx_hidden_MinPartitionsCount
	}
	return 0
}

func (x *PartitioningSettings) GetMaxPartitionsCount() uint64 {
	if x != nil {
		return x.xxx_hidden_MaxPartitionsCount
	}
	return 0
}

func (x *PartitioningSettings) SetPartitionBy(v []string) {
	x.xxx_hidden_PartitionBy = v
}

func (x *PartitioningSettings) SetPartitioningBySize(v Ydb.FeatureFlag_Status) {
	x.xxx_hidden_PartitioningBySize = v
}

func (x *PartitioningSettings) SetPartitionSizeMb(v uint64) {
	x.xxx_hidden_PartitionSizeMb = v
}

func (x *PartitioningSettings) SetPartitioningByLoad(v Ydb.FeatureFlag_Status) {
	x.xxx_hidden_PartitioningByLoad = v
}

func (x *PartitioningSettings) SetMinPartitionsCount(v uint64) {
	x.xxx_hidden_MinPartitionsCount = v
}

func (x *PartitioningSettings) SetMaxPartitionsCount(v uint64) {
	x.xxx_hidden_MaxPartitionsCount = v
}

type PartitioningSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// List of columns to partition by
	PartitionBy []string
	// Enable auto partitioning on reaching upper or lower partition size bound
	PartitioningBySize Ydb.FeatureFlag_Status
	// Preferred partition size for auto partitioning by size, Mb
	PartitionSizeMb uint64
	// Enable auto partitioning based on load on each partition
	PartitioningByLoad Ydb.FeatureFlag_Status
	// Minimum partitions count auto merge would stop working at
	MinPartitionsCount uint64
	// Maximum partitions count auto split would stop working at
	MaxPartitionsCount uint64
}

func (b0 PartitioningSettings_builder) Build() *PartitioningSettings {
	m0 := &PartitioningSettings{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PartitionBy = b.PartitionBy
	x.xxx_hidden_PartitioningBySize = b.PartitioningBySize
	x.xxx_hidden_PartitionSizeMb = b.PartitionSizeMb
	x.xxx_hidden_PartitioningByLoad = b.PartitioningByLoad
	x.xxx_hidden_MinPartitionsCount = b.MinPartitionsCount
	x.xxx_hidden_MaxPartitionsCount = b.MaxPartitionsCount
	return m0
}

type AzReadReplicasSettings struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name              string                 `protobuf:"bytes,1,opt,name=name,proto3"`
	xxx_hidden_ReadReplicasCount uint64                 `protobuf:"varint,2,opt,name=read_replicas_count,json=readReplicasCount,proto3"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *AzReadReplicasSettings) Reset() {
	*x = AzReadReplicasSettings{}
	mi := &file_protos_ydb_table_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AzReadReplicasSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzReadReplicasSettings) ProtoMessage() {}

func (x *AzReadReplicasSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AzReadReplicasSettings) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *AzReadReplicasSettings) GetReadReplicasCount() uint64 {
	if x != nil {
		return x.xxx_hidden_ReadReplicasCount
	}
	return 0
}

func (x *AzReadReplicasSettings) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *AzReadReplicasSettings) SetReadReplicasCount(v uint64) {
	x.xxx_hidden_ReadReplicasCount = v
}

type AzReadReplicasSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// AZ name
	Name string
	// Read replicas count in this AZ
	ReadReplicasCount uint64
}

func (b0 AzReadReplicasSettings_builder) Build() *AzReadReplicasSettings {
	m0 := &AzReadReplicasSettings{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_ReadReplicasCount = b.ReadReplicasCount
	return m0
}

type ClusterReplicasSettings struct {
	state                             protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_AzReadReplicasSettings *[]*AzReadReplicasSettings `protobuf:"bytes,2,rep,name=az_read_replicas_settings,json=azReadReplicasSettings,proto3"`
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *ClusterReplicasSettings) Reset() {
	*x = ClusterReplicasSettings{}
	mi := &file_protos_ydb_table_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterReplicasSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterReplicasSettings) ProtoMessage() {}

func (x *ClusterReplicasSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClusterReplicasSettings) GetAzReadReplicasSettings() []*AzReadReplicasSettings {
	if x != nil {
		if x.xxx_hidden_AzReadReplicasSettings != nil {
			return *x.xxx_hidden_AzReadReplicasSettings
		}
	}
	return nil
}

func (x *ClusterReplicasSettings) SetAzReadReplicasSettings(v []*AzReadReplicasSettings) {
	x.xxx_hidden_AzReadReplicasSettings = &v
}

type ClusterReplicasSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// List of read replicas settings for each AZ
	AzReadReplicasSettings []*AzReadReplicasSettings
}

func (b0 ClusterReplicasSettings_builder) Build() *ClusterReplicasSettings {
	m0 := &ClusterReplicasSettings{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_AzReadReplicasSettings = &b.AzReadReplicasSettings
	return m0
}

type ReadReplicasSettings struct {
	state               protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_Settings isReadReplicasSettings_Settings `protobuf_oneof:"settings"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ReadReplicasSettings) Reset() {
	*x = ReadReplicasSettings{}
	mi := &file_protos_ydb_table_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadReplicasSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReplicasSettings) ProtoMessage() {}

func (x *ReadReplicasSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadReplicasSettings) GetPerAzReadReplicasCount() uint64 {
	if x != nil {
		if x, ok := x.xxx_hidden_Settings.(*readReplicasSettings_PerAzReadReplicasCount); ok {
			return x.PerAzReadReplicasCount
		}
	}
	return 0
}

func (x *ReadReplicasSettings) GetAnyAzReadReplicasCount() uint64 {
	if x != nil {
		if x, ok := x.xxx_hidden_Settings.(*readReplicasSettings_AnyAzReadReplicasCount); ok {
			return x.AnyAzReadReplicasCount
		}
	}
	return 0
}

func (x *ReadReplicasSettings) SetPerAzReadReplicasCount(v uint64) {
	x.xxx_hidden_Settings = &readReplicasSettings_PerAzReadReplicasCount{v}
}

func (x *ReadReplicasSettings) SetAnyAzReadReplicasCount(v uint64) {
	x.xxx_hidden_Settings = &readReplicasSettings_AnyAzReadReplicasCount{v}
}

func (x *ReadReplicasSettings) HasSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Settings != nil
}

func (x *ReadReplicasSettings) HasPerAzReadReplicasCount() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Settings.(*readReplicasSettings_PerAzReadReplicasCount)
	return ok
}

func (x *ReadReplicasSettings) HasAnyAzReadReplicasCount() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Settings.(*readReplicasSettings_AnyAzReadReplicasCount)
	return ok
}

func (x *ReadReplicasSettings) ClearSettings() {
	x.xxx_hidden_Settings = nil
}

func (x *ReadReplicasSettings) ClearPerAzReadReplicasCount() {
	if _, ok := x.xxx_hidden_Settings.(*readReplicasSettings_PerAzReadReplicasCount); ok {
		x.xxx_hidden_Settings = nil
	}
}

func (x *ReadReplicasSettings) ClearAnyAzReadReplicasCount() {
	if _, ok := x.xxx_hidden_Settings.(*readReplicasSettings_AnyAzReadReplicasCount); ok {
		x.xxx_hidden_Settings = nil
	}
}

const ReadReplicasSettings_Settings_not_set_case case_ReadReplicasSettings_Settings = 0
const ReadReplicasSettings_PerAzReadReplicasCount_case case_ReadReplicasSettings_Settings = 1
const ReadReplicasSettings_AnyAzReadReplicasCount_case case_ReadReplicasSettings_Settings = 2

func (x *ReadReplicasSettings) WhichSettings() case_ReadReplicasSettings_Settings {
	if x == nil {
		return ReadReplicasSettings_Settings_not_set_case
	}
	switch x.xxx_hidden_Settings.(type) {
	case *readReplicasSettings_PerAzReadReplicasCount:
		return ReadReplicasSettings_PerAzReadReplicasCount_case
	case *readReplicasSettings_AnyAzReadReplicasCount:
		return ReadReplicasSettings_AnyAzReadReplicasCount_case
	default:
		return ReadReplicasSettings_Settings_not_set_case
	}
}

type ReadReplicasSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Settings:
	// Set equal read replicas count for every AZ
	PerAzReadReplicasCount *uint64
	// Set total replicas count between all AZs
	AnyAzReadReplicasCount *uint64
	// -- end of xxx_hidden_Settings
}

func (b0 ReadReplicasSettings_builder) Build() *ReadReplicasSettings {
	m0 := &ReadReplicasSettings{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PerAzReadReplicasCount != nil {
		x.xxx_hidden_Settings = &readReplicasSettings_PerAzReadReplicasCount{*b.PerAzReadReplicasCount}
	}
	if b.AnyAzReadReplicasCount != nil {
		x.xxx_hidden_Settings = &readReplicasSettings_AnyAzReadReplicasCount{*b.AnyAzReadReplicasCount}
	}
	return m0
}

type case_ReadReplicasSettings_Settings protoreflect.FieldNumber

func (x case_ReadReplicasSettings_Settings) String() string {
	md := file_protos_ydb_table_proto_msgTypes[39].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isReadReplicasSettings_Settings interface {
	isReadReplicasSettings_Settings()
}

type readReplicasSettings_PerAzReadReplicasCount struct {
	// Set equal read replicas count for every AZ
	PerAzReadReplicasCount uint64 `protobuf:"varint,1,opt,name=per_az_read_replicas_count,json=perAzReadReplicasCount,proto3,oneof"`
}

type readReplicasSettings_AnyAzReadReplicasCount struct {
	// Set total replicas count between all AZs
	AnyAzReadReplicasCount uint64 `protobuf:"varint,2,opt,name=any_az_read_replicas_count,json=anyAzReadReplicasCount,proto3,oneof"`
}

func (*readReplicasSettings_PerAzReadReplicasCount) isReadReplicasSettings_Settings() {}

func (*readReplicasSettings_AnyAzReadReplicasCount) isReadReplicasSettings_Settings() {}

type CreateTableRequest struct {
	state                           protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_SessionId            string                          `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_Path                 string                          `protobuf:"bytes,2,opt,name=path,proto3"`
	xxx_hidden_Columns              *[]*ColumnMeta                  `protobuf:"bytes,3,rep,name=columns,proto3"`
	xxx_hidden_PrimaryKey           []string                        `protobuf:"bytes,4,rep,name=primary_key,json=primaryKey,proto3"`
	xxx_hidden_Profile              *TableProfile                   `protobuf:"bytes,5,opt,name=profile,proto3"`
	xxx_hidden_OperationParams      *Ydb_Operations.OperationParams `protobuf:"bytes,6,opt,name=operation_params,json=operationParams,proto3"`
	xxx_hidden_Indexes              *[]*TableIndex                  `protobuf:"bytes,7,rep,name=indexes,proto3"`
	xxx_hidden_TtlSettings          *TtlSettings                    `protobuf:"bytes,8,opt,name=ttl_settings,json=ttlSettings,proto3"`
	xxx_hidden_StorageSettings      *StorageSettings                `protobuf:"bytes,9,opt,name=storage_settings,json=storageSettings,proto3"`
	xxx_hidden_ColumnFamilies       *[]*ColumnFamily                `protobuf:"bytes,10,rep,name=column_families,json=columnFamilies,proto3"`
	xxx_hidden_Attributes           map[string]string               `protobuf:"bytes,11,rep,name=attributes,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_CompactionPolicy     string                          `protobuf:"bytes,12,opt,name=compaction_policy,json=compactionPolicy,proto3"`
	xxx_hidden_Partitions           isCreateTableRequest_Partitions `protobuf_oneof:"partitions"`
	xxx_hidden_PartitioningSettings *PartitioningSettings           `protobuf:"bytes,15,opt,name=partitioning_settings,json=partitioningSettings,proto3"`
	xxx_hidden_KeyBloomFilter       Ydb.FeatureFlag_Status          `protobuf:"varint,16,opt,name=key_bloom_filter,json=keyBloomFilter,proto3,enum=Ydb.FeatureFlag_Status"`
	xxx_hidden_ReadReplicasSettings *ReadReplicasSettings           `protobuf:"bytes,17,opt,name=read_replicas_settings,json=readReplicasSettings,proto3"`
	xxx_hidden_Tiering              string                          `protobuf:"bytes,18,opt,name=tiering,proto3"`
	xxx_hidden_Temporary            bool                            `protobuf:"varint,19,opt,name=temporary,proto3"`
	xxx_hidden_StoreType            StoreType                       `protobuf:"varint,20,opt,name=store_type,json=storeType,proto3,enum=Ydb.Table.StoreType"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *CreateTableRequest) Reset() {
	*x = CreateTableRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableRequest) ProtoMessage() {}

func (x *CreateTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateTableRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *CreateTableRequest) GetPath() string {
	if x != nil {
		return x.xxx_hidden_Path
	}
	return ""
}

func (x *CreateTableRequest) GetColumns() []*ColumnMeta {
	if x != nil {
		if x.xxx_hidden_Columns != nil {
			return *x.xxx_hidden_Columns
		}
	}
	return nil
}

func (x *CreateTableRequest) GetPrimaryKey() []string {
	if x != nil {
		return x.xxx_hidden_PrimaryKey
	}
	return nil
}

func (x *CreateTableRequest) GetProfile() *TableProfile {
	if x != nil {
		return x.xxx_hidden_Profile
	}
	return nil
}

func (x *CreateTableRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *CreateTableRequest) GetIndexes() []*TableIndex {
	if x != nil {
		if x.xxx_hidden_Indexes != nil {
			return *x.xxx_hidden_Indexes
		}
	}
	return nil
}

func (x *CreateTableRequest) GetTtlSettings() *TtlSettings {
	if x != nil {
		return x.xxx_hidden_TtlSettings
	}
	return nil
}

func (x *CreateTableRequest) GetStorageSettings() *StorageSettings {
	if x != nil {
		return x.xxx_hidden_StorageSettings
	}
	return nil
}

func (x *CreateTableRequest) GetColumnFamilies() []*ColumnFamily {
	if x != nil {
		if x.xxx_hidden_ColumnFamilies != nil {
			return *x.xxx_hidden_ColumnFamilies
		}
	}
	return nil
}

func (x *CreateTableRequest) GetAttributes() map[string]string {
	if x != nil {
		return x.xxx_hidden_Attributes
	}
	return nil
}

func (x *CreateTableRequest) GetCompactionPolicy() string {
	if x != nil {
		return x.xxx_hidden_CompactionPolicy
	}
	return ""
}

func (x *CreateTableRequest) GetUniformPartitions() uint64 {
	if x != nil {
		if x, ok := x.xxx_hidden_Partitions.(*createTableRequest_UniformPartitions); ok {
			return x.UniformPartitions
		}
	}
	return 0
}

func (x *CreateTableRequest) GetPartitionAtKeys() *ExplicitPartitions {
	if x != nil {
		if x, ok := x.xxx_hidden_Partitions.(*createTableRequest_PartitionAtKeys); ok {
			return x.PartitionAtKeys
		}
	}
	return nil
}

func (x *CreateTableRequest) GetPartitioningSettings() *PartitioningSettings {
	if x != nil {
		return x.xxx_hidden_PartitioningSettings
	}
	return nil
}

func (x *CreateTableRequest) GetKeyBloomFilter() Ydb.FeatureFlag_Status {
	if x != nil {
		return x.xxx_hidden_KeyBloomFilter
	}
	return Ydb.FeatureFlag_Status(0)
}

func (x *CreateTableRequest) GetReadReplicasSettings() *ReadReplicasSettings {
	if x != nil {
		return x.xxx_hidden_ReadReplicasSettings
	}
	return nil
}

func (x *CreateTableRequest) GetTiering() string {
	if x != nil {
		return x.xxx_hidden_Tiering
	}
	return ""
}

func (x *CreateTableRequest) GetTemporary() bool {
	if x != nil {
		return x.xxx_hidden_Temporary
	}
	return false
}

func (x *CreateTableRequest) GetStoreType() StoreType {
	if x != nil {
		return x.xxx_hidden_StoreType
	}
	return StoreType_STORE_TYPE_UNSPECIFIED
}

func (x *CreateTableRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *CreateTableRequest) SetPath(v string) {
	x.xxx_hidden_Path = v
}

func (x *CreateTableRequest) SetColumns(v []*ColumnMeta) {
	x.xxx_hidden_Columns = &v
}

func (x *CreateTableRequest) SetPrimaryKey(v []string) {
	x.xxx_hidden_PrimaryKey = v
}

func (x *CreateTableRequest) SetProfile(v *TableProfile) {
	x.xxx_hidden_Profile = v
}

func (x *CreateTableRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *CreateTableRequest) SetIndexes(v []*TableIndex) {
	x.xxx_hidden_Indexes = &v
}

func (x *CreateTableRequest) SetTtlSettings(v *TtlSettings) {
	x.xxx_hidden_TtlSettings = v
}

func (x *CreateTableRequest) SetStorageSettings(v *StorageSettings) {
	x.xxx_hidden_StorageSettings = v
}

func (x *CreateTableRequest) SetColumnFamilies(v []*ColumnFamily) {
	x.xxx_hidden_ColumnFamilies = &v
}

func (x *CreateTableRequest) SetAttributes(v map[string]string) {
	x.xxx_hidden_Attributes = v
}

func (x *CreateTableRequest) SetCompactionPolicy(v string) {
	x.xxx_hidden_CompactionPolicy = v
}

func (x *CreateTableRequest) SetUniformPartitions(v uint64) {
	x.xxx_hidden_Partitions = &createTableRequest_UniformPartitions{v}
}

func (x *CreateTableRequest) SetPartitionAtKeys(v *ExplicitPartitions) {
	if v == nil {
		x.xxx_hidden_Partitions = nil
		return
	}
	x.xxx_hidden_Partitions = &createTableRequest_PartitionAtKeys{v}
}

func (x *CreateTableRequest) SetPartitioningSettings(v *PartitioningSettings) {
	x.xxx_hidden_PartitioningSettings = v
}

func (x *CreateTableRequest) SetKeyBloomFilter(v Ydb.FeatureFlag_Status) {
	x.xxx_hidden_KeyBloomFilter = v
}

func (x *CreateTableRequest) SetReadReplicasSettings(v *ReadReplicasSettings) {
	x.xxx_hidden_ReadReplicasSettings = v
}

func (x *CreateTableRequest) SetTiering(v string) {
	x.xxx_hidden_Tiering = v
}

func (x *CreateTableRequest) SetTemporary(v bool) {
	x.xxx_hidden_Temporary = v
}

func (x *CreateTableRequest) SetStoreType(v StoreType) {
	x.xxx_hidden_StoreType = v
}

func (x *CreateTableRequest) HasProfile() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Profile != nil
}

func (x *CreateTableRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *CreateTableRequest) HasTtlSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TtlSettings != nil
}

func (x *CreateTableRequest) HasStorageSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StorageSettings != nil
}

func (x *CreateTableRequest) HasPartitions() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Partitions != nil
}

func (x *CreateTableRequest) HasUniformPartitions() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Partitions.(*createTableRequest_UniformPartitions)
	return ok
}

func (x *CreateTableRequest) HasPartitionAtKeys() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Partitions.(*createTableRequest_PartitionAtKeys)
	return ok
}

func (x *CreateTableRequest) HasPartitioningSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PartitioningSettings != nil
}

func (x *CreateTableRequest) HasReadReplicasSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ReadReplicasSettings != nil
}

func (x *CreateTableRequest) ClearProfile() {
	x.xxx_hidden_Profile = nil
}

func (x *CreateTableRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

func (x *CreateTableRequest) ClearTtlSettings() {
	x.xxx_hidden_TtlSettings = nil
}

func (x *CreateTableRequest) ClearStorageSettings() {
	x.xxx_hidden_StorageSettings = nil
}

func (x *CreateTableRequest) ClearPartitions() {
	x.xxx_hidden_Partitions = nil
}

func (x *CreateTableRequest) ClearUniformPartitions() {
	if _, ok := x.xxx_hidden_Partitions.(*createTableRequest_UniformPartitions); ok {
		x.xxx_hidden_Partitions = nil
	}
}

func (x *CreateTableRequest) ClearPartitionAtKeys() {
	if _, ok := x.xxx_hidden_Partitions.(*createTableRequest_PartitionAtKeys); ok {
		x.xxx_hidden_Partitions = nil
	}
}

func (x *CreateTableRequest) ClearPartitioningSettings() {
	x.xxx_hidden_PartitioningSettings = nil
}

func (x *CreateTableRequest) ClearReadReplicasSettings() {
	x.xxx_hidden_ReadReplicasSettings = nil
}

const CreateTableRequest_Partitions_not_set_case case_CreateTableRequest_Partitions = 0
const CreateTableRequest_UniformPartitions_case case_CreateTableRequest_Partitions = 13
const CreateTableRequest_PartitionAtKeys_case case_CreateTableRequest_Partitions = 14

func (x *CreateTableRequest) WhichPartitions() case_CreateTableRequest_Partitions {
	if x == nil {
		return CreateTableRequest_Partitions_not_set_case
	}
	switch x.xxx_hidden_Partitions.(type) {
	case *createTableRequest_UniformPartitions:
		return CreateTableRequest_UniformPartitions_case
	case *createTableRequest_PartitionAtKeys:
		return CreateTableRequest_PartitionAtKeys_case
	default:
		return CreateTableRequest_Partitions_not_set_case
	}
}

type CreateTableRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier
	SessionId string
	// Full path
	Path string
	// Columns (name, type)
	Columns []*ColumnMeta
	// List of columns used as primary key
	PrimaryKey []string
	// Table profile
	Profile         *TableProfile
	OperationParams *Ydb_Operations.OperationParams
	// List of secondary indexes
	Indexes []*TableIndex
	// Table rows time to live settings
	TtlSettings *TtlSettings
	// Storage settings for table
	StorageSettings *StorageSettings
	// Column families
	ColumnFamilies []*ColumnFamily
	// Attributes. Total size is limited to 10 KB.
	Attributes map[string]string
	// Predefined named set of settings for table compaction ["default", "small_table", "log_table"].
	CompactionPolicy string
	// Either one of the following partitions options can be specified

	// Fields of oneof xxx_hidden_Partitions:
	// Enable uniform partitioning using given partitions count.
	// The first components of primary key must have Uint32/Uint64 type.
	UniformPartitions *uint64
	// Explicitly specify key values which are used as borders for created partitions.
	PartitionAtKeys *ExplicitPartitions
	// -- end of xxx_hidden_Partitions
	// Partitioning settings for table
	PartitioningSettings *PartitioningSettings
	// Bloom filter by key
	KeyBloomFilter Ydb.FeatureFlag_Status
	// Read replicas settings for table
	ReadReplicasSettings *ReadReplicasSettings
	// Tiering rules name. It specifies how data migrates from one tier (logical storage) to another.
	Tiering string
	// Is temporary table
	Temporary bool
	// Is table column or row oriented
	StoreType StoreType
}

func (b0 CreateTableRequest_builder) Build() *CreateTableRequest {
	m0 := &CreateTableRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_Path = b.Path
	x.xxx_hidden_Columns = &b.Columns
	x.xxx_hidden_PrimaryKey = b.PrimaryKey
	x.xxx_hidden_Profile = b.Profile
	x.xxx_hidden_OperationParams = b.OperationParams
	x.xxx_hidden_Indexes = &b.Indexes
	x.xxx_hidden_TtlSettings = b.TtlSettings
	x.xxx_hidden_StorageSettings = b.StorageSettings
	x.xxx_hidden_ColumnFamilies = &b.ColumnFamilies
	x.xxx_hidden_Attributes = b.Attributes
	x.xxx_hidden_CompactionPolicy = b.CompactionPolicy
	if b.UniformPartitions != nil {
		x.xxx_hidden_Partitions = &createTableRequest_UniformPartitions{*b.UniformPartitions}
	}
	if b.PartitionAtKeys != nil {
		x.xxx_hidden_Partitions = &createTableRequest_PartitionAtKeys{b.PartitionAtKeys}
	}
	x.xxx_hidden_PartitioningSettings = b.PartitioningSettings
	x.xxx_hidden_KeyBloomFilter = b.KeyBloomFilter
	x.xxx_hidden_ReadReplicasSettings = b.ReadReplicasSettings
	x.xxx_hidden_Tiering = b.Tiering
	x.xxx_hidden_Temporary = b.Temporary
	x.xxx_hidden_StoreType = b.StoreType
	return m0
}

type case_CreateTableRequest_Partitions protoreflect.FieldNumber

func (x case_CreateTableRequest_Partitions) String() string {
	md := file_protos_ydb_table_proto_msgTypes[40].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isCreateTableRequest_Partitions interface {
	isCreateTableRequest_Partitions()
}

type createTableRequest_UniformPartitions struct {
	// Enable uniform partitioning using given partitions count.
	// The first components of primary key must have Uint32/Uint64 type.
	UniformPartitions uint64 `protobuf:"varint,13,opt,name=uniform_partitions,json=uniformPartitions,proto3,oneof"`
}

type createTableRequest_PartitionAtKeys struct {
	// Explicitly specify key values which are used as borders for created partitions.
	PartitionAtKeys *ExplicitPartitions `protobuf:"bytes,14,opt,name=partition_at_keys,json=partitionAtKeys,proto3,oneof"`
}

func (*createTableRequest_UniformPartitions) isCreateTableRequest_Partitions() {}

func (*createTableRequest_PartitionAtKeys) isCreateTableRequest_Partitions() {}

type CreateTableResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CreateTableResponse) Reset() {
	*x = CreateTableResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableResponse) ProtoMessage() {}

func (x *CreateTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateTableResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *CreateTableResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *CreateTableResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *CreateTableResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type CreateTableResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 CreateTableResponse_builder) Build() *CreateTableResponse {
	m0 := &CreateTableResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

// Drop table with given path
type DropTableRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_SessionId       string                          `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_Path            string                          `protobuf:"bytes,2,opt,name=path,proto3"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,4,opt,name=operation_params,json=operationParams,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *DropTableRequest) Reset() {
	*x = DropTableRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropTableRequest) ProtoMessage() {}

func (x *DropTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DropTableRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *DropTableRequest) GetPath() string {
	if x != nil {
		return x.xxx_hidden_Path
	}
	return ""
}

func (x *DropTableRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *DropTableRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *DropTableRequest) SetPath(v string) {
	x.xxx_hidden_Path = v
}

func (x *DropTableRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *DropTableRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *DropTableRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

type DropTableRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier
	SessionId string
	// Full path
	Path            string
	OperationParams *Ydb_Operations.OperationParams
}

func (b0 DropTableRequest_builder) Build() *DropTableRequest {
	m0 := &DropTableRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_Path = b.Path
	x.xxx_hidden_OperationParams = b.OperationParams
	return m0
}

type DropTableResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DropTableResponse) Reset() {
	*x = DropTableResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropTableResponse) ProtoMessage() {}

func (x *DropTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DropTableResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *DropTableResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *DropTableResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *DropTableResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type DropTableResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 DropTableResponse_builder) Build() *DropTableResponse {
	m0 := &DropTableResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type RenameIndexItem struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SourceName         string                 `protobuf:"bytes,1,opt,name=source_name,json=sourceName,proto3"`
	xxx_hidden_DestinationName    string                 `protobuf:"bytes,2,opt,name=destination_name,json=destinationName,proto3"`
	xxx_hidden_ReplaceDestination bool                   `protobuf:"varint,3,opt,name=replace_destination,json=replaceDestination,proto3"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *RenameIndexItem) Reset() {
	*x = RenameIndexItem{}
	mi := &file_protos_ydb_table_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameIndexItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameIndexItem) ProtoMessage() {}

func (x *RenameIndexItem) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RenameIndexItem) GetSourceName() string {
	if x != nil {
		return x.xxx_hidden_SourceName
	}
	return ""
}

func (x *RenameIndexItem) GetDestinationName() string {
	if x != nil {
		return x.xxx_hidden_DestinationName
	}
	return ""
}

func (x *RenameIndexItem) GetReplaceDestination() bool {
	if x != nil {
		return x.xxx_hidden_ReplaceDestination
	}
	return false
}

func (x *RenameIndexItem) SetSourceName(v string) {
	x.xxx_hidden_SourceName = v
}

func (x *RenameIndexItem) SetDestinationName(v string) {
	x.xxx_hidden_DestinationName = v
}

func (x *RenameIndexItem) SetReplaceDestination(v bool) {
	x.xxx_hidden_ReplaceDestination = v
}

type RenameIndexItem_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Index name to rename
	SourceName string
	// Target index name
	DestinationName string
	// Move options
	ReplaceDestination bool
}

func (b0 RenameIndexItem_builder) Build() *RenameIndexItem {
	m0 := &RenameIndexItem{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SourceName = b.SourceName
	x.xxx_hidden_DestinationName = b.DestinationName
	x.xxx_hidden_ReplaceDestination = b.ReplaceDestination
	return m0
}

// Alter table with given path
type AlterTableRequest struct {
	state                                protoimpl.MessageState            `protogen:"opaque.v1"`
	xxx_hidden_SessionId                 string                            `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_Path                      string                            `protobuf:"bytes,2,opt,name=path,proto3"`
	xxx_hidden_AddColumns                *[]*ColumnMeta                    `protobuf:"bytes,3,rep,name=add_columns,json=addColumns,proto3"`
	xxx_hidden_DropColumns               []string                          `protobuf:"bytes,4,rep,name=drop_columns,json=dropColumns,proto3"`
	xxx_hidden_OperationParams           *Ydb_Operations.OperationParams   `protobuf:"bytes,5,opt,name=operation_params,json=operationParams,proto3"`
	xxx_hidden_AlterColumns              *[]*ColumnMeta                    `protobuf:"bytes,6,rep,name=alter_columns,json=alterColumns,proto3"`
	xxx_hidden_TtlAction                 isAlterTableRequest_TtlAction     `protobuf_oneof:"ttl_action"`
	xxx_hidden_AddIndexes                *[]*TableIndex                    `protobuf:"bytes,9,rep,name=add_indexes,json=addIndexes,proto3"`
	xxx_hidden_DropIndexes               []string                          `protobuf:"bytes,10,rep,name=drop_indexes,json=dropIndexes,proto3"`
	xxx_hidden_AlterStorageSettings      *StorageSettings                  `protobuf:"bytes,11,opt,name=alter_storage_settings,json=alterStorageSettings,proto3"`
	xxx_hidden_AddColumnFamilies         *[]*ColumnFamily                  `protobuf:"bytes,12,rep,name=add_column_families,json=addColumnFamilies,proto3"`
	xxx_hidden_AlterColumnFamilies       *[]*ColumnFamily                  `protobuf:"bytes,13,rep,name=alter_column_families,json=alterColumnFamilies,proto3"`
	xxx_hidden_AlterAttributes           map[string]string                 `protobuf:"bytes,14,rep,name=alter_attributes,json=alterAttributes,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_SetCompactionPolicy       string                            `protobuf:"bytes,15,opt,name=set_compaction_policy,json=setCompactionPolicy,proto3"`
	xxx_hidden_AlterPartitioningSettings *PartitioningSettings             `protobuf:"bytes,16,opt,name=alter_partitioning_settings,json=alterPartitioningSettings,proto3"`
	xxx_hidden_SetKeyBloomFilter         Ydb.FeatureFlag_Status            `protobuf:"varint,17,opt,name=set_key_bloom_filter,json=setKeyBloomFilter,proto3,enum=Ydb.FeatureFlag_Status"`
	xxx_hidden_SetReadReplicasSettings   *ReadReplicasSettings             `protobuf:"bytes,18,opt,name=set_read_replicas_settings,json=setReadReplicasSettings,proto3"`
	xxx_hidden_AddChangefeeds            *[]*Changefeed                    `protobuf:"bytes,19,rep,name=add_changefeeds,json=addChangefeeds,proto3"`
	xxx_hidden_DropChangefeeds           []string                          `protobuf:"bytes,20,rep,name=drop_changefeeds,json=dropChangefeeds,proto3"`
	xxx_hidden_RenameIndexes             *[]*RenameIndexItem               `protobuf:"bytes,21,rep,name=rename_indexes,json=renameIndexes,proto3"`
	xxx_hidden_TieringAction             isAlterTableRequest_TieringAction `protobuf_oneof:"tiering_action"`
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *AlterTableRequest) Reset() {
	*x = AlterTableRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlterTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterTableRequest) ProtoMessage() {}

func (x *AlterTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AlterTableRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *AlterTableRequest) GetPath() string {
	if x != nil {
		return x.xxx_hidden_Path
	}
	return ""
}

func (x *AlterTableRequest) GetAddColumns() []*ColumnMeta {
	if x != nil {
		if x.xxx_hidden_AddColumns != nil {
			return *x.xxx_hidden_AddColumns
		}
	}
	return nil
}

func (x *AlterTableRequest) GetDropColumns() []string {
	if x != nil {
		return x.xxx_hidden_DropColumns
	}
	return nil
}

func (x *AlterTableRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *AlterTableRequest) GetAlterColumns() []*ColumnMeta {
	if x != nil {
		if x.xxx_hidden_AlterColumns != nil {
			return *x.xxx_hidden_AlterColumns
		}
	}
	return nil
}

func (x *AlterTableRequest) GetSetTtlSettings() *TtlSettings {
	if x != nil {
		if x, ok := x.xxx_hidden_TtlAction.(*alterTableRequest_SetTtlSettings); ok {
			return x.SetTtlSettings
		}
	}
	return nil
}

func (x *AlterTableRequest) GetDropTtlSettings() *emptypb.Empty {
	if x != nil {
		if x, ok := x.xxx_hidden_TtlAction.(*alterTableRequest_DropTtlSettings); ok {
			return x.DropTtlSettings
		}
	}
	return nil
}

func (x *AlterTableRequest) GetAddIndexes() []*TableIndex {
	if x != nil {
		if x.xxx_hidden_AddIndexes != nil {
			return *x.xxx_hidden_AddIndexes
		}
	}
	return nil
}

func (x *AlterTableRequest) GetDropIndexes() []string {
	if x != nil {
		return x.xxx_hidden_DropIndexes
	}
	return nil
}

func (x *AlterTableRequest) GetAlterStorageSettings() *StorageSettings {
	if x != nil {
		return x.xxx_hidden_AlterStorageSettings
	}
	return nil
}

func (x *AlterTableRequest) GetAddColumnFamilies() []*ColumnFamily {
	if x != nil {
		if x.xxx_hidden_AddColumnFamilies != nil {
			return *x.xxx_hidden_AddColumnFamilies
		}
	}
	return nil
}

func (x *AlterTableRequest) GetAlterColumnFamilies() []*ColumnFamily {
	if x != nil {
		if x.xxx_hidden_AlterColumnFamilies != nil {
			return *x.xxx_hidden_AlterColumnFamilies
		}
	}
	return nil
}

func (x *AlterTableRequest) GetAlterAttributes() map[string]string {
	if x != nil {
		return x.xxx_hidden_AlterAttributes
	}
	return nil
}

func (x *AlterTableRequest) GetSetCompactionPolicy() string {
	if x != nil {
		return x.xxx_hidden_SetCompactionPolicy
	}
	return ""
}

func (x *AlterTableRequest) GetAlterPartitioningSettings() *PartitioningSettings {
	if x != nil {
		return x.xxx_hidden_AlterPartitioningSettings
	}
	return nil
}

func (x *AlterTableRequest) GetSetKeyBloomFilter() Ydb.FeatureFlag_Status {
	if x != nil {
		return x.xxx_hidden_SetKeyBloomFilter
	}
	return Ydb.FeatureFlag_Status(0)
}

func (x *AlterTableRequest) GetSetReadReplicasSettings() *ReadReplicasSettings {
	if x != nil {
		return x.xxx_hidden_SetReadReplicasSettings
	}
	return nil
}

func (x *AlterTableRequest) GetAddChangefeeds() []*Changefeed {
	if x != nil {
		if x.xxx_hidden_AddChangefeeds != nil {
			return *x.xxx_hidden_AddChangefeeds
		}
	}
	return nil
}

func (x *AlterTableRequest) GetDropChangefeeds() []string {
	if x != nil {
		return x.xxx_hidden_DropChangefeeds
	}
	return nil
}

func (x *AlterTableRequest) GetRenameIndexes() []*RenameIndexItem {
	if x != nil {
		if x.xxx_hidden_RenameIndexes != nil {
			return *x.xxx_hidden_RenameIndexes
		}
	}
	return nil
}

func (x *AlterTableRequest) GetSetTiering() string {
	if x != nil {
		if x, ok := x.xxx_hidden_TieringAction.(*alterTableRequest_SetTiering); ok {
			return x.SetTiering
		}
	}
	return ""
}

func (x *AlterTableRequest) GetDropTiering() *emptypb.Empty {
	if x != nil {
		if x, ok := x.xxx_hidden_TieringAction.(*alterTableRequest_DropTiering); ok {
			return x.DropTiering
		}
	}
	return nil
}

func (x *AlterTableRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *AlterTableRequest) SetPath(v string) {
	x.xxx_hidden_Path = v
}

func (x *AlterTableRequest) SetAddColumns(v []*ColumnMeta) {
	x.xxx_hidden_AddColumns = &v
}

func (x *AlterTableRequest) SetDropColumns(v []string) {
	x.xxx_hidden_DropColumns = v
}

func (x *AlterTableRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *AlterTableRequest) SetAlterColumns(v []*ColumnMeta) {
	x.xxx_hidden_AlterColumns = &v
}

func (x *AlterTableRequest) SetSetTtlSettings(v *TtlSettings) {
	if v == nil {
		x.xxx_hidden_TtlAction = nil
		return
	}
	x.xxx_hidden_TtlAction = &alterTableRequest_SetTtlSettings{v}
}

func (x *AlterTableRequest) SetDropTtlSettings(v *emptypb.Empty) {
	if v == nil {
		x.xxx_hidden_TtlAction = nil
		return
	}
	x.xxx_hidden_TtlAction = &alterTableRequest_DropTtlSettings{v}
}

func (x *AlterTableRequest) SetAddIndexes(v []*TableIndex) {
	x.xxx_hidden_AddIndexes = &v
}

func (x *AlterTableRequest) SetDropIndexes(v []string) {
	x.xxx_hidden_DropIndexes = v
}

func (x *AlterTableRequest) SetAlterStorageSettings(v *StorageSettings) {
	x.xxx_hidden_AlterStorageSettings = v
}

func (x *AlterTableRequest) SetAddColumnFamilies(v []*ColumnFamily) {
	x.xxx_hidden_AddColumnFamilies = &v
}

func (x *AlterTableRequest) SetAlterColumnFamilies(v []*ColumnFamily) {
	x.xxx_hidden_AlterColumnFamilies = &v
}

func (x *AlterTableRequest) SetAlterAttributes(v map[string]string) {
	x.xxx_hidden_AlterAttributes = v
}

func (x *AlterTableRequest) SetSetCompactionPolicy(v string) {
	x.xxx_hidden_SetCompactionPolicy = v
}

func (x *AlterTableRequest) SetAlterPartitioningSettings(v *PartitioningSettings) {
	x.xxx_hidden_AlterPartitioningSettings = v
}

func (x *AlterTableRequest) SetSetKeyBloomFilter(v Ydb.FeatureFlag_Status) {
	x.xxx_hidden_SetKeyBloomFilter = v
}

func (x *AlterTableRequest) SetSetReadReplicasSettings(v *ReadReplicasSettings) {
	x.xxx_hidden_SetReadReplicasSettings = v
}

func (x *AlterTableRequest) SetAddChangefeeds(v []*Changefeed) {
	x.xxx_hidden_AddChangefeeds = &v
}

func (x *AlterTableRequest) SetDropChangefeeds(v []string) {
	x.xxx_hidden_DropChangefeeds = v
}

func (x *AlterTableRequest) SetRenameIndexes(v []*RenameIndexItem) {
	x.xxx_hidden_RenameIndexes = &v
}

func (x *AlterTableRequest) SetSetTiering(v string) {
	x.xxx_hidden_TieringAction = &alterTableRequest_SetTiering{v}
}

func (x *AlterTableRequest) SetDropTiering(v *emptypb.Empty) {
	if v == nil {
		x.xxx_hidden_TieringAction = nil
		return
	}
	x.xxx_hidden_TieringAction = &alterTableRequest_DropTiering{v}
}

func (x *AlterTableRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *AlterTableRequest) HasTtlAction() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TtlAction != nil
}

func (x *AlterTableRequest) HasSetTtlSettings() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_TtlAction.(*alterTableRequest_SetTtlSettings)
	return ok
}

func (x *AlterTableRequest) HasDropTtlSettings() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_TtlAction.(*alterTableRequest_DropTtlSettings)
	return ok
}

func (x *AlterTableRequest) HasAlterStorageSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_AlterStorageSettings != nil
}

func (x *AlterTableRequest) HasAlterPartitioningSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_AlterPartitioningSettings != nil
}

func (x *AlterTableRequest) HasSetReadReplicasSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SetReadReplicasSettings != nil
}

func (x *AlterTableRequest) HasTieringAction() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TieringAction != nil
}

func (x *AlterTableRequest) HasSetTiering() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_TieringAction.(*alterTableRequest_SetTiering)
	return ok
}

func (x *AlterTableRequest) HasDropTiering() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_TieringAction.(*alterTableRequest_DropTiering)
	return ok
}

func (x *AlterTableRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

func (x *AlterTableRequest) ClearTtlAction() {
	x.xxx_hidden_TtlAction = nil
}

func (x *AlterTableRequest) ClearSetTtlSettings() {
	if _, ok := x.xxx_hidden_TtlAction.(*alterTableRequest_SetTtlSettings); ok {
		x.xxx_hidden_TtlAction = nil
	}
}

func (x *AlterTableRequest) ClearDropTtlSettings() {
	if _, ok := x.xxx_hidden_TtlAction.(*alterTableRequest_DropTtlSettings); ok {
		x.xxx_hidden_TtlAction = nil
	}
}

func (x *AlterTableRequest) ClearAlterStorageSettings() {
	x.xxx_hidden_AlterStorageSettings = nil
}

func (x *AlterTableRequest) ClearAlterPartitioningSettings() {
	x.xxx_hidden_AlterPartitioningSettings = nil
}

func (x *AlterTableRequest) ClearSetReadReplicasSettings() {
	x.xxx_hidden_SetReadReplicasSettings = nil
}

func (x *AlterTableRequest) ClearTieringAction() {
	x.xxx_hidden_TieringAction = nil
}

func (x *AlterTableRequest) ClearSetTiering() {
	if _, ok := x.xxx_hidden_TieringAction.(*alterTableRequest_SetTiering); ok {
		x.xxx_hidden_TieringAction = nil
	}
}

func (x *AlterTableRequest) ClearDropTiering() {
	if _, ok := x.xxx_hidden_TieringAction.(*alterTableRequest_DropTiering); ok {
		x.xxx_hidden_TieringAction = nil
	}
}

const AlterTableRequest_TtlAction_not_set_case case_AlterTableRequest_TtlAction = 0
const AlterTableRequest_SetTtlSettings_case case_AlterTableRequest_TtlAction = 7
const AlterTableRequest_DropTtlSettings_case case_AlterTableRequest_TtlAction = 8

func (x *AlterTableRequest) WhichTtlAction() case_AlterTableRequest_TtlAction {
	if x == nil {
		return AlterTableRequest_TtlAction_not_set_case
	}
	switch x.xxx_hidden_TtlAction.(type) {
	case *alterTableRequest_SetTtlSettings:
		return AlterTableRequest_SetTtlSettings_case
	case *alterTableRequest_DropTtlSettings:
		return AlterTableRequest_DropTtlSettings_case
	default:
		return AlterTableRequest_TtlAction_not_set_case
	}
}

const AlterTableRequest_TieringAction_not_set_case case_AlterTableRequest_TieringAction = 0
const AlterTableRequest_SetTiering_case case_AlterTableRequest_TieringAction = 22
const AlterTableRequest_DropTiering_case case_AlterTableRequest_TieringAction = 23

func (x *AlterTableRequest) WhichTieringAction() case_AlterTableRequest_TieringAction {
	if x == nil {
		return AlterTableRequest_TieringAction_not_set_case
	}
	switch x.xxx_hidden_TieringAction.(type) {
	case *alterTableRequest_SetTiering:
		return AlterTableRequest_SetTiering_case
	case *alterTableRequest_DropTiering:
		return AlterTableRequest_DropTiering_case
	default:
		return AlterTableRequest_TieringAction_not_set_case
	}
}

type AlterTableRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier
	SessionId string
	// Full path
	Path string
	// Columns (name, type) to add
	AddColumns []*ColumnMeta
	// Columns to remove
	DropColumns     []string
	OperationParams *Ydb_Operations.OperationParams
	// Columns to alter
	AlterColumns []*ColumnMeta
	// Setup or remove time to live settings

	// Fields of oneof xxx_hidden_TtlAction:
	SetTtlSettings  *TtlSettings
	DropTtlSettings *emptypb.Empty
	// -- end of xxx_hidden_TtlAction
	// Add secondary indexes
	AddIndexes []*TableIndex
	// Remove secondary indexes
	DropIndexes []string
	// Change table storage settings
	AlterStorageSettings *StorageSettings
	// Add/alter column families
	AddColumnFamilies   []*ColumnFamily
	AlterColumnFamilies []*ColumnFamily
	// Alter attributes. Leave the value blank to drop an attribute.
	// Cannot be used in combination with other fields (except session_id and path) at the moment.
	AlterAttributes map[string]string
	// Set predefined named set of settings for table compaction ["default", "small_table", "log_table"].
	// Set "default" to use default preset.
	SetCompactionPolicy string
	// Change table partitioning settings
	AlterPartitioningSettings *PartitioningSettings
	// Enable/disable bloom filter by key
	SetKeyBloomFilter Ydb.FeatureFlag_Status
	// Set read replicas settings for table
	SetReadReplicasSettings *ReadReplicasSettings
	// Add change feeds
	AddChangefeeds []*Changefeed
	// Remove change feeds (by its names)
	DropChangefeeds []string
	// Rename existed index
	RenameIndexes []*RenameIndexItem
	// Setup or remove tiering

	// Fields of oneof xxx_hidden_TieringAction:
	SetTiering  *string
	DropTiering *emptypb.Empty
	// -- end of xxx_hidden_TieringAction
}

func (b0 AlterTableRequest_builder) Build() *AlterTableRequest {
	m0 := &AlterTableRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_Path = b.Path
	x.xxx_hidden_AddColumns = &b.AddColumns
	x.xxx_hidden_DropColumns = b.DropColumns
	x.xxx_hidden_OperationParams = b.OperationParams
	x.xxx_hidden_AlterColumns = &b.AlterColumns
	if b.SetTtlSettings != nil {
		x.xxx_hidden_TtlAction = &alterTableRequest_SetTtlSettings{b.SetTtlSettings}
	}
	if b.DropTtlSettings != nil {
		x.xxx_hidden_TtlAction = &alterTableRequest_DropTtlSettings{b.DropTtlSettings}
	}
	x.xxx_hidden_AddIndexes = &b.AddIndexes
	x.xxx_hidden_DropIndexes = b.DropIndexes
	x.xxx_hidden_AlterStorageSettings = b.AlterStorageSettings
	x.xxx_hidden_AddColumnFamilies = &b.AddColumnFamilies
	x.xxx_hidden_AlterColumnFamilies = &b.AlterColumnFamilies
	x.xxx_hidden_AlterAttributes = b.AlterAttributes
	x.xxx_hidden_SetCompactionPolicy = b.SetCompactionPolicy
	x.xxx_hidden_AlterPartitioningSettings = b.AlterPartitioningSettings
	x.xxx_hidden_SetKeyBloomFilter = b.SetKeyBloomFilter
	x.xxx_hidden_SetReadReplicasSettings = b.SetReadReplicasSettings
	x.xxx_hidden_AddChangefeeds = &b.AddChangefeeds
	x.xxx_hidden_DropChangefeeds = b.DropChangefeeds
	x.xxx_hidden_RenameIndexes = &b.RenameIndexes
	if b.SetTiering != nil {
		x.xxx_hidden_TieringAction = &alterTableRequest_SetTiering{*b.SetTiering}
	}
	if b.DropTiering != nil {
		x.xxx_hidden_TieringAction = &alterTableRequest_DropTiering{b.DropTiering}
	}
	return m0
}

type case_AlterTableRequest_TtlAction protoreflect.FieldNumber

func (x case_AlterTableRequest_TtlAction) String() string {
	md := file_protos_ydb_table_proto_msgTypes[45].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type case_AlterTableRequest_TieringAction protoreflect.FieldNumber

func (x case_AlterTableRequest_TieringAction) String() string {
	md := file_protos_ydb_table_proto_msgTypes[45].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isAlterTableRequest_TtlAction interface {
	isAlterTableRequest_TtlAction()
}

type alterTableRequest_SetTtlSettings struct {
	SetTtlSettings *TtlSettings `protobuf:"bytes,7,opt,name=set_ttl_settings,json=setTtlSettings,proto3,oneof"`
}

type alterTableRequest_DropTtlSettings struct {
	DropTtlSettings *emptypb.Empty `protobuf:"bytes,8,opt,name=drop_ttl_settings,json=dropTtlSettings,proto3,oneof"`
}

func (*alterTableRequest_SetTtlSettings) isAlterTableRequest_TtlAction() {}

func (*alterTableRequest_DropTtlSettings) isAlterTableRequest_TtlAction() {}

type isAlterTableRequest_TieringAction interface {
	isAlterTableRequest_TieringAction()
}

type alterTableRequest_SetTiering struct {
	SetTiering string `protobuf:"bytes,22,opt,name=set_tiering,json=setTiering,proto3,oneof"`
}

type alterTableRequest_DropTiering struct {
	DropTiering *emptypb.Empty `protobuf:"bytes,23,opt,name=drop_tiering,json=dropTiering,proto3,oneof"`
}

func (*alterTableRequest_SetTiering) isAlterTableRequest_TieringAction() {}

func (*alterTableRequest_DropTiering) isAlterTableRequest_TieringAction() {}

type AlterTableResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AlterTableResponse) Reset() {
	*x = AlterTableResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlterTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterTableResponse) ProtoMessage() {}

func (x *AlterTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AlterTableResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *AlterTableResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *AlterTableResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *AlterTableResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type AlterTableResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 AlterTableResponse_builder) Build() *AlterTableResponse {
	m0 := &AlterTableResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

// Copy table with given path
type CopyTableRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_SessionId       string                          `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_SourcePath      string                          `protobuf:"bytes,2,opt,name=source_path,json=sourcePath,proto3"`
	xxx_hidden_DestinationPath string                          `protobuf:"bytes,3,opt,name=destination_path,json=destinationPath,proto3"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,4,opt,name=operation_params,json=operationParams,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *CopyTableRequest) Reset() {
	*x = CopyTableRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyTableRequest) ProtoMessage() {}

func (x *CopyTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CopyTableRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *CopyTableRequest) GetSourcePath() string {
	if x != nil {
		return x.xxx_hidden_SourcePath
	}
	return ""
}

func (x *CopyTableRequest) GetDestinationPath() string {
	if x != nil {
		return x.xxx_hidden_DestinationPath
	}
	return ""
}

func (x *CopyTableRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *CopyTableRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *CopyTableRequest) SetSourcePath(v string) {
	x.xxx_hidden_SourcePath = v
}

func (x *CopyTableRequest) SetDestinationPath(v string) {
	x.xxx_hidden_DestinationPath = v
}

func (x *CopyTableRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *CopyTableRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *CopyTableRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

type CopyTableRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier
	SessionId string
	// Copy from path
	SourcePath string
	// Copy to path
	DestinationPath string
	OperationParams *Ydb_Operations.OperationParams
}

func (b0 CopyTableRequest_builder) Build() *CopyTableRequest {
	m0 := &CopyTableRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_SourcePath = b.SourcePath
	x.xxx_hidden_DestinationPath = b.DestinationPath
	x.xxx_hidden_OperationParams = b.OperationParams
	return m0
}

type CopyTableResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CopyTableResponse) Reset() {
	*x = CopyTableResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyTableResponse) ProtoMessage() {}

func (x *CopyTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CopyTableResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *CopyTableResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *CopyTableResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *CopyTableResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type CopyTableResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 CopyTableResponse_builder) Build() *CopyTableResponse {
	m0 := &CopyTableResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type CopyTableItem struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SourcePath      string                 `protobuf:"bytes,1,opt,name=source_path,json=sourcePath,proto3"`
	xxx_hidden_DestinationPath string                 `protobuf:"bytes,2,opt,name=destination_path,json=destinationPath,proto3"`
	xxx_hidden_OmitIndexes     bool                   `protobuf:"varint,3,opt,name=omit_indexes,json=omitIndexes,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *CopyTableItem) Reset() {
	*x = CopyTableItem{}
	mi := &file_protos_ydb_table_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyTableItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyTableItem) ProtoMessage() {}

func (x *CopyTableItem) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CopyTableItem) GetSourcePath() string {
	if x != nil {
		return x.xxx_hidden_SourcePath
	}
	return ""
}

func (x *CopyTableItem) GetDestinationPath() string {
	if x != nil {
		return x.xxx_hidden_DestinationPath
	}
	return ""
}

func (x *CopyTableItem) GetOmitIndexes() bool {
	if x != nil {
		return x.xxx_hidden_OmitIndexes
	}
	return false
}

func (x *CopyTableItem) SetSourcePath(v string) {
	x.xxx_hidden_SourcePath = v
}

func (x *CopyTableItem) SetDestinationPath(v string) {
	x.xxx_hidden_DestinationPath = v
}

func (x *CopyTableItem) SetOmitIndexes(v bool) {
	x.xxx_hidden_OmitIndexes = v
}

type CopyTableItem_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Copy from path
	SourcePath string
	// Copy to path
	DestinationPath string
	// Copy options
	OmitIndexes bool
}

func (b0 CopyTableItem_builder) Build() *CopyTableItem {
	m0 := &CopyTableItem{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SourcePath = b.SourcePath
	x.xxx_hidden_DestinationPath = b.DestinationPath
	x.xxx_hidden_OmitIndexes = b.OmitIndexes
	return m0
}

// Creates consistent copy of given tables.
type CopyTablesRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3"`
	xxx_hidden_SessionId       string                          `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_Tables          *[]*CopyTableItem               `protobuf:"bytes,3,rep,name=tables,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *CopyTablesRequest) Reset() {
	*x = CopyTablesRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyTablesRequest) ProtoMessage() {}

func (x *CopyTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CopyTablesRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *CopyTablesRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *CopyTablesRequest) GetTables() []*CopyTableItem {
	if x != nil {
		if x.xxx_hidden_Tables != nil {
			return *x.xxx_hidden_Tables
		}
	}
	return nil
}

func (x *CopyTablesRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *CopyTablesRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *CopyTablesRequest) SetTables(v []*CopyTableItem) {
	x.xxx_hidden_Tables = &v
}

func (x *CopyTablesRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *CopyTablesRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

type CopyTablesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	// Session identifier
	SessionId string
	// Source and destination paths which describe copies
	Tables []*CopyTableItem
}

func (b0 CopyTablesRequest_builder) Build() *CopyTablesRequest {
	m0 := &CopyTablesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_OperationParams = b.OperationParams
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_Tables = &b.Tables
	return m0
}

type CopyTablesResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CopyTablesResponse) Reset() {
	*x = CopyTablesResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyTablesResponse) ProtoMessage() {}

func (x *CopyTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CopyTablesResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *CopyTablesResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *CopyTablesResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *CopyTablesResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type CopyTablesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 CopyTablesResponse_builder) Build() *CopyTablesResponse {
	m0 := &CopyTablesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type RenameTableItem struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SourcePath         string                 `protobuf:"bytes,1,opt,name=source_path,json=sourcePath,proto3"`
	xxx_hidden_DestinationPath    string                 `protobuf:"bytes,2,opt,name=destination_path,json=destinationPath,proto3"`
	xxx_hidden_ReplaceDestination bool                   `protobuf:"varint,3,opt,name=replace_destination,json=replaceDestination,proto3"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *RenameTableItem) Reset() {
	*x = RenameTableItem{}
	mi := &file_protos_ydb_table_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameTableItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameTableItem) ProtoMessage() {}

func (x *RenameTableItem) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RenameTableItem) GetSourcePath() string {
	if x != nil {
		return x.xxx_hidden_SourcePath
	}
	return ""
}

func (x *RenameTableItem) GetDestinationPath() string {
	if x != nil {
		return x.xxx_hidden_DestinationPath
	}
	return ""
}

func (x *RenameTableItem) GetReplaceDestination() bool {
	if x != nil {
		return x.xxx_hidden_ReplaceDestination
	}
	return false
}

func (x *RenameTableItem) SetSourcePath(v string) {
	x.xxx_hidden_SourcePath = v
}

func (x *RenameTableItem) SetDestinationPath(v string) {
	x.xxx_hidden_DestinationPath = v
}

func (x *RenameTableItem) SetReplaceDestination(v bool) {
	x.xxx_hidden_ReplaceDestination = v
}

type RenameTableItem_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Full path
	SourcePath string
	// Full path
	DestinationPath string
	// Move options
	ReplaceDestination bool
}

func (b0 RenameTableItem_builder) Build() *RenameTableItem {
	m0 := &RenameTableItem{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SourcePath = b.SourcePath
	x.xxx_hidden_DestinationPath = b.DestinationPath
	x.xxx_hidden_ReplaceDestination = b.ReplaceDestination
	return m0
}

// Moves given tables
type RenameTablesRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3"`
	xxx_hidden_SessionId       string                          `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_Tables          *[]*RenameTableItem             `protobuf:"bytes,3,rep,name=tables,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *RenameTablesRequest) Reset() {
	*x = RenameTablesRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameTablesRequest) ProtoMessage() {}

func (x *RenameTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RenameTablesRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *RenameTablesRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *RenameTablesRequest) GetTables() []*RenameTableItem {
	if x != nil {
		if x.xxx_hidden_Tables != nil {
			return *x.xxx_hidden_Tables
		}
	}
	return nil
}

func (x *RenameTablesRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *RenameTablesRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *RenameTablesRequest) SetTables(v []*RenameTableItem) {
	x.xxx_hidden_Tables = &v
}

func (x *RenameTablesRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *RenameTablesRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

type RenameTablesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	// Session identifier
	SessionId string
	// Source and destination paths inside RenameTableItem describe rename actions
	Tables []*RenameTableItem
}

func (b0 RenameTablesRequest_builder) Build() *RenameTablesRequest {
	m0 := &RenameTablesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_OperationParams = b.OperationParams
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_Tables = &b.Tables
	return m0
}

type RenameTablesResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *RenameTablesResponse) Reset() {
	*x = RenameTablesResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameTablesResponse) ProtoMessage() {}

func (x *RenameTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RenameTablesResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *RenameTablesResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *RenameTablesResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *RenameTablesResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type RenameTablesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 RenameTablesResponse_builder) Build() *RenameTablesResponse {
	m0 := &RenameTablesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

// Describe table with given path
type DescribeTableRequest struct {
	state                            protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_SessionId             string                          `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_Path                  string                          `protobuf:"bytes,2,opt,name=path,proto3"`
	xxx_hidden_OperationParams       *Ydb_Operations.OperationParams `protobuf:"bytes,4,opt,name=operation_params,json=operationParams,proto3"`
	xxx_hidden_IncludeShardKeyBounds bool                            `protobuf:"varint,5,opt,name=include_shard_key_bounds,json=includeShardKeyBounds,proto3"`
	xxx_hidden_IncludeTableStats     bool                            `protobuf:"varint,6,opt,name=include_table_stats,json=includeTableStats,proto3"`
	xxx_hidden_IncludePartitionStats bool                            `protobuf:"varint,7,opt,name=include_partition_stats,json=includePartitionStats,proto3"`
	xxx_hidden_IncludeShardNodesInfo bool                            `protobuf:"varint,9,opt,name=include_shard_nodes_info,json=includeShardNodesInfo,proto3"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *DescribeTableRequest) Reset() {
	*x = DescribeTableRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTableRequest) ProtoMessage() {}

func (x *DescribeTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeTableRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *DescribeTableRequest) GetPath() string {
	if x != nil {
		return x.xxx_hidden_Path
	}
	return ""
}

func (x *DescribeTableRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *DescribeTableRequest) GetIncludeShardKeyBounds() bool {
	if x != nil {
		return x.xxx_hidden_IncludeShardKeyBounds
	}
	return false
}

func (x *DescribeTableRequest) GetIncludeTableStats() bool {
	if x != nil {
		return x.xxx_hidden_IncludeTableStats
	}
	return false
}

func (x *DescribeTableRequest) GetIncludePartitionStats() bool {
	if x != nil {
		return x.xxx_hidden_IncludePartitionStats
	}
	return false
}

func (x *DescribeTableRequest) GetIncludeShardNodesInfo() bool {
	if x != nil {
		return x.xxx_hidden_IncludeShardNodesInfo
	}
	return false
}

func (x *DescribeTableRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *DescribeTableRequest) SetPath(v string) {
	x.xxx_hidden_Path = v
}

func (x *DescribeTableRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *DescribeTableRequest) SetIncludeShardKeyBounds(v bool) {
	x.xxx_hidden_IncludeShardKeyBounds = v
}

func (x *DescribeTableRequest) SetIncludeTableStats(v bool) {
	x.xxx_hidden_IncludeTableStats = v
}

func (x *DescribeTableRequest) SetIncludePartitionStats(v bool) {
	x.xxx_hidden_IncludePartitionStats = v
}

func (x *DescribeTableRequest) SetIncludeShardNodesInfo(v bool) {
	x.xxx_hidden_IncludeShardNodesInfo = v
}

func (x *DescribeTableRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *DescribeTableRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

type DescribeTableRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier
	SessionId string
	// Full path
	Path            string
	OperationParams *Ydb_Operations.OperationParams
	// Includes shard key distribution info
	IncludeShardKeyBounds bool
	// Includes table statistics
	IncludeTableStats bool
	// Includes partition statistics (required include_table_statistics)
	IncludePartitionStats bool
	// Includes shard -> node id maping (required include_partition_stats)
	IncludeShardNodesInfo bool
}

func (b0 DescribeTableRequest_builder) Build() *DescribeTableRequest {
	m0 := &DescribeTableRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_Path = b.Path
	x.xxx_hidden_OperationParams = b.OperationParams
	x.xxx_hidden_IncludeShardKeyBounds = b.IncludeShardKeyBounds
	x.xxx_hidden_IncludeTableStats = b.IncludeTableStats
	x.xxx_hidden_IncludePartitionStats = b.IncludePartitionStats
	x.xxx_hidden_IncludeShardNodesInfo = b.IncludeShardNodesInfo
	return m0
}

type DescribeTableResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DescribeTableResponse) Reset() {
	*x = DescribeTableResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTableResponse) ProtoMessage() {}

func (x *DescribeTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeTableResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *DescribeTableResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *DescribeTableResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *DescribeTableResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type DescribeTableResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Holds DescribeTableResult in case of successful call
	Operation *Ydb_Operations.Operation
}

func (b0 DescribeTableResponse_builder) Build() *DescribeTableResponse {
	m0 := &DescribeTableResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type DescribeTableResult struct {
	state                           protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Self                 *Ydb_Scheme.Entry         `protobuf:"bytes,1,opt,name=self,proto3"`
	xxx_hidden_Columns              *[]*ColumnMeta            `protobuf:"bytes,2,rep,name=columns,proto3"`
	xxx_hidden_PrimaryKey           []string                  `protobuf:"bytes,3,rep,name=primary_key,json=primaryKey,proto3"`
	xxx_hidden_ShardKeyBounds       *[]*Ydb.TypedValue        `protobuf:"bytes,4,rep,name=shard_key_bounds,json=shardKeyBounds,proto3"`
	xxx_hidden_Indexes              *[]*TableIndexDescription `protobuf:"bytes,5,rep,name=indexes,proto3"`
	xxx_hidden_TableStats           *TableStats               `protobuf:"bytes,6,opt,name=table_stats,json=tableStats,proto3"`
	xxx_hidden_TtlSettings          *TtlSettings              `protobuf:"bytes,7,opt,name=ttl_settings,json=ttlSettings,proto3"`
	xxx_hidden_StorageSettings      *StorageSettings          `protobuf:"bytes,8,opt,name=storage_settings,json=storageSettings,proto3"`
	xxx_hidden_ColumnFamilies       *[]*ColumnFamily          `protobuf:"bytes,9,rep,name=column_families,json=columnFamilies,proto3"`
	xxx_hidden_Attributes           map[string]string         `protobuf:"bytes,10,rep,name=attributes,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_PartitioningSettings *PartitioningSettings     `protobuf:"bytes,12,opt,name=partitioning_settings,json=partitioningSettings,proto3"`
	xxx_hidden_KeyBloomFilter       Ydb.FeatureFlag_Status    `protobuf:"varint,13,opt,name=key_bloom_filter,json=keyBloomFilter,proto3,enum=Ydb.FeatureFlag_Status"`
	xxx_hidden_ReadReplicasSettings *ReadReplicasSettings     `protobuf:"bytes,14,opt,name=read_replicas_settings,json=readReplicasSettings,proto3"`
	xxx_hidden_Changefeeds          *[]*ChangefeedDescription `protobuf:"bytes,15,rep,name=changefeeds,proto3"`
	xxx_hidden_Tiering              string                    `protobuf:"bytes,16,opt,name=tiering,proto3"`
	xxx_hidden_Temporary            bool                      `protobuf:"varint,17,opt,name=temporary,proto3"`
	xxx_hidden_StoreType            StoreType                 `protobuf:"varint,18,opt,name=store_type,json=storeType,proto3,enum=Ydb.Table.StoreType"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *DescribeTableResult) Reset() {
	*x = DescribeTableResult{}
	mi := &file_protos_ydb_table_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTableResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTableResult) ProtoMessage() {}

func (x *DescribeTableResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeTableResult) GetSelf() *Ydb_Scheme.Entry {
	if x != nil {
		return x.xxx_hidden_Self
	}
	return nil
}

func (x *DescribeTableResult) GetColumns() []*ColumnMeta {
	if x != nil {
		if x.xxx_hidden_Columns != nil {
			return *x.xxx_hidden_Columns
		}
	}
	return nil
}

func (x *DescribeTableResult) GetPrimaryKey() []string {
	if x != nil {
		return x.xxx_hidden_PrimaryKey
	}
	return nil
}

func (x *DescribeTableResult) GetShardKeyBounds() []*Ydb.TypedValue {
	if x != nil {
		if x.xxx_hidden_ShardKeyBounds != nil {
			return *x.xxx_hidden_ShardKeyBounds
		}
	}
	return nil
}

func (x *DescribeTableResult) GetIndexes() []*TableIndexDescription {
	if x != nil {
		if x.xxx_hidden_Indexes != nil {
			return *x.xxx_hidden_Indexes
		}
	}
	return nil
}

func (x *DescribeTableResult) GetTableStats() *TableStats {
	if x != nil {
		return x.xxx_hidden_TableStats
	}
	return nil
}

func (x *DescribeTableResult) GetTtlSettings() *TtlSettings {
	if x != nil {
		return x.xxx_hidden_TtlSettings
	}
	return nil
}

func (x *DescribeTableResult) GetStorageSettings() *StorageSettings {
	if x != nil {
		return x.xxx_hidden_StorageSettings
	}
	return nil
}

func (x *DescribeTableResult) GetColumnFamilies() []*ColumnFamily {
	if x != nil {
		if x.xxx_hidden_ColumnFamilies != nil {
			return *x.xxx_hidden_ColumnFamilies
		}
	}
	return nil
}

func (x *DescribeTableResult) GetAttributes() map[string]string {
	if x != nil {
		return x.xxx_hidden_Attributes
	}
	return nil
}

func (x *DescribeTableResult) GetPartitioningSettings() *PartitioningSettings {
	if x != nil {
		return x.xxx_hidden_PartitioningSettings
	}
	return nil
}

func (x *DescribeTableResult) GetKeyBloomFilter() Ydb.FeatureFlag_Status {
	if x != nil {
		return x.xxx_hidden_KeyBloomFilter
	}
	return Ydb.FeatureFlag_Status(0)
}

func (x *DescribeTableResult) GetReadReplicasSettings() *ReadReplicasSettings {
	if x != nil {
		return x.xxx_hidden_ReadReplicasSettings
	}
	return nil
}

func (x *DescribeTableResult) GetChangefeeds() []*ChangefeedDescription {
	if x != nil {
		if x.xxx_hidden_Changefeeds != nil {
			return *x.xxx_hidden_Changefeeds
		}
	}
	return nil
}

func (x *DescribeTableResult) GetTiering() string {
	if x != nil {
		return x.xxx_hidden_Tiering
	}
	return ""
}

func (x *DescribeTableResult) GetTemporary() bool {
	if x != nil {
		return x.xxx_hidden_Temporary
	}
	return false
}

func (x *DescribeTableResult) GetStoreType() StoreType {
	if x != nil {
		return x.xxx_hidden_StoreType
	}
	return StoreType_STORE_TYPE_UNSPECIFIED
}

func (x *DescribeTableResult) SetSelf(v *Ydb_Scheme.Entry) {
	x.xxx_hidden_Self = v
}

func (x *DescribeTableResult) SetColumns(v []*ColumnMeta) {
	x.xxx_hidden_Columns = &v
}

func (x *DescribeTableResult) SetPrimaryKey(v []string) {
	x.xxx_hidden_PrimaryKey = v
}

func (x *DescribeTableResult) SetShardKeyBounds(v []*Ydb.TypedValue) {
	x.xxx_hidden_ShardKeyBounds = &v
}

func (x *DescribeTableResult) SetIndexes(v []*TableIndexDescription) {
	x.xxx_hidden_Indexes = &v
}

func (x *DescribeTableResult) SetTableStats(v *TableStats) {
	x.xxx_hidden_TableStats = v
}

func (x *DescribeTableResult) SetTtlSettings(v *TtlSettings) {
	x.xxx_hidden_TtlSettings = v
}

func (x *DescribeTableResult) SetStorageSettings(v *StorageSettings) {
	x.xxx_hidden_StorageSettings = v
}

func (x *DescribeTableResult) SetColumnFamilies(v []*ColumnFamily) {
	x.xxx_hidden_ColumnFamilies = &v
}

func (x *DescribeTableResult) SetAttributes(v map[string]string) {
	x.xxx_hidden_Attributes = v
}

func (x *DescribeTableResult) SetPartitioningSettings(v *PartitioningSettings) {
	x.xxx_hidden_PartitioningSettings = v
}

func (x *DescribeTableResult) SetKeyBloomFilter(v Ydb.FeatureFlag_Status) {
	x.xxx_hidden_KeyBloomFilter = v
}

func (x *DescribeTableResult) SetReadReplicasSettings(v *ReadReplicasSettings) {
	x.xxx_hidden_ReadReplicasSettings = v
}

func (x *DescribeTableResult) SetChangefeeds(v []*ChangefeedDescription) {
	x.xxx_hidden_Changefeeds = &v
}

func (x *DescribeTableResult) SetTiering(v string) {
	x.xxx_hidden_Tiering = v
}

func (x *DescribeTableResult) SetTemporary(v bool) {
	x.xxx_hidden_Temporary = v
}

func (x *DescribeTableResult) SetStoreType(v StoreType) {
	x.xxx_hidden_StoreType = v
}

func (x *DescribeTableResult) HasSelf() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Self != nil
}

func (x *DescribeTableResult) HasTableStats() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TableStats != nil
}

func (x *DescribeTableResult) HasTtlSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TtlSettings != nil
}

func (x *DescribeTableResult) HasStorageSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StorageSettings != nil
}

func (x *DescribeTableResult) HasPartitioningSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PartitioningSettings != nil
}

func (x *DescribeTableResult) HasReadReplicasSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ReadReplicasSettings != nil
}

func (x *DescribeTableResult) ClearSelf() {
	x.xxx_hidden_Self = nil
}

func (x *DescribeTableResult) ClearTableStats() {
	x.xxx_hidden_TableStats = nil
}

func (x *DescribeTableResult) ClearTtlSettings() {
	x.xxx_hidden_TtlSettings = nil
}

func (x *DescribeTableResult) ClearStorageSettings() {
	x.xxx_hidden_StorageSettings = nil
}

func (x *DescribeTableResult) ClearPartitioningSettings() {
	x.xxx_hidden_PartitioningSettings = nil
}

func (x *DescribeTableResult) ClearReadReplicasSettings() {
	x.xxx_hidden_ReadReplicasSettings = nil
}

type DescribeTableResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Description of scheme object
	Self *Ydb_Scheme.Entry
	// List of columns
	Columns []*ColumnMeta
	// List of primary key columns
	PrimaryKey []string
	// List of key ranges for shard
	ShardKeyBounds []*Ydb.TypedValue
	// List of indexes
	Indexes []*TableIndexDescription
	// Statistics of table
	TableStats *TableStats
	// TTL params
	TtlSettings *TtlSettings
	// Storage settings for table
	StorageSettings *StorageSettings
	// Column families
	ColumnFamilies []*ColumnFamily
	// Attributes
	Attributes map[string]string
	// Partitioning settings for table
	PartitioningSettings *PartitioningSettings
	// Bloom filter by key
	KeyBloomFilter Ydb.FeatureFlag_Status
	// Read replicas settings for table
	ReadReplicasSettings *ReadReplicasSettings
	// List of changefeeds
	Changefeeds []*ChangefeedDescription
	// Tiering rules name
	Tiering string
	// Is temporary table
	Temporary bool
	// Is table column or row oriented
	StoreType StoreType
}

func (b0 DescribeTableResult_builder) Build() *DescribeTableResult {
	m0 := &DescribeTableResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Self = b.Self
	x.xxx_hidden_Columns = &b.Columns
	x.xxx_hidden_PrimaryKey = b.PrimaryKey
	x.xxx_hidden_ShardKeyBounds = &b.ShardKeyBounds
	x.xxx_hidden_Indexes = &b.Indexes
	x.xxx_hidden_TableStats = b.TableStats
	x.xxx_hidden_TtlSettings = b.TtlSettings
	x.xxx_hidden_StorageSettings = b.StorageSettings
	x.xxx_hidden_ColumnFamilies = &b.ColumnFamilies
	x.xxx_hidden_Attributes = b.Attributes
	x.xxx_hidden_PartitioningSettings = b.PartitioningSettings
	x.xxx_hidden_KeyBloomFilter = b.KeyBloomFilter
	x.xxx_hidden_ReadReplicasSettings = b.ReadReplicasSettings
	x.xxx_hidden_Changefeeds = &b.Changefeeds
	x.xxx_hidden_Tiering = b.Tiering
	x.xxx_hidden_Temporary = b.Temporary
	x.xxx_hidden_StoreType = b.StoreType
	return m0
}

type Query struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Query isQuery_Query          `protobuf_oneof:"query"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Query) Reset() {
	*x = Query{}
	mi := &file_protos_ydb_table_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Query) GetYqlText() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Query.(*query_YqlText); ok {
			return x.YqlText
		}
	}
	return ""
}

func (x *Query) GetId() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Query.(*query_Id); ok {
			return x.Id
		}
	}
	return ""
}

func (x *Query) SetYqlText(v string) {
	x.xxx_hidden_Query = &query_YqlText{v}
}

func (x *Query) SetId(v string) {
	x.xxx_hidden_Query = &query_Id{v}
}

func (x *Query) HasQuery() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Query != nil
}

func (x *Query) HasYqlText() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Query.(*query_YqlText)
	return ok
}

func (x *Query) HasId() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Query.(*query_Id)
	return ok
}

func (x *Query) ClearQuery() {
	x.xxx_hidden_Query = nil
}

func (x *Query) ClearYqlText() {
	if _, ok := x.xxx_hidden_Query.(*query_YqlText); ok {
		x.xxx_hidden_Query = nil
	}
}

func (x *Query) ClearId() {
	if _, ok := x.xxx_hidden_Query.(*query_Id); ok {
		x.xxx_hidden_Query = nil
	}
}

const Query_Query_not_set_case case_Query_Query = 0
const Query_YqlText_case case_Query_Query = 1
const Query_Id_case case_Query_Query = 2

func (x *Query) WhichQuery() case_Query_Query {
	if x == nil {
		return Query_Query_not_set_case
	}
	switch x.xxx_hidden_Query.(type) {
	case *query_YqlText:
		return Query_YqlText_case
	case *query_Id:
		return Query_Id_case
	default:
		return Query_Query_not_set_case
	}
}

type Query_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Text of query or id prepared query

	// Fields of oneof xxx_hidden_Query:
	// SQL program
	YqlText *string
	// Prepared query id
	Id *string
	// -- end of xxx_hidden_Query
}

func (b0 Query_builder) Build() *Query {
	m0 := &Query{}
	b, x := &b0, m0
	_, _ = b, x
	if b.YqlText != nil {
		x.xxx_hidden_Query = &query_YqlText{*b.YqlText}
	}
	if b.Id != nil {
		x.xxx_hidden_Query = &query_Id{*b.Id}
	}
	return m0
}

type case_Query_Query protoreflect.FieldNumber

func (x case_Query_Query) String() string {
	md := file_protos_ydb_table_proto_msgTypes[58].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isQuery_Query interface {
	isQuery_Query()
}

type query_YqlText struct {
	// SQL program
	YqlText string `protobuf:"bytes,1,opt,name=yql_text,json=yqlText,proto3,oneof"`
}

type query_Id struct {
	// Prepared query id
	Id string `protobuf:"bytes,2,opt,name=id,proto3,oneof"`
}

func (*query_YqlText) isQuery_Query() {}

func (*query_Id) isQuery_Query() {}

type SerializableModeSettings struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SerializableModeSettings) Reset() {
	*x = SerializableModeSettings{}
	mi := &file_protos_ydb_table_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SerializableModeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializableModeSettings) ProtoMessage() {}

func (x *SerializableModeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type SerializableModeSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 SerializableModeSettings_builder) Build() *SerializableModeSettings {
	m0 := &SerializableModeSettings{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type OnlineModeSettings struct {
	state                             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_AllowInconsistentReads bool                   `protobuf:"varint,1,opt,name=allow_inconsistent_reads,json=allowInconsistentReads,proto3"`
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *OnlineModeSettings) Reset() {
	*x = OnlineModeSettings{}
	mi := &file_protos_ydb_table_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineModeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineModeSettings) ProtoMessage() {}

func (x *OnlineModeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OnlineModeSettings) GetAllowInconsistentReads() bool {
	if x != nil {
		return x.xxx_hidden_AllowInconsistentReads
	}
	return false
}

func (x *OnlineModeSettings) SetAllowInconsistentReads(v bool) {
	x.xxx_hidden_AllowInconsistentReads = v
}

type OnlineModeSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	AllowInconsistentReads bool
}

func (b0 OnlineModeSettings_builder) Build() *OnlineModeSettings {
	m0 := &OnlineModeSettings{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_AllowInconsistentReads = b.AllowInconsistentReads
	return m0
}

type StaleModeSettings struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StaleModeSettings) Reset() {
	*x = StaleModeSettings{}
	mi := &file_protos_ydb_table_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StaleModeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaleModeSettings) ProtoMessage() {}

func (x *StaleModeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type StaleModeSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 StaleModeSettings_builder) Build() *StaleModeSettings {
	m0 := &StaleModeSettings{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type SnapshotModeSettings struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotModeSettings) Reset() {
	*x = SnapshotModeSettings{}
	mi := &file_protos_ydb_table_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotModeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotModeSettings) ProtoMessage() {}

func (x *SnapshotModeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type SnapshotModeSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 SnapshotModeSettings_builder) Build() *SnapshotModeSettings {
	m0 := &SnapshotModeSettings{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type TransactionSettings struct {
	state             protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_TxMode isTransactionSettings_TxMode `protobuf_oneof:"tx_mode"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TransactionSettings) Reset() {
	*x = TransactionSettings{}
	mi := &file_protos_ydb_table_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionSettings) ProtoMessage() {}

func (x *TransactionSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TransactionSettings) GetSerializableReadWrite() *SerializableModeSettings {
	if x != nil {
		if x, ok := x.xxx_hidden_TxMode.(*transactionSettings_SerializableReadWrite); ok {
			return x.SerializableReadWrite
		}
	}
	return nil
}

func (x *TransactionSettings) GetOnlineReadOnly() *OnlineModeSettings {
	if x != nil {
		if x, ok := x.xxx_hidden_TxMode.(*transactionSettings_OnlineReadOnly); ok {
			return x.OnlineReadOnly
		}
	}
	return nil
}

func (x *TransactionSettings) GetStaleReadOnly() *StaleModeSettings {
	if x != nil {
		if x, ok := x.xxx_hidden_TxMode.(*transactionSettings_StaleReadOnly); ok {
			return x.StaleReadOnly
		}
	}
	return nil
}

func (x *TransactionSettings) GetSnapshotReadOnly() *SnapshotModeSettings {
	if x != nil {
		if x, ok := x.xxx_hidden_TxMode.(*transactionSettings_SnapshotReadOnly); ok {
			return x.SnapshotReadOnly
		}
	}
	return nil
}

func (x *TransactionSettings) SetSerializableReadWrite(v *SerializableModeSettings) {
	if v == nil {
		x.xxx_hidden_TxMode = nil
		return
	}
	x.xxx_hidden_TxMode = &transactionSettings_SerializableReadWrite{v}
}

func (x *TransactionSettings) SetOnlineReadOnly(v *OnlineModeSettings) {
	if v == nil {
		x.xxx_hidden_TxMode = nil
		return
	}
	x.xxx_hidden_TxMode = &transactionSettings_OnlineReadOnly{v}
}

func (x *TransactionSettings) SetStaleReadOnly(v *StaleModeSettings) {
	if v == nil {
		x.xxx_hidden_TxMode = nil
		return
	}
	x.xxx_hidden_TxMode = &transactionSettings_StaleReadOnly{v}
}

func (x *TransactionSettings) SetSnapshotReadOnly(v *SnapshotModeSettings) {
	if v == nil {
		x.xxx_hidden_TxMode = nil
		return
	}
	x.xxx_hidden_TxMode = &transactionSettings_SnapshotReadOnly{v}
}

func (x *TransactionSettings) HasTxMode() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TxMode != nil
}

func (x *TransactionSettings) HasSerializableReadWrite() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_TxMode.(*transactionSettings_SerializableReadWrite)
	return ok
}

func (x *TransactionSettings) HasOnlineReadOnly() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_TxMode.(*transactionSettings_OnlineReadOnly)
	return ok
}

func (x *TransactionSettings) HasStaleReadOnly() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_TxMode.(*transactionSettings_StaleReadOnly)
	return ok
}

func (x *TransactionSettings) HasSnapshotReadOnly() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_TxMode.(*transactionSettings_SnapshotReadOnly)
	return ok
}

func (x *TransactionSettings) ClearTxMode() {
	x.xxx_hidden_TxMode = nil
}

func (x *TransactionSettings) ClearSerializableReadWrite() {
	if _, ok := x.xxx_hidden_TxMode.(*transactionSettings_SerializableReadWrite); ok {
		x.xxx_hidden_TxMode = nil
	}
}

func (x *TransactionSettings) ClearOnlineReadOnly() {
	if _, ok := x.xxx_hidden_TxMode.(*transactionSettings_OnlineReadOnly); ok {
		x.xxx_hidden_TxMode = nil
	}
}

func (x *TransactionSettings) ClearStaleReadOnly() {
	if _, ok := x.xxx_hidden_TxMode.(*transactionSettings_StaleReadOnly); ok {
		x.xxx_hidden_TxMode = nil
	}
}

func (x *TransactionSettings) ClearSnapshotReadOnly() {
	if _, ok := x.xxx_hidden_TxMode.(*transactionSettings_SnapshotReadOnly); ok {
		x.xxx_hidden_TxMode = nil
	}
}

const TransactionSettings_TxMode_not_set_case case_TransactionSettings_TxMode = 0
const TransactionSettings_SerializableReadWrite_case case_TransactionSettings_TxMode = 1
const TransactionSettings_OnlineReadOnly_case case_TransactionSettings_TxMode = 2
const TransactionSettings_StaleReadOnly_case case_TransactionSettings_TxMode = 3
const TransactionSettings_SnapshotReadOnly_case case_TransactionSettings_TxMode = 4

func (x *TransactionSettings) WhichTxMode() case_TransactionSettings_TxMode {
	if x == nil {
		return TransactionSettings_TxMode_not_set_case
	}
	switch x.xxx_hidden_TxMode.(type) {
	case *transactionSettings_SerializableReadWrite:
		return TransactionSettings_SerializableReadWrite_case
	case *transactionSettings_OnlineReadOnly:
		return TransactionSettings_OnlineReadOnly_case
	case *transactionSettings_StaleReadOnly:
		return TransactionSettings_StaleReadOnly_case
	case *transactionSettings_SnapshotReadOnly:
		return TransactionSettings_SnapshotReadOnly_case
	default:
		return TransactionSettings_TxMode_not_set_case
	}
}

type TransactionSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_TxMode:
	SerializableReadWrite *SerializableModeSettings
	OnlineReadOnly        *OnlineModeSettings
	StaleReadOnly         *StaleModeSettings
	SnapshotReadOnly      *SnapshotModeSettings
	// -- end of xxx_hidden_TxMode
}

func (b0 TransactionSettings_builder) Build() *TransactionSettings {
	m0 := &TransactionSettings{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SerializableReadWrite != nil {
		x.xxx_hidden_TxMode = &transactionSettings_SerializableReadWrite{b.SerializableReadWrite}
	}
	if b.OnlineReadOnly != nil {
		x.xxx_hidden_TxMode = &transactionSettings_OnlineReadOnly{b.OnlineReadOnly}
	}
	if b.StaleReadOnly != nil {
		x.xxx_hidden_TxMode = &transactionSettings_StaleReadOnly{b.StaleReadOnly}
	}
	if b.SnapshotReadOnly != nil {
		x.xxx_hidden_TxMode = &transactionSettings_SnapshotReadOnly{b.SnapshotReadOnly}
	}
	return m0
}

type case_TransactionSettings_TxMode protoreflect.FieldNumber

func (x case_TransactionSettings_TxMode) String() string {
	md := file_protos_ydb_table_proto_msgTypes[63].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isTransactionSettings_TxMode interface {
	isTransactionSettings_TxMode()
}

type transactionSettings_SerializableReadWrite struct {
	SerializableReadWrite *SerializableModeSettings `protobuf:"bytes,1,opt,name=serializable_read_write,json=serializableReadWrite,proto3,oneof"`
}

type transactionSettings_OnlineReadOnly struct {
	OnlineReadOnly *OnlineModeSettings `protobuf:"bytes,2,opt,name=online_read_only,json=onlineReadOnly,proto3,oneof"`
}

type transactionSettings_StaleReadOnly struct {
	StaleReadOnly *StaleModeSettings `protobuf:"bytes,3,opt,name=stale_read_only,json=staleReadOnly,proto3,oneof"`
}

type transactionSettings_SnapshotReadOnly struct {
	SnapshotReadOnly *SnapshotModeSettings `protobuf:"bytes,4,opt,name=snapshot_read_only,json=snapshotReadOnly,proto3,oneof"`
}

func (*transactionSettings_SerializableReadWrite) isTransactionSettings_TxMode() {}

func (*transactionSettings_OnlineReadOnly) isTransactionSettings_TxMode() {}

func (*transactionSettings_StaleReadOnly) isTransactionSettings_TxMode() {}

func (*transactionSettings_SnapshotReadOnly) isTransactionSettings_TxMode() {}

type TransactionControl struct {
	state                 protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_TxSelector isTransactionControl_TxSelector `protobuf_oneof:"tx_selector"`
	xxx_hidden_CommitTx   bool                            `protobuf:"varint,10,opt,name=commit_tx,json=commitTx,proto3"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *TransactionControl) Reset() {
	*x = TransactionControl{}
	mi := &file_protos_ydb_table_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionControl) ProtoMessage() {}

func (x *TransactionControl) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TransactionControl) GetTxId() string {
	if x != nil {
		if x, ok := x.xxx_hidden_TxSelector.(*transactionControl_TxId); ok {
			return x.TxId
		}
	}
	return ""
}

func (x *TransactionControl) GetBeginTx() *TransactionSettings {
	if x != nil {
		if x, ok := x.xxx_hidden_TxSelector.(*transactionControl_BeginTx); ok {
			return x.BeginTx
		}
	}
	return nil
}

func (x *TransactionControl) GetCommitTx() bool {
	if x != nil {
		return x.xxx_hidden_CommitTx
	}
	return false
}

func (x *TransactionControl) SetTxId(v string) {
	x.xxx_hidden_TxSelector = &transactionControl_TxId{v}
}

func (x *TransactionControl) SetBeginTx(v *TransactionSettings) {
	if v == nil {
		x.xxx_hidden_TxSelector = nil
		return
	}
	x.xxx_hidden_TxSelector = &transactionControl_BeginTx{v}
}

func (x *TransactionControl) SetCommitTx(v bool) {
	x.xxx_hidden_CommitTx = v
}

func (x *TransactionControl) HasTxSelector() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TxSelector != nil
}

func (x *TransactionControl) HasTxId() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_TxSelector.(*transactionControl_TxId)
	return ok
}

func (x *TransactionControl) HasBeginTx() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_TxSelector.(*transactionControl_BeginTx)
	return ok
}

func (x *TransactionControl) ClearTxSelector() {
	x.xxx_hidden_TxSelector = nil
}

func (x *TransactionControl) ClearTxId() {
	if _, ok := x.xxx_hidden_TxSelector.(*transactionControl_TxId); ok {
		x.xxx_hidden_TxSelector = nil
	}
}

func (x *TransactionControl) ClearBeginTx() {
	if _, ok := x.xxx_hidden_TxSelector.(*transactionControl_BeginTx); ok {
		x.xxx_hidden_TxSelector = nil
	}
}

const TransactionControl_TxSelector_not_set_case case_TransactionControl_TxSelector = 0
const TransactionControl_TxId_case case_TransactionControl_TxSelector = 1
const TransactionControl_BeginTx_case case_TransactionControl_TxSelector = 2

func (x *TransactionControl) WhichTxSelector() case_TransactionControl_TxSelector {
	if x == nil {
		return TransactionControl_TxSelector_not_set_case
	}
	switch x.xxx_hidden_TxSelector.(type) {
	case *transactionControl_TxId:
		return TransactionControl_TxId_case
	case *transactionControl_BeginTx:
		return TransactionControl_BeginTx_case
	default:
		return TransactionControl_TxSelector_not_set_case
	}
}

type TransactionControl_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_TxSelector:
	TxId    *string
	BeginTx *TransactionSettings
	// -- end of xxx_hidden_TxSelector
	CommitTx bool
}

func (b0 TransactionControl_builder) Build() *TransactionControl {
	m0 := &TransactionControl{}
	b, x := &b0, m0
	_, _ = b, x
	if b.TxId != nil {
		x.xxx_hidden_TxSelector = &transactionControl_TxId{*b.TxId}
	}
	if b.BeginTx != nil {
		x.xxx_hidden_TxSelector = &transactionControl_BeginTx{b.BeginTx}
	}
	x.xxx_hidden_CommitTx = b.CommitTx
	return m0
}

type case_TransactionControl_TxSelector protoreflect.FieldNumber

func (x case_TransactionControl_TxSelector) String() string {
	md := file_protos_ydb_table_proto_msgTypes[64].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isTransactionControl_TxSelector interface {
	isTransactionControl_TxSelector()
}

type transactionControl_TxId struct {
	TxId string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3,oneof"`
}

type transactionControl_BeginTx struct {
	BeginTx *TransactionSettings `protobuf:"bytes,2,opt,name=begin_tx,json=beginTx,proto3,oneof"`
}

func (*transactionControl_TxId) isTransactionControl_TxSelector() {}

func (*transactionControl_BeginTx) isTransactionControl_TxSelector() {}

type QueryCachePolicy struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_KeepInCache bool                   `protobuf:"varint,1,opt,name=keep_in_cache,json=keepInCache,proto3"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *QueryCachePolicy) Reset() {
	*x = QueryCachePolicy{}
	mi := &file_protos_ydb_table_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryCachePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCachePolicy) ProtoMessage() {}

func (x *QueryCachePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryCachePolicy) GetKeepInCache() bool {
	if x != nil {
		return x.xxx_hidden_KeepInCache
	}
	return false
}

func (x *QueryCachePolicy) SetKeepInCache(v bool) {
	x.xxx_hidden_KeepInCache = v
}

type QueryCachePolicy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	KeepInCache bool
}

func (b0 QueryCachePolicy_builder) Build() *QueryCachePolicy {
	m0 := &QueryCachePolicy{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_KeepInCache = b.KeepInCache
	return m0
}

// Collect and return query execution stats
type QueryStatsCollection struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryStatsCollection) Reset() {
	*x = QueryStatsCollection{}
	mi := &file_protos_ydb_table_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryStatsCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStatsCollection) ProtoMessage() {}

func (x *QueryStatsCollection) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type QueryStatsCollection_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 QueryStatsCollection_builder) Build() *QueryStatsCollection {
	m0 := &QueryStatsCollection{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ExecuteDataQueryRequest struct {
	state                       protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_SessionId        string                          `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_TxControl        *TransactionControl             `protobuf:"bytes,2,opt,name=tx_control,json=txControl,proto3"`
	xxx_hidden_Query            *Query                          `protobuf:"bytes,3,opt,name=query,proto3"`
	xxx_hidden_Parameters       map[string]*Ydb.TypedValue      `protobuf:"bytes,4,rep,name=parameters,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_QueryCachePolicy *QueryCachePolicy               `protobuf:"bytes,5,opt,name=query_cache_policy,json=queryCachePolicy,proto3"`
	xxx_hidden_OperationParams  *Ydb_Operations.OperationParams `protobuf:"bytes,6,opt,name=operation_params,json=operationParams,proto3"`
	xxx_hidden_CollectStats     QueryStatsCollection_Mode       `protobuf:"varint,7,opt,name=collect_stats,json=collectStats,proto3,enum=Ydb.Table.QueryStatsCollection_Mode"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ExecuteDataQueryRequest) Reset() {
	*x = ExecuteDataQueryRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteDataQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteDataQueryRequest) ProtoMessage() {}

func (x *ExecuteDataQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteDataQueryRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *ExecuteDataQueryRequest) GetTxControl() *TransactionControl {
	if x != nil {
		return x.xxx_hidden_TxControl
	}
	return nil
}

func (x *ExecuteDataQueryRequest) GetQuery() *Query {
	if x != nil {
		return x.xxx_hidden_Query
	}
	return nil
}

func (x *ExecuteDataQueryRequest) GetParameters() map[string]*Ydb.TypedValue {
	if x != nil {
		return x.xxx_hidden_Parameters
	}
	return nil
}

func (x *ExecuteDataQueryRequest) GetQueryCachePolicy() *QueryCachePolicy {
	if x != nil {
		return x.xxx_hidden_QueryCachePolicy
	}
	return nil
}

func (x *ExecuteDataQueryRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *ExecuteDataQueryRequest) GetCollectStats() QueryStatsCollection_Mode {
	if x != nil {
		return x.xxx_hidden_CollectStats
	}
	return QueryStatsCollection_STATS_COLLECTION_UNSPECIFIED
}

func (x *ExecuteDataQueryRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *ExecuteDataQueryRequest) SetTxControl(v *TransactionControl) {
	x.xxx_hidden_TxControl = v
}

func (x *ExecuteDataQueryRequest) SetQuery(v *Query) {
	x.xxx_hidden_Query = v
}

func (x *ExecuteDataQueryRequest) SetParameters(v map[string]*Ydb.TypedValue) {
	x.xxx_hidden_Parameters = v
}

func (x *ExecuteDataQueryRequest) SetQueryCachePolicy(v *QueryCachePolicy) {
	x.xxx_hidden_QueryCachePolicy = v
}

func (x *ExecuteDataQueryRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *ExecuteDataQueryRequest) SetCollectStats(v QueryStatsCollection_Mode) {
	x.xxx_hidden_CollectStats = v
}

func (x *ExecuteDataQueryRequest) HasTxControl() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TxControl != nil
}

func (x *ExecuteDataQueryRequest) HasQuery() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Query != nil
}

func (x *ExecuteDataQueryRequest) HasQueryCachePolicy() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_QueryCachePolicy != nil
}

func (x *ExecuteDataQueryRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *ExecuteDataQueryRequest) ClearTxControl() {
	x.xxx_hidden_TxControl = nil
}

func (x *ExecuteDataQueryRequest) ClearQuery() {
	x.xxx_hidden_Query = nil
}

func (x *ExecuteDataQueryRequest) ClearQueryCachePolicy() {
	x.xxx_hidden_QueryCachePolicy = nil
}

func (x *ExecuteDataQueryRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

type ExecuteDataQueryRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier
	SessionId string
	TxControl *TransactionControl
	Query     *Query
	// Map of query parameters (optional)
	Parameters       map[string]*Ydb.TypedValue
	QueryCachePolicy *QueryCachePolicy
	OperationParams  *Ydb_Operations.OperationParams
	CollectStats     QueryStatsCollection_Mode
}

func (b0 ExecuteDataQueryRequest_builder) Build() *ExecuteDataQueryRequest {
	m0 := &ExecuteDataQueryRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_TxControl = b.TxControl
	x.xxx_hidden_Query = b.Query
	x.xxx_hidden_Parameters = b.Parameters
	x.xxx_hidden_QueryCachePolicy = b.QueryCachePolicy
	x.xxx_hidden_OperationParams = b.OperationParams
	x.xxx_hidden_CollectStats = b.CollectStats
	return m0
}

type ExecuteDataQueryResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ExecuteDataQueryResponse) Reset() {
	*x = ExecuteDataQueryResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteDataQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteDataQueryResponse) ProtoMessage() {}

func (x *ExecuteDataQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteDataQueryResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *ExecuteDataQueryResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *ExecuteDataQueryResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *ExecuteDataQueryResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type ExecuteDataQueryResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 ExecuteDataQueryResponse_builder) Build() *ExecuteDataQueryResponse {
	m0 := &ExecuteDataQueryResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type ExecuteSchemeQueryRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_SessionId       string                          `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_YqlText         string                          `protobuf:"bytes,2,opt,name=yql_text,json=yqlText,proto3"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,3,opt,name=operation_params,json=operationParams,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ExecuteSchemeQueryRequest) Reset() {
	*x = ExecuteSchemeQueryRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteSchemeQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteSchemeQueryRequest) ProtoMessage() {}

func (x *ExecuteSchemeQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteSchemeQueryRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *ExecuteSchemeQueryRequest) GetYqlText() string {
	if x != nil {
		return x.xxx_hidden_YqlText
	}
	return ""
}

func (x *ExecuteSchemeQueryRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *ExecuteSchemeQueryRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *ExecuteSchemeQueryRequest) SetYqlText(v string) {
	x.xxx_hidden_YqlText = v
}

func (x *ExecuteSchemeQueryRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *ExecuteSchemeQueryRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *ExecuteSchemeQueryRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

type ExecuteSchemeQueryRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier
	SessionId string
	// SQL text
	YqlText         string
	OperationParams *Ydb_Operations.OperationParams
}

func (b0 ExecuteSchemeQueryRequest_builder) Build() *ExecuteSchemeQueryRequest {
	m0 := &ExecuteSchemeQueryRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_YqlText = b.YqlText
	x.xxx_hidden_OperationParams = b.OperationParams
	return m0
}

type ExecuteSchemeQueryResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ExecuteSchemeQueryResponse) Reset() {
	*x = ExecuteSchemeQueryResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteSchemeQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteSchemeQueryResponse) ProtoMessage() {}

func (x *ExecuteSchemeQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteSchemeQueryResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *ExecuteSchemeQueryResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *ExecuteSchemeQueryResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *ExecuteSchemeQueryResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type ExecuteSchemeQueryResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 ExecuteSchemeQueryResponse_builder) Build() *ExecuteSchemeQueryResponse {
	m0 := &ExecuteSchemeQueryResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

// Holds transaction id
type TransactionMeta struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id string                 `protobuf:"bytes,1,opt,name=id,proto3"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionMeta) Reset() {
	*x = TransactionMeta{}
	mi := &file_protos_ydb_table_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMeta) ProtoMessage() {}

func (x *TransactionMeta) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TransactionMeta) GetId() string {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return ""
}

func (x *TransactionMeta) SetId(v string) {
	x.xxx_hidden_Id = v
}

type TransactionMeta_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Transaction identifier
	Id string
}

func (b0 TransactionMeta_builder) Build() *TransactionMeta {
	m0 := &TransactionMeta{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	return m0
}

// Holds query id and type of parameters
type QueryMeta struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id              string                 `protobuf:"bytes,1,opt,name=id,proto3"`
	xxx_hidden_ParametersTypes map[string]*Ydb.Type   `protobuf:"bytes,2,rep,name=parameters_types,json=parametersTypes,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *QueryMeta) Reset() {
	*x = QueryMeta{}
	mi := &file_protos_ydb_table_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMeta) ProtoMessage() {}

func (x *QueryMeta) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryMeta) GetId() string {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return ""
}

func (x *QueryMeta) GetParametersTypes() map[string]*Ydb.Type {
	if x != nil {
		return x.xxx_hidden_ParametersTypes
	}
	return nil
}

func (x *QueryMeta) SetId(v string) {
	x.xxx_hidden_Id = v
}

func (x *QueryMeta) SetParametersTypes(v map[string]*Ydb.Type) {
	x.xxx_hidden_ParametersTypes = v
}

type QueryMeta_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Query identifier
	Id string
	// Type of parameters
	ParametersTypes map[string]*Ydb.Type
}

func (b0 QueryMeta_builder) Build() *QueryMeta {
	m0 := &QueryMeta{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	x.xxx_hidden_ParametersTypes = b.ParametersTypes
	return m0
}

// One QueryResult can contain multiple tables
type ExecuteQueryResult struct {
	state                 protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_ResultSets *[]*Ydb.ResultSet          `protobuf:"bytes,1,rep,name=result_sets,json=resultSets,proto3"`
	xxx_hidden_TxMeta     *TransactionMeta           `protobuf:"bytes,2,opt,name=tx_meta,json=txMeta,proto3"`
	xxx_hidden_QueryMeta  *QueryMeta                 `protobuf:"bytes,3,opt,name=query_meta,json=queryMeta,proto3"`
	xxx_hidden_QueryStats *Ydb_TableStats.QueryStats `protobuf:"bytes,4,opt,name=query_stats,json=queryStats,proto3"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ExecuteQueryResult) Reset() {
	*x = ExecuteQueryResult{}
	mi := &file_protos_ydb_table_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteQueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteQueryResult) ProtoMessage() {}

func (x *ExecuteQueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteQueryResult) GetResultSets() []*Ydb.ResultSet {
	if x != nil {
		if x.xxx_hidden_ResultSets != nil {
			return *x.xxx_hidden_ResultSets
		}
	}
	return nil
}

func (x *ExecuteQueryResult) GetTxMeta() *TransactionMeta {
	if x != nil {
		return x.xxx_hidden_TxMeta
	}
	return nil
}

func (x *ExecuteQueryResult) GetQueryMeta() *QueryMeta {
	if x != nil {
		return x.xxx_hidden_QueryMeta
	}
	return nil
}

func (x *ExecuteQueryResult) GetQueryStats() *Ydb_TableStats.QueryStats {
	if x != nil {
		return x.xxx_hidden_QueryStats
	}
	return nil
}

func (x *ExecuteQueryResult) SetResultSets(v []*Ydb.ResultSet) {
	x.xxx_hidden_ResultSets = &v
}

func (x *ExecuteQueryResult) SetTxMeta(v *TransactionMeta) {
	x.xxx_hidden_TxMeta = v
}

func (x *ExecuteQueryResult) SetQueryMeta(v *QueryMeta) {
	x.xxx_hidden_QueryMeta = v
}

func (x *ExecuteQueryResult) SetQueryStats(v *Ydb_TableStats.QueryStats) {
	x.xxx_hidden_QueryStats = v
}

func (x *ExecuteQueryResult) HasTxMeta() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TxMeta != nil
}

func (x *ExecuteQueryResult) HasQueryMeta() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_QueryMeta != nil
}

func (x *ExecuteQueryResult) HasQueryStats() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_QueryStats != nil
}

func (x *ExecuteQueryResult) ClearTxMeta() {
	x.xxx_hidden_TxMeta = nil
}

func (x *ExecuteQueryResult) ClearQueryMeta() {
	x.xxx_hidden_QueryMeta = nil
}

func (x *ExecuteQueryResult) ClearQueryStats() {
	x.xxx_hidden_QueryStats = nil
}

type ExecuteQueryResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Result rets (for each table)
	ResultSets []*Ydb.ResultSet
	// Transaction metadata
	TxMeta *TransactionMeta
	// Query metadata
	QueryMeta *QueryMeta
	// Query execution statistics
	QueryStats *Ydb_TableStats.QueryStats
}

func (b0 ExecuteQueryResult_builder) Build() *ExecuteQueryResult {
	m0 := &ExecuteQueryResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ResultSets = &b.ResultSets
	x.xxx_hidden_TxMeta = b.TxMeta
	x.xxx_hidden_QueryMeta = b.QueryMeta
	x.xxx_hidden_QueryStats = b.QueryStats
	return m0
}

// Explain data query
type ExplainDataQueryRequest struct {
	state                             protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_SessionId              string                          `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_YqlText                string                          `protobuf:"bytes,2,opt,name=yql_text,json=yqlText,proto3"`
	xxx_hidden_OperationParams        *Ydb_Operations.OperationParams `protobuf:"bytes,3,opt,name=operation_params,json=operationParams,proto3"`
	xxx_hidden_CollectFullDiagnostics bool                            `protobuf:"varint,4,opt,name=collect_full_diagnostics,json=collectFullDiagnostics,proto3"`
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *ExplainDataQueryRequest) Reset() {
	*x = ExplainDataQueryRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExplainDataQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplainDataQueryRequest) ProtoMessage() {}

func (x *ExplainDataQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExplainDataQueryRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *ExplainDataQueryRequest) GetYqlText() string {
	if x != nil {
		return x.xxx_hidden_YqlText
	}
	return ""
}

func (x *ExplainDataQueryRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *ExplainDataQueryRequest) GetCollectFullDiagnostics() bool {
	if x != nil {
		return x.xxx_hidden_CollectFullDiagnostics
	}
	return false
}

func (x *ExplainDataQueryRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *ExplainDataQueryRequest) SetYqlText(v string) {
	x.xxx_hidden_YqlText = v
}

func (x *ExplainDataQueryRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *ExplainDataQueryRequest) SetCollectFullDiagnostics(v bool) {
	x.xxx_hidden_CollectFullDiagnostics = v
}

func (x *ExplainDataQueryRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *ExplainDataQueryRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

type ExplainDataQueryRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier
	SessionId string
	// SQL text to explain
	YqlText                string
	OperationParams        *Ydb_Operations.OperationParams
	CollectFullDiagnostics bool
}

func (b0 ExplainDataQueryRequest_builder) Build() *ExplainDataQueryRequest {
	m0 := &ExplainDataQueryRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_YqlText = b.YqlText
	x.xxx_hidden_OperationParams = b.OperationParams
	x.xxx_hidden_CollectFullDiagnostics = b.CollectFullDiagnostics
	return m0
}

type ExplainDataQueryResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ExplainDataQueryResponse) Reset() {
	*x = ExplainDataQueryResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExplainDataQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplainDataQueryResponse) ProtoMessage() {}

func (x *ExplainDataQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExplainDataQueryResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *ExplainDataQueryResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *ExplainDataQueryResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *ExplainDataQueryResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type ExplainDataQueryResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Holds ExplainQueryResult in case of successful call
	Operation *Ydb_Operations.Operation
}

func (b0 ExplainDataQueryResponse_builder) Build() *ExplainDataQueryResponse {
	m0 := &ExplainDataQueryResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type ExplainQueryResult struct {
	state                           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_QueryAst             string                 `protobuf:"bytes,1,opt,name=query_ast,json=queryAst,proto3"`
	xxx_hidden_QueryPlan            string                 `protobuf:"bytes,2,opt,name=query_plan,json=queryPlan,proto3"`
	xxx_hidden_QueryFullDiagnostics string                 `protobuf:"bytes,3,opt,name=query_full_diagnostics,json=queryFullDiagnostics,proto3"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *ExplainQueryResult) Reset() {
	*x = ExplainQueryResult{}
	mi := &file_protos_ydb_table_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExplainQueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplainQueryResult) ProtoMessage() {}

func (x *ExplainQueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExplainQueryResult) GetQueryAst() string {
	if x != nil {
		return x.xxx_hidden_QueryAst
	}
	return ""
}

func (x *ExplainQueryResult) GetQueryPlan() string {
	if x != nil {
		return x.xxx_hidden_QueryPlan
	}
	return ""
}

func (x *ExplainQueryResult) GetQueryFullDiagnostics() string {
	if x != nil {
		return x.xxx_hidden_QueryFullDiagnostics
	}
	return ""
}

func (x *ExplainQueryResult) SetQueryAst(v string) {
	x.xxx_hidden_QueryAst = v
}

func (x *ExplainQueryResult) SetQueryPlan(v string) {
	x.xxx_hidden_QueryPlan = v
}

func (x *ExplainQueryResult) SetQueryFullDiagnostics(v string) {
	x.xxx_hidden_QueryFullDiagnostics = v
}

type ExplainQueryResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	QueryAst             string
	QueryPlan            string
	QueryFullDiagnostics string
}

func (b0 ExplainQueryResult_builder) Build() *ExplainQueryResult {
	m0 := &ExplainQueryResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_QueryAst = b.QueryAst
	x.xxx_hidden_QueryPlan = b.QueryPlan
	x.xxx_hidden_QueryFullDiagnostics = b.QueryFullDiagnostics
	return m0
}

// Prepare given program to execute
type PrepareDataQueryRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_SessionId       string                          `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_YqlText         string                          `protobuf:"bytes,2,opt,name=yql_text,json=yqlText,proto3"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,3,opt,name=operation_params,json=operationParams,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *PrepareDataQueryRequest) Reset() {
	*x = PrepareDataQueryRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareDataQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareDataQueryRequest) ProtoMessage() {}

func (x *PrepareDataQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PrepareDataQueryRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *PrepareDataQueryRequest) GetYqlText() string {
	if x != nil {
		return x.xxx_hidden_YqlText
	}
	return ""
}

func (x *PrepareDataQueryRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *PrepareDataQueryRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *PrepareDataQueryRequest) SetYqlText(v string) {
	x.xxx_hidden_YqlText = v
}

func (x *PrepareDataQueryRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *PrepareDataQueryRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *PrepareDataQueryRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

type PrepareDataQueryRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier
	SessionId string
	// SQL text
	YqlText         string
	OperationParams *Ydb_Operations.OperationParams
}

func (b0 PrepareDataQueryRequest_builder) Build() *PrepareDataQueryRequest {
	m0 := &PrepareDataQueryRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_YqlText = b.YqlText
	x.xxx_hidden_OperationParams = b.OperationParams
	return m0
}

type PrepareDataQueryResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PrepareDataQueryResponse) Reset() {
	*x = PrepareDataQueryResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareDataQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareDataQueryResponse) ProtoMessage() {}

func (x *PrepareDataQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PrepareDataQueryResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *PrepareDataQueryResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *PrepareDataQueryResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *PrepareDataQueryResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type PrepareDataQueryResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Holds PrepareQueryResult in case of successful call
	Operation *Ydb_Operations.Operation
}

func (b0 PrepareDataQueryResponse_builder) Build() *PrepareDataQueryResponse {
	m0 := &PrepareDataQueryResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type PrepareQueryResult struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_QueryId         string                 `protobuf:"bytes,1,opt,name=query_id,json=queryId,proto3"`
	xxx_hidden_ParametersTypes map[string]*Ydb.Type   `protobuf:"bytes,2,rep,name=parameters_types,json=parametersTypes,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *PrepareQueryResult) Reset() {
	*x = PrepareQueryResult{}
	mi := &file_protos_ydb_table_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareQueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareQueryResult) ProtoMessage() {}

func (x *PrepareQueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PrepareQueryResult) GetQueryId() string {
	if x != nil {
		return x.xxx_hidden_QueryId
	}
	return ""
}

func (x *PrepareQueryResult) GetParametersTypes() map[string]*Ydb.Type {
	if x != nil {
		return x.xxx_hidden_ParametersTypes
	}
	return nil
}

func (x *PrepareQueryResult) SetQueryId(v string) {
	x.xxx_hidden_QueryId = v
}

func (x *PrepareQueryResult) SetParametersTypes(v map[string]*Ydb.Type) {
	x.xxx_hidden_ParametersTypes = v
}

type PrepareQueryResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Query id, used to perform ExecuteDataQuery
	QueryId string
	// Parameters type, used to fill in parameter values
	ParametersTypes map[string]*Ydb.Type
}

func (b0 PrepareQueryResult_builder) Build() *PrepareQueryResult {
	m0 := &PrepareQueryResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_QueryId = b.QueryId
	x.xxx_hidden_ParametersTypes = b.ParametersTypes
	return m0
}

// Keep session alive
type KeepAliveRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_SessionId       string                          `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,2,opt,name=operation_params,json=operationParams,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *KeepAliveRequest) Reset() {
	*x = KeepAliveRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeepAliveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAliveRequest) ProtoMessage() {}

func (x *KeepAliveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *KeepAliveRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *KeepAliveRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *KeepAliveRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *KeepAliveRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *KeepAliveRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *KeepAliveRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

type KeepAliveRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier
	SessionId       string
	OperationParams *Ydb_Operations.OperationParams
}

func (b0 KeepAliveRequest_builder) Build() *KeepAliveRequest {
	m0 := &KeepAliveRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_OperationParams = b.OperationParams
	return m0
}

type KeepAliveResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *KeepAliveResponse) Reset() {
	*x = KeepAliveResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeepAliveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAliveResponse) ProtoMessage() {}

func (x *KeepAliveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *KeepAliveResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *KeepAliveResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *KeepAliveResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *KeepAliveResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type KeepAliveResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 KeepAliveResponse_builder) Build() *KeepAliveResponse {
	m0 := &KeepAliveResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type KeepAliveResult struct {
	state                    protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_SessionStatus KeepAliveResult_SessionStatus `protobuf:"varint,1,opt,name=session_status,json=sessionStatus,proto3,enum=Ydb.Table.KeepAliveResult_SessionStatus"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *KeepAliveResult) Reset() {
	*x = KeepAliveResult{}
	mi := &file_protos_ydb_table_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeepAliveResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAliveResult) ProtoMessage() {}

func (x *KeepAliveResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *KeepAliveResult) GetSessionStatus() KeepAliveResult_SessionStatus {
	if x != nil {
		return x.xxx_hidden_SessionStatus
	}
	return KeepAliveResult_SESSION_STATUS_UNSPECIFIED
}

func (x *KeepAliveResult) SetSessionStatus(v KeepAliveResult_SessionStatus) {
	x.xxx_hidden_SessionStatus = v
}

type KeepAliveResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SessionStatus KeepAliveResult_SessionStatus
}

func (b0 KeepAliveResult_builder) Build() *KeepAliveResult {
	m0 := &KeepAliveResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionStatus = b.SessionStatus
	return m0
}

// Begin transaction on given session with given settings
type BeginTransactionRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_SessionId       string                          `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_TxSettings      *TransactionSettings            `protobuf:"bytes,2,opt,name=tx_settings,json=txSettings,proto3"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,3,opt,name=operation_params,json=operationParams,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *BeginTransactionRequest) Reset() {
	*x = BeginTransactionRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeginTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginTransactionRequest) ProtoMessage() {}

func (x *BeginTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BeginTransactionRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *BeginTransactionRequest) GetTxSettings() *TransactionSettings {
	if x != nil {
		return x.xxx_hidden_TxSettings
	}
	return nil
}

func (x *BeginTransactionRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *BeginTransactionRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *BeginTransactionRequest) SetTxSettings(v *TransactionSettings) {
	x.xxx_hidden_TxSettings = v
}

func (x *BeginTransactionRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *BeginTransactionRequest) HasTxSettings() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TxSettings != nil
}

func (x *BeginTransactionRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *BeginTransactionRequest) ClearTxSettings() {
	x.xxx_hidden_TxSettings = nil
}

func (x *BeginTransactionRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

type BeginTransactionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier
	SessionId       string
	TxSettings      *TransactionSettings
	OperationParams *Ydb_Operations.OperationParams
}

func (b0 BeginTransactionRequest_builder) Build() *BeginTransactionRequest {
	m0 := &BeginTransactionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_TxSettings = b.TxSettings
	x.xxx_hidden_OperationParams = b.OperationParams
	return m0
}

type BeginTransactionResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *BeginTransactionResponse) Reset() {
	*x = BeginTransactionResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeginTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginTransactionResponse) ProtoMessage() {}

func (x *BeginTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BeginTransactionResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *BeginTransactionResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *BeginTransactionResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *BeginTransactionResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type BeginTransactionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Holds BeginTransactionResult in case of successful call
	Operation *Ydb_Operations.Operation
}

func (b0 BeginTransactionResponse_builder) Build() *BeginTransactionResponse {
	m0 := &BeginTransactionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type BeginTransactionResult struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TxMeta *TransactionMeta       `protobuf:"bytes,1,opt,name=tx_meta,json=txMeta,proto3"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BeginTransactionResult) Reset() {
	*x = BeginTransactionResult{}
	mi := &file_protos_ydb_table_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeginTransactionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginTransactionResult) ProtoMessage() {}

func (x *BeginTransactionResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BeginTransactionResult) GetTxMeta() *TransactionMeta {
	if x != nil {
		return x.xxx_hidden_TxMeta
	}
	return nil
}

func (x *BeginTransactionResult) SetTxMeta(v *TransactionMeta) {
	x.xxx_hidden_TxMeta = v
}

func (x *BeginTransactionResult) HasTxMeta() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TxMeta != nil
}

func (x *BeginTransactionResult) ClearTxMeta() {
	x.xxx_hidden_TxMeta = nil
}

type BeginTransactionResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	TxMeta *TransactionMeta
}

func (b0 BeginTransactionResult_builder) Build() *BeginTransactionResult {
	m0 := &BeginTransactionResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_TxMeta = b.TxMeta
	return m0
}

// Commit transaction with given session and tx id
type CommitTransactionRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_SessionId       string                          `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_TxId            string                          `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,3,opt,name=operation_params,json=operationParams,proto3"`
	xxx_hidden_CollectStats    QueryStatsCollection_Mode       `protobuf:"varint,4,opt,name=collect_stats,json=collectStats,proto3,enum=Ydb.Table.QueryStatsCollection_Mode"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *CommitTransactionRequest) Reset() {
	*x = CommitTransactionRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTransactionRequest) ProtoMessage() {}

func (x *CommitTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommitTransactionRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *CommitTransactionRequest) GetTxId() string {
	if x != nil {
		return x.xxx_hidden_TxId
	}
	return ""
}

func (x *CommitTransactionRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *CommitTransactionRequest) GetCollectStats() QueryStatsCollection_Mode {
	if x != nil {
		return x.xxx_hidden_CollectStats
	}
	return QueryStatsCollection_STATS_COLLECTION_UNSPECIFIED
}

func (x *CommitTransactionRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *CommitTransactionRequest) SetTxId(v string) {
	x.xxx_hidden_TxId = v
}

func (x *CommitTransactionRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *CommitTransactionRequest) SetCollectStats(v QueryStatsCollection_Mode) {
	x.xxx_hidden_CollectStats = v
}

func (x *CommitTransactionRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *CommitTransactionRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

type CommitTransactionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier
	SessionId string
	// Transaction identifier
	TxId            string
	OperationParams *Ydb_Operations.OperationParams
	CollectStats    QueryStatsCollection_Mode
}

func (b0 CommitTransactionRequest_builder) Build() *CommitTransactionRequest {
	m0 := &CommitTransactionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_TxId = b.TxId
	x.xxx_hidden_OperationParams = b.OperationParams
	x.xxx_hidden_CollectStats = b.CollectStats
	return m0
}

type CommitTransactionResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CommitTransactionResponse) Reset() {
	*x = CommitTransactionResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTransactionResponse) ProtoMessage() {}

func (x *CommitTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommitTransactionResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *CommitTransactionResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *CommitTransactionResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *CommitTransactionResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type CommitTransactionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 CommitTransactionResponse_builder) Build() *CommitTransactionResponse {
	m0 := &CommitTransactionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type CommitTransactionResult struct {
	state                 protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_QueryStats *Ydb_TableStats.QueryStats `protobuf:"bytes,1,opt,name=query_stats,json=queryStats,proto3"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CommitTransactionResult) Reset() {
	*x = CommitTransactionResult{}
	mi := &file_protos_ydb_table_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitTransactionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTransactionResult) ProtoMessage() {}

func (x *CommitTransactionResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommitTransactionResult) GetQueryStats() *Ydb_TableStats.QueryStats {
	if x != nil {
		return x.xxx_hidden_QueryStats
	}
	return nil
}

func (x *CommitTransactionResult) SetQueryStats(v *Ydb_TableStats.QueryStats) {
	x.xxx_hidden_QueryStats = v
}

func (x *CommitTransactionResult) HasQueryStats() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_QueryStats != nil
}

func (x *CommitTransactionResult) ClearQueryStats() {
	x.xxx_hidden_QueryStats = nil
}

type CommitTransactionResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	QueryStats *Ydb_TableStats.QueryStats
}

func (b0 CommitTransactionResult_builder) Build() *CommitTransactionResult {
	m0 := &CommitTransactionResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_QueryStats = b.QueryStats
	return m0
}

// Rollback transaction with given session and tx id
type RollbackTransactionRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_SessionId       string                          `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_TxId            string                          `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,3,opt,name=operation_params,json=operationParams,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *RollbackTransactionRequest) Reset() {
	*x = RollbackTransactionRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackTransactionRequest) ProtoMessage() {}

func (x *RollbackTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RollbackTransactionRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *RollbackTransactionRequest) GetTxId() string {
	if x != nil {
		return x.xxx_hidden_TxId
	}
	return ""
}

func (x *RollbackTransactionRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *RollbackTransactionRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *RollbackTransactionRequest) SetTxId(v string) {
	x.xxx_hidden_TxId = v
}

func (x *RollbackTransactionRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *RollbackTransactionRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *RollbackTransactionRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

type RollbackTransactionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier
	SessionId string
	// Transaction identifier
	TxId            string
	OperationParams *Ydb_Operations.OperationParams
}

func (b0 RollbackTransactionRequest_builder) Build() *RollbackTransactionRequest {
	m0 := &RollbackTransactionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_TxId = b.TxId
	x.xxx_hidden_OperationParams = b.OperationParams
	return m0
}

type RollbackTransactionResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *RollbackTransactionResponse) Reset() {
	*x = RollbackTransactionResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackTransactionResponse) ProtoMessage() {}

func (x *RollbackTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RollbackTransactionResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *RollbackTransactionResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *RollbackTransactionResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *RollbackTransactionResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type RollbackTransactionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 RollbackTransactionResponse_builder) Build() *RollbackTransactionResponse {
	m0 := &RollbackTransactionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type StoragePolicyDescription struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name   string                 `protobuf:"bytes,1,opt,name=name,proto3"`
	xxx_hidden_Labels map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StoragePolicyDescription) Reset() {
	*x = StoragePolicyDescription{}
	mi := &file_protos_ydb_table_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoragePolicyDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoragePolicyDescription) ProtoMessage() {}

func (x *StoragePolicyDescription) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StoragePolicyDescription) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *StoragePolicyDescription) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *StoragePolicyDescription) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *StoragePolicyDescription) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

type StoragePolicyDescription_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name   string
	Labels map[string]string
}

func (b0 StoragePolicyDescription_builder) Build() *StoragePolicyDescription {
	m0 := &StoragePolicyDescription{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Labels = b.Labels
	return m0
}

type CompactionPolicyDescription struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name   string                 `protobuf:"bytes,1,opt,name=name,proto3"`
	xxx_hidden_Labels map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CompactionPolicyDescription) Reset() {
	*x = CompactionPolicyDescription{}
	mi := &file_protos_ydb_table_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompactionPolicyDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompactionPolicyDescription) ProtoMessage() {}

func (x *CompactionPolicyDescription) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CompactionPolicyDescription) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *CompactionPolicyDescription) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *CompactionPolicyDescription) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *CompactionPolicyDescription) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

type CompactionPolicyDescription_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name   string
	Labels map[string]string
}

func (b0 CompactionPolicyDescription_builder) Build() *CompactionPolicyDescription {
	m0 := &CompactionPolicyDescription{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Labels = b.Labels
	return m0
}

type PartitioningPolicyDescription struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name   string                 `protobuf:"bytes,1,opt,name=name,proto3"`
	xxx_hidden_Labels map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PartitioningPolicyDescription) Reset() {
	*x = PartitioningPolicyDescription{}
	mi := &file_protos_ydb_table_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitioningPolicyDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitioningPolicyDescription) ProtoMessage() {}

func (x *PartitioningPolicyDescription) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PartitioningPolicyDescription) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *PartitioningPolicyDescription) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *PartitioningPolicyDescription) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *PartitioningPolicyDescription) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

type PartitioningPolicyDescription_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name   string
	Labels map[string]string
}

func (b0 PartitioningPolicyDescription_builder) Build() *PartitioningPolicyDescription {
	m0 := &PartitioningPolicyDescription{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Labels = b.Labels
	return m0
}

type ExecutionPolicyDescription struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name   string                 `protobuf:"bytes,1,opt,name=name,proto3"`
	xxx_hidden_Labels map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ExecutionPolicyDescription) Reset() {
	*x = ExecutionPolicyDescription{}
	mi := &file_protos_ydb_table_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionPolicyDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionPolicyDescription) ProtoMessage() {}

func (x *ExecutionPolicyDescription) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecutionPolicyDescription) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *ExecutionPolicyDescription) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *ExecutionPolicyDescription) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *ExecutionPolicyDescription) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

type ExecutionPolicyDescription_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name   string
	Labels map[string]string
}

func (b0 ExecutionPolicyDescription_builder) Build() *ExecutionPolicyDescription {
	m0 := &ExecutionPolicyDescription{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Labels = b.Labels
	return m0
}

type ReplicationPolicyDescription struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name   string                 `protobuf:"bytes,1,opt,name=name,proto3"`
	xxx_hidden_Labels map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ReplicationPolicyDescription) Reset() {
	*x = ReplicationPolicyDescription{}
	mi := &file_protos_ydb_table_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicationPolicyDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationPolicyDescription) ProtoMessage() {}

func (x *ReplicationPolicyDescription) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReplicationPolicyDescription) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *ReplicationPolicyDescription) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *ReplicationPolicyDescription) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *ReplicationPolicyDescription) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

type ReplicationPolicyDescription_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name   string
	Labels map[string]string
}

func (b0 ReplicationPolicyDescription_builder) Build() *ReplicationPolicyDescription {
	m0 := &ReplicationPolicyDescription{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Labels = b.Labels
	return m0
}

type CachingPolicyDescription struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name   string                 `protobuf:"bytes,1,opt,name=name,proto3"`
	xxx_hidden_Labels map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CachingPolicyDescription) Reset() {
	*x = CachingPolicyDescription{}
	mi := &file_protos_ydb_table_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CachingPolicyDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CachingPolicyDescription) ProtoMessage() {}

func (x *CachingPolicyDescription) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CachingPolicyDescription) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *CachingPolicyDescription) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *CachingPolicyDescription) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *CachingPolicyDescription) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

type CachingPolicyDescription_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name   string
	Labels map[string]string
}

func (b0 CachingPolicyDescription_builder) Build() *CachingPolicyDescription {
	m0 := &CachingPolicyDescription{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Labels = b.Labels
	return m0
}

type TableProfileDescription struct {
	state                                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name                        string                 `protobuf:"bytes,1,opt,name=name,proto3"`
	xxx_hidden_Labels                      map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_DefaultStoragePolicy        string                 `protobuf:"bytes,3,opt,name=default_storage_policy,json=defaultStoragePolicy,proto3"`
	xxx_hidden_AllowedStoragePolicies      []string               `protobuf:"bytes,4,rep,name=allowed_storage_policies,json=allowedStoragePolicies,proto3"`
	xxx_hidden_DefaultCompactionPolicy     string                 `protobuf:"bytes,5,opt,name=default_compaction_policy,json=defaultCompactionPolicy,proto3"`
	xxx_hidden_AllowedCompactionPolicies   []string               `protobuf:"bytes,6,rep,name=allowed_compaction_policies,json=allowedCompactionPolicies,proto3"`
	xxx_hidden_DefaultPartitioningPolicy   string                 `protobuf:"bytes,7,opt,name=default_partitioning_policy,json=defaultPartitioningPolicy,proto3"`
	xxx_hidden_AllowedPartitioningPolicies []string               `protobuf:"bytes,8,rep,name=allowed_partitioning_policies,json=allowedPartitioningPolicies,proto3"`
	xxx_hidden_DefaultExecutionPolicy      string                 `protobuf:"bytes,9,opt,name=default_execution_policy,json=defaultExecutionPolicy,proto3"`
	xxx_hidden_AllowedExecutionPolicies    []string               `protobuf:"bytes,10,rep,name=allowed_execution_policies,json=allowedExecutionPolicies,proto3"`
	xxx_hidden_DefaultReplicationPolicy    string                 `protobuf:"bytes,11,opt,name=default_replication_policy,json=defaultReplicationPolicy,proto3"`
	xxx_hidden_AllowedReplicationPolicies  []string               `protobuf:"bytes,12,rep,name=allowed_replication_policies,json=allowedReplicationPolicies,proto3"`
	xxx_hidden_DefaultCachingPolicy        string                 `protobuf:"bytes,13,opt,name=default_caching_policy,json=defaultCachingPolicy,proto3"`
	xxx_hidden_AllowedCachingPolicies      []string               `protobuf:"bytes,14,rep,name=allowed_caching_policies,json=allowedCachingPolicies,proto3"`
	unknownFields                          protoimpl.UnknownFields
	sizeCache                              protoimpl.SizeCache
}

func (x *TableProfileDescription) Reset() {
	*x = TableProfileDescription{}
	mi := &file_protos_ydb_table_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableProfileDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableProfileDescription) ProtoMessage() {}

func (x *TableProfileDescription) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TableProfileDescription) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *TableProfileDescription) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *TableProfileDescription) GetDefaultStoragePolicy() string {
	if x != nil {
		return x.xxx_hidden_DefaultStoragePolicy
	}
	return ""
}

func (x *TableProfileDescription) GetAllowedStoragePolicies() []string {
	if x != nil {
		return x.xxx_hidden_AllowedStoragePolicies
	}
	return nil
}

func (x *TableProfileDescription) GetDefaultCompactionPolicy() string {
	if x != nil {
		return x.xxx_hidden_DefaultCompactionPolicy
	}
	return ""
}

func (x *TableProfileDescription) GetAllowedCompactionPolicies() []string {
	if x != nil {
		return x.xxx_hidden_AllowedCompactionPolicies
	}
	return nil
}

func (x *TableProfileDescription) GetDefaultPartitioningPolicy() string {
	if x != nil {
		return x.xxx_hidden_DefaultPartitioningPolicy
	}
	return ""
}

func (x *TableProfileDescription) GetAllowedPartitioningPolicies() []string {
	if x != nil {
		return x.xxx_hidden_AllowedPartitioningPolicies
	}
	return nil
}

func (x *TableProfileDescription) GetDefaultExecutionPolicy() string {
	if x != nil {
		return x.xxx_hidden_DefaultExecutionPolicy
	}
	return ""
}

func (x *TableProfileDescription) GetAllowedExecutionPolicies() []string {
	if x != nil {
		return x.xxx_hidden_AllowedExecutionPolicies
	}
	return nil
}

func (x *TableProfileDescription) GetDefaultReplicationPolicy() string {
	if x != nil {
		return x.xxx_hidden_DefaultReplicationPolicy
	}
	return ""
}

func (x *TableProfileDescription) GetAllowedReplicationPolicies() []string {
	if x != nil {
		return x.xxx_hidden_AllowedReplicationPolicies
	}
	return nil
}

func (x *TableProfileDescription) GetDefaultCachingPolicy() string {
	if x != nil {
		return x.xxx_hidden_DefaultCachingPolicy
	}
	return ""
}

func (x *TableProfileDescription) GetAllowedCachingPolicies() []string {
	if x != nil {
		return x.xxx_hidden_AllowedCachingPolicies
	}
	return nil
}

func (x *TableProfileDescription) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *TableProfileDescription) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *TableProfileDescription) SetDefaultStoragePolicy(v string) {
	x.xxx_hidden_DefaultStoragePolicy = v
}

func (x *TableProfileDescription) SetAllowedStoragePolicies(v []string) {
	x.xxx_hidden_AllowedStoragePolicies = v
}

func (x *TableProfileDescription) SetDefaultCompactionPolicy(v string) {
	x.xxx_hidden_DefaultCompactionPolicy = v
}

func (x *TableProfileDescription) SetAllowedCompactionPolicies(v []string) {
	x.xxx_hidden_AllowedCompactionPolicies = v
}

func (x *TableProfileDescription) SetDefaultPartitioningPolicy(v string) {
	x.xxx_hidden_DefaultPartitioningPolicy = v
}

func (x *TableProfileDescription) SetAllowedPartitioningPolicies(v []string) {
	x.xxx_hidden_AllowedPartitioningPolicies = v
}

func (x *TableProfileDescription) SetDefaultExecutionPolicy(v string) {
	x.xxx_hidden_DefaultExecutionPolicy = v
}

func (x *TableProfileDescription) SetAllowedExecutionPolicies(v []string) {
	x.xxx_hidden_AllowedExecutionPolicies = v
}

func (x *TableProfileDescription) SetDefaultReplicationPolicy(v string) {
	x.xxx_hidden_DefaultReplicationPolicy = v
}

func (x *TableProfileDescription) SetAllowedReplicationPolicies(v []string) {
	x.xxx_hidden_AllowedReplicationPolicies = v
}

func (x *TableProfileDescription) SetDefaultCachingPolicy(v string) {
	x.xxx_hidden_DefaultCachingPolicy = v
}

func (x *TableProfileDescription) SetAllowedCachingPolicies(v []string) {
	x.xxx_hidden_AllowedCachingPolicies = v
}

type TableProfileDescription_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name                        string
	Labels                      map[string]string
	DefaultStoragePolicy        string
	AllowedStoragePolicies      []string
	DefaultCompactionPolicy     string
	AllowedCompactionPolicies   []string
	DefaultPartitioningPolicy   string
	AllowedPartitioningPolicies []string
	DefaultExecutionPolicy      string
	AllowedExecutionPolicies    []string
	DefaultReplicationPolicy    string
	AllowedReplicationPolicies  []string
	DefaultCachingPolicy        string
	AllowedCachingPolicies      []string
}

func (b0 TableProfileDescription_builder) Build() *TableProfileDescription {
	m0 := &TableProfileDescription{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_DefaultStoragePolicy = b.DefaultStoragePolicy
	x.xxx_hidden_AllowedStoragePolicies = b.AllowedStoragePolicies
	x.xxx_hidden_DefaultCompactionPolicy = b.DefaultCompactionPolicy
	x.xxx_hidden_AllowedCompactionPolicies = b.AllowedCompactionPolicies
	x.xxx_hidden_DefaultPartitioningPolicy = b.DefaultPartitioningPolicy
	x.xxx_hidden_AllowedPartitioningPolicies = b.AllowedPartitioningPolicies
	x.xxx_hidden_DefaultExecutionPolicy = b.DefaultExecutionPolicy
	x.xxx_hidden_AllowedExecutionPolicies = b.AllowedExecutionPolicies
	x.xxx_hidden_DefaultReplicationPolicy = b.DefaultReplicationPolicy
	x.xxx_hidden_AllowedReplicationPolicies = b.AllowedReplicationPolicies
	x.xxx_hidden_DefaultCachingPolicy = b.DefaultCachingPolicy
	x.xxx_hidden_AllowedCachingPolicies = b.AllowedCachingPolicies
	return m0
}

type DescribeTableOptionsRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *DescribeTableOptionsRequest) Reset() {
	*x = DescribeTableOptionsRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTableOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTableOptionsRequest) ProtoMessage() {}

func (x *DescribeTableOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeTableOptionsRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *DescribeTableOptionsRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *DescribeTableOptionsRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *DescribeTableOptionsRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

type DescribeTableOptionsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
}

func (b0 DescribeTableOptionsRequest_builder) Build() *DescribeTableOptionsRequest {
	m0 := &DescribeTableOptionsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_OperationParams = b.OperationParams
	return m0
}

type DescribeTableOptionsResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DescribeTableOptionsResponse) Reset() {
	*x = DescribeTableOptionsResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTableOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTableOptionsResponse) ProtoMessage() {}

func (x *DescribeTableOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeTableOptionsResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *DescribeTableOptionsResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *DescribeTableOptionsResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *DescribeTableOptionsResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type DescribeTableOptionsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// operation.result holds ListTableParametersResult
	Operation *Ydb_Operations.Operation
}

func (b0 DescribeTableOptionsResponse_builder) Build() *DescribeTableOptionsResponse {
	m0 := &DescribeTableOptionsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type DescribeTableOptionsResult struct {
	state                                protoimpl.MessageState            `protogen:"opaque.v1"`
	xxx_hidden_TableProfilePresets       *[]*TableProfileDescription       `protobuf:"bytes,1,rep,name=table_profile_presets,json=tableProfilePresets,proto3"`
	xxx_hidden_StoragePolicyPresets      *[]*StoragePolicyDescription      `protobuf:"bytes,2,rep,name=storage_policy_presets,json=storagePolicyPresets,proto3"`
	xxx_hidden_CompactionPolicyPresets   *[]*CompactionPolicyDescription   `protobuf:"bytes,3,rep,name=compaction_policy_presets,json=compactionPolicyPresets,proto3"`
	xxx_hidden_PartitioningPolicyPresets *[]*PartitioningPolicyDescription `protobuf:"bytes,4,rep,name=partitioning_policy_presets,json=partitioningPolicyPresets,proto3"`
	xxx_hidden_ExecutionPolicyPresets    *[]*ExecutionPolicyDescription    `protobuf:"bytes,5,rep,name=execution_policy_presets,json=executionPolicyPresets,proto3"`
	xxx_hidden_ReplicationPolicyPresets  *[]*ReplicationPolicyDescription  `protobuf:"bytes,6,rep,name=replication_policy_presets,json=replicationPolicyPresets,proto3"`
	xxx_hidden_CachingPolicyPresets      *[]*CachingPolicyDescription      `protobuf:"bytes,7,rep,name=caching_policy_presets,json=cachingPolicyPresets,proto3"`
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *DescribeTableOptionsResult) Reset() {
	*x = DescribeTableOptionsResult{}
	mi := &file_protos_ydb_table_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTableOptionsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTableOptionsResult) ProtoMessage() {}

func (x *DescribeTableOptionsResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribeTableOptionsResult) GetTableProfilePresets() []*TableProfileDescription {
	if x != nil {
		if x.xxx_hidden_TableProfilePresets != nil {
			return *x.xxx_hidden_TableProfilePresets
		}
	}
	return nil
}

func (x *DescribeTableOptionsResult) GetStoragePolicyPresets() []*StoragePolicyDescription {
	if x != nil {
		if x.xxx_hidden_StoragePolicyPresets != nil {
			return *x.xxx_hidden_StoragePolicyPresets
		}
	}
	return nil
}

func (x *DescribeTableOptionsResult) GetCompactionPolicyPresets() []*CompactionPolicyDescription {
	if x != nil {
		if x.xxx_hidden_CompactionPolicyPresets != nil {
			return *x.xxx_hidden_CompactionPolicyPresets
		}
	}
	return nil
}

func (x *DescribeTableOptionsResult) GetPartitioningPolicyPresets() []*PartitioningPolicyDescription {
	if x != nil {
		if x.xxx_hidden_PartitioningPolicyPresets != nil {
			return *x.xxx_hidden_PartitioningPolicyPresets
		}
	}
	return nil
}

func (x *DescribeTableOptionsResult) GetExecutionPolicyPresets() []*ExecutionPolicyDescription {
	if x != nil {
		if x.xxx_hidden_ExecutionPolicyPresets != nil {
			return *x.xxx_hidden_ExecutionPolicyPresets
		}
	}
	return nil
}

func (x *DescribeTableOptionsResult) GetReplicationPolicyPresets() []*ReplicationPolicyDescription {
	if x != nil {
		if x.xxx_hidden_ReplicationPolicyPresets != nil {
			return *x.xxx_hidden_ReplicationPolicyPresets
		}
	}
	return nil
}

func (x *DescribeTableOptionsResult) GetCachingPolicyPresets() []*CachingPolicyDescription {
	if x != nil {
		if x.xxx_hidden_CachingPolicyPresets != nil {
			return *x.xxx_hidden_CachingPolicyPresets
		}
	}
	return nil
}

func (x *DescribeTableOptionsResult) SetTableProfilePresets(v []*TableProfileDescription) {
	x.xxx_hidden_TableProfilePresets = &v
}

func (x *DescribeTableOptionsResult) SetStoragePolicyPresets(v []*StoragePolicyDescription) {
	x.xxx_hidden_StoragePolicyPresets = &v
}

func (x *DescribeTableOptionsResult) SetCompactionPolicyPresets(v []*CompactionPolicyDescription) {
	x.xxx_hidden_CompactionPolicyPresets = &v
}

func (x *DescribeTableOptionsResult) SetPartitioningPolicyPresets(v []*PartitioningPolicyDescription) {
	x.xxx_hidden_PartitioningPolicyPresets = &v
}

func (x *DescribeTableOptionsResult) SetExecutionPolicyPresets(v []*ExecutionPolicyDescription) {
	x.xxx_hidden_ExecutionPolicyPresets = &v
}

func (x *DescribeTableOptionsResult) SetReplicationPolicyPresets(v []*ReplicationPolicyDescription) {
	x.xxx_hidden_ReplicationPolicyPresets = &v
}

func (x *DescribeTableOptionsResult) SetCachingPolicyPresets(v []*CachingPolicyDescription) {
	x.xxx_hidden_CachingPolicyPresets = &v
}

type DescribeTableOptionsResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	TableProfilePresets       []*TableProfileDescription
	StoragePolicyPresets      []*StoragePolicyDescription
	CompactionPolicyPresets   []*CompactionPolicyDescription
	PartitioningPolicyPresets []*PartitioningPolicyDescription
	ExecutionPolicyPresets    []*ExecutionPolicyDescription
	ReplicationPolicyPresets  []*ReplicationPolicyDescription
	CachingPolicyPresets      []*CachingPolicyDescription
}

func (b0 DescribeTableOptionsResult_builder) Build() *DescribeTableOptionsResult {
	m0 := &DescribeTableOptionsResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_TableProfilePresets = &b.TableProfilePresets
	x.xxx_hidden_StoragePolicyPresets = &b.StoragePolicyPresets
	x.xxx_hidden_CompactionPolicyPresets = &b.CompactionPolicyPresets
	x.xxx_hidden_PartitioningPolicyPresets = &b.PartitioningPolicyPresets
	x.xxx_hidden_ExecutionPolicyPresets = &b.ExecutionPolicyPresets
	x.xxx_hidden_ReplicationPolicyPresets = &b.ReplicationPolicyPresets
	x.xxx_hidden_CachingPolicyPresets = &b.CachingPolicyPresets
	return m0
}

type KeyRange struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FromBound isKeyRange_FromBound   `protobuf_oneof:"from_bound"`
	xxx_hidden_ToBound   isKeyRange_ToBound     `protobuf_oneof:"to_bound"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *KeyRange) Reset() {
	*x = KeyRange{}
	mi := &file_protos_ydb_table_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyRange) ProtoMessage() {}

func (x *KeyRange) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *KeyRange) GetGreater() *Ydb.TypedValue {
	if x != nil {
		if x, ok := x.xxx_hidden_FromBound.(*keyRange_Greater); ok {
			return x.Greater
		}
	}
	return nil
}

func (x *KeyRange) GetGreaterOrEqual() *Ydb.TypedValue {
	if x != nil {
		if x, ok := x.xxx_hidden_FromBound.(*keyRange_GreaterOrEqual); ok {
			return x.GreaterOrEqual
		}
	}
	return nil
}

func (x *KeyRange) GetLess() *Ydb.TypedValue {
	if x != nil {
		if x, ok := x.xxx_hidden_ToBound.(*keyRange_Less); ok {
			return x.Less
		}
	}
	return nil
}

func (x *KeyRange) GetLessOrEqual() *Ydb.TypedValue {
	if x != nil {
		if x, ok := x.xxx_hidden_ToBound.(*keyRange_LessOrEqual); ok {
			return x.LessOrEqual
		}
	}
	return nil
}

func (x *KeyRange) SetGreater(v *Ydb.TypedValue) {
	if v == nil {
		x.xxx_hidden_FromBound = nil
		return
	}
	x.xxx_hidden_FromBound = &keyRange_Greater{v}
}

func (x *KeyRange) SetGreaterOrEqual(v *Ydb.TypedValue) {
	if v == nil {
		x.xxx_hidden_FromBound = nil
		return
	}
	x.xxx_hidden_FromBound = &keyRange_GreaterOrEqual{v}
}

func (x *KeyRange) SetLess(v *Ydb.TypedValue) {
	if v == nil {
		x.xxx_hidden_ToBound = nil
		return
	}
	x.xxx_hidden_ToBound = &keyRange_Less{v}
}

func (x *KeyRange) SetLessOrEqual(v *Ydb.TypedValue) {
	if v == nil {
		x.xxx_hidden_ToBound = nil
		return
	}
	x.xxx_hidden_ToBound = &keyRange_LessOrEqual{v}
}

func (x *KeyRange) HasFromBound() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FromBound != nil
}

func (x *KeyRange) HasGreater() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_FromBound.(*keyRange_Greater)
	return ok
}

func (x *KeyRange) HasGreaterOrEqual() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_FromBound.(*keyRange_GreaterOrEqual)
	return ok
}

func (x *KeyRange) HasToBound() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ToBound != nil
}

func (x *KeyRange) HasLess() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_ToBound.(*keyRange_Less)
	return ok
}

func (x *KeyRange) HasLessOrEqual() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_ToBound.(*keyRange_LessOrEqual)
	return ok
}

func (x *KeyRange) ClearFromBound() {
	x.xxx_hidden_FromBound = nil
}

func (x *KeyRange) ClearGreater() {
	if _, ok := x.xxx_hidden_FromBound.(*keyRange_Greater); ok {
		x.xxx_hidden_FromBound = nil
	}
}

func (x *KeyRange) ClearGreaterOrEqual() {
	if _, ok := x.xxx_hidden_FromBound.(*keyRange_GreaterOrEqual); ok {
		x.xxx_hidden_FromBound = nil
	}
}

func (x *KeyRange) ClearToBound() {
	x.xxx_hidden_ToBound = nil
}

func (x *KeyRange) ClearLess() {
	if _, ok := x.xxx_hidden_ToBound.(*keyRange_Less); ok {
		x.xxx_hidden_ToBound = nil
	}
}

func (x *KeyRange) ClearLessOrEqual() {
	if _, ok := x.xxx_hidden_ToBound.(*keyRange_LessOrEqual); ok {
		x.xxx_hidden_ToBound = nil
	}
}

const KeyRange_FromBound_not_set_case case_KeyRange_FromBound = 0
const KeyRange_Greater_case case_KeyRange_FromBound = 1
const KeyRange_GreaterOrEqual_case case_KeyRange_FromBound = 2

func (x *KeyRange) WhichFromBound() case_KeyRange_FromBound {
	if x == nil {
		return KeyRange_FromBound_not_set_case
	}
	switch x.xxx_hidden_FromBound.(type) {
	case *keyRange_Greater:
		return KeyRange_Greater_case
	case *keyRange_GreaterOrEqual:
		return KeyRange_GreaterOrEqual_case
	default:
		return KeyRange_FromBound_not_set_case
	}
}

const KeyRange_ToBound_not_set_case case_KeyRange_ToBound = 0
const KeyRange_Less_case case_KeyRange_ToBound = 3
const KeyRange_LessOrEqual_case case_KeyRange_ToBound = 4

func (x *KeyRange) WhichToBound() case_KeyRange_ToBound {
	if x == nil {
		return KeyRange_ToBound_not_set_case
	}
	switch x.xxx_hidden_ToBound.(type) {
	case *keyRange_Less:
		return KeyRange_Less_case
	case *keyRange_LessOrEqual:
		return KeyRange_LessOrEqual_case
	default:
		return KeyRange_ToBound_not_set_case
	}
}

type KeyRange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Left border

	// Fields of oneof xxx_hidden_FromBound:
	// Specify if we don't want to include given key
	Greater *Ydb.TypedValue
	// Specify if we want to include given key
	GreaterOrEqual *Ydb.TypedValue
	// -- end of xxx_hidden_FromBound
	// Right border

	// Fields of oneof xxx_hidden_ToBound:
	// Specify if we don't want to include given key
	Less *Ydb.TypedValue
	// Specify if we want to include given key
	LessOrEqual *Ydb.TypedValue
	// -- end of xxx_hidden_ToBound
}

func (b0 KeyRange_builder) Build() *KeyRange {
	m0 := &KeyRange{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Greater != nil {
		x.xxx_hidden_FromBound = &keyRange_Greater{b.Greater}
	}
	if b.GreaterOrEqual != nil {
		x.xxx_hidden_FromBound = &keyRange_GreaterOrEqual{b.GreaterOrEqual}
	}
	if b.Less != nil {
		x.xxx_hidden_ToBound = &keyRange_Less{b.Less}
	}
	if b.LessOrEqual != nil {
		x.xxx_hidden_ToBound = &keyRange_LessOrEqual{b.LessOrEqual}
	}
	return m0
}

type case_KeyRange_FromBound protoreflect.FieldNumber

func (x case_KeyRange_FromBound) String() string {
	md := file_protos_ydb_table_proto_msgTypes[101].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type case_KeyRange_ToBound protoreflect.FieldNumber

func (x case_KeyRange_ToBound) String() string {
	md := file_protos_ydb_table_proto_msgTypes[101].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isKeyRange_FromBound interface {
	isKeyRange_FromBound()
}

type keyRange_Greater struct {
	// Specify if we don't want to include given key
	Greater *Ydb.TypedValue `protobuf:"bytes,1,opt,name=greater,proto3,oneof"`
}

type keyRange_GreaterOrEqual struct {
	// Specify if we want to include given key
	GreaterOrEqual *Ydb.TypedValue `protobuf:"bytes,2,opt,name=greater_or_equal,json=greaterOrEqual,proto3,oneof"`
}

func (*keyRange_Greater) isKeyRange_FromBound() {}

func (*keyRange_GreaterOrEqual) isKeyRange_FromBound() {}

type isKeyRange_ToBound interface {
	isKeyRange_ToBound()
}

type keyRange_Less struct {
	// Specify if we don't want to include given key
	Less *Ydb.TypedValue `protobuf:"bytes,3,opt,name=less,proto3,oneof"`
}

type keyRange_LessOrEqual struct {
	// Specify if we want to include given key
	LessOrEqual *Ydb.TypedValue `protobuf:"bytes,4,opt,name=less_or_equal,json=lessOrEqual,proto3,oneof"`
}

func (*keyRange_Less) isKeyRange_ToBound() {}

func (*keyRange_LessOrEqual) isKeyRange_ToBound() {}

// Request to read table (without SQL)
type ReadTableRequest struct {
	state                                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SessionId                   string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_Path                        string                 `protobuf:"bytes,2,opt,name=path,proto3"`
	xxx_hidden_KeyRange                    *KeyRange              `protobuf:"bytes,3,opt,name=key_range,json=keyRange,proto3"`
	xxx_hidden_Columns                     []string               `protobuf:"bytes,4,rep,name=columns,proto3"`
	xxx_hidden_Ordered                     bool                   `protobuf:"varint,5,opt,name=ordered,proto3"`
	xxx_hidden_RowLimit                    uint64                 `protobuf:"varint,6,opt,name=row_limit,json=rowLimit,proto3"`
	xxx_hidden_UseSnapshot                 Ydb.FeatureFlag_Status `protobuf:"varint,7,opt,name=use_snapshot,json=useSnapshot,proto3,enum=Ydb.FeatureFlag_Status"`
	xxx_hidden_BatchLimitBytes             uint64                 `protobuf:"varint,8,opt,name=batch_limit_bytes,json=batchLimitBytes,proto3"`
	xxx_hidden_BatchLimitRows              uint64                 `protobuf:"varint,9,opt,name=batch_limit_rows,json=batchLimitRows,proto3"`
	xxx_hidden_ReturnNotNullDataAsOptional Ydb.FeatureFlag_Status `protobuf:"varint,10,opt,name=return_not_null_data_as_optional,json=returnNotNullDataAsOptional,proto3,enum=Ydb.FeatureFlag_Status"`
	unknownFields                          protoimpl.UnknownFields
	sizeCache                              protoimpl.SizeCache
}

func (x *ReadTableRequest) Reset() {
	*x = ReadTableRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadTableRequest) ProtoMessage() {}

func (x *ReadTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadTableRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *ReadTableRequest) GetPath() string {
	if x != nil {
		return x.xxx_hidden_Path
	}
	return ""
}

func (x *ReadTableRequest) GetKeyRange() *KeyRange {
	if x != nil {
		return x.xxx_hidden_KeyRange
	}
	return nil
}

func (x *ReadTableRequest) GetColumns() []string {
	if x != nil {
		return x.xxx_hidden_Columns
	}
	return nil
}

func (x *ReadTableRequest) GetOrdered() bool {
	if x != nil {
		return x.xxx_hidden_Ordered
	}
	return false
}

func (x *ReadTableRequest) GetRowLimit() uint64 {
	if x != nil {
		return x.xxx_hidden_RowLimit
	}
	return 0
}

func (x *ReadTableRequest) GetUseSnapshot() Ydb.FeatureFlag_Status {
	if x != nil {
		return x.xxx_hidden_UseSnapshot
	}
	return Ydb.FeatureFlag_Status(0)
}

func (x *ReadTableRequest) GetBatchLimitBytes() uint64 {
	if x != nil {
		return x.xxx_hidden_BatchLimitBytes
	}
	return 0
}

func (x *ReadTableRequest) GetBatchLimitRows() uint64 {
	if x != nil {
		return x.xxx_hidden_BatchLimitRows
	}
	return 0
}

func (x *ReadTableRequest) GetReturnNotNullDataAsOptional() Ydb.FeatureFlag_Status {
	if x != nil {
		return x.xxx_hidden_ReturnNotNullDataAsOptional
	}
	return Ydb.FeatureFlag_Status(0)
}

func (x *ReadTableRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *ReadTableRequest) SetPath(v string) {
	x.xxx_hidden_Path = v
}

func (x *ReadTableRequest) SetKeyRange(v *KeyRange) {
	x.xxx_hidden_KeyRange = v
}

func (x *ReadTableRequest) SetColumns(v []string) {
	x.xxx_hidden_Columns = v
}

func (x *ReadTableRequest) SetOrdered(v bool) {
	x.xxx_hidden_Ordered = v
}

func (x *ReadTableRequest) SetRowLimit(v uint64) {
	x.xxx_hidden_RowLimit = v
}

func (x *ReadTableRequest) SetUseSnapshot(v Ydb.FeatureFlag_Status) {
	x.xxx_hidden_UseSnapshot = v
}

func (x *ReadTableRequest) SetBatchLimitBytes(v uint64) {
	x.xxx_hidden_BatchLimitBytes = v
}

func (x *ReadTableRequest) SetBatchLimitRows(v uint64) {
	x.xxx_hidden_BatchLimitRows = v
}

func (x *ReadTableRequest) SetReturnNotNullDataAsOptional(v Ydb.FeatureFlag_Status) {
	x.xxx_hidden_ReturnNotNullDataAsOptional = v
}

func (x *ReadTableRequest) HasKeyRange() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_KeyRange != nil
}

func (x *ReadTableRequest) ClearKeyRange() {
	x.xxx_hidden_KeyRange = nil
}

type ReadTableRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier
	SessionId string
	// Path to table to read
	Path string
	// Primary key range to read
	KeyRange *KeyRange
	// Output columns
	Columns []string
	// Require ordered reading
	Ordered bool
	// Limits row count to read
	RowLimit uint64
	// Use a server-side snapshot
	UseSnapshot Ydb.FeatureFlag_Status
	// Server-side best-effort policy. Can be used as a hint to limit the size
	// of batches sent from a server. If both are specified, the server chooses
	// the smaller one. The limits are not strict, so batch size can be slightly
	// greater than any of the limits
	BatchLimitBytes             uint64
	BatchLimitRows              uint64
	ReturnNotNullDataAsOptional Ydb.FeatureFlag_Status
}

func (b0 ReadTableRequest_builder) Build() *ReadTableRequest {
	m0 := &ReadTableRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_Path = b.Path
	x.xxx_hidden_KeyRange = b.KeyRange
	x.xxx_hidden_Columns = b.Columns
	x.xxx_hidden_Ordered = b.Ordered
	x.xxx_hidden_RowLimit = b.RowLimit
	x.xxx_hidden_UseSnapshot = b.UseSnapshot
	x.xxx_hidden_BatchLimitBytes = b.BatchLimitBytes
	x.xxx_hidden_BatchLimitRows = b.BatchLimitRows
	x.xxx_hidden_ReturnNotNullDataAsOptional = b.ReturnNotNullDataAsOptional
	return m0
}

// ReadTable doesn't use Operation, returns result directly
type ReadTableResponse struct {
	state               protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_Status   Ydb.StatusIds_StatusCode   `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode"`
	xxx_hidden_Issues   *[]*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues,proto3"`
	xxx_hidden_Snapshot *Ydb.VirtualTimestamp      `protobuf:"bytes,4,opt,name=snapshot,proto3"`
	xxx_hidden_Result   *ReadTableResult           `protobuf:"bytes,3,opt,name=result,proto3"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ReadTableResponse) Reset() {
	*x = ReadTableResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadTableResponse) ProtoMessage() {}

func (x *ReadTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadTableResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *ReadTableResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		if x.xxx_hidden_Issues != nil {
			return *x.xxx_hidden_Issues
		}
	}
	return nil
}

func (x *ReadTableResponse) GetSnapshot() *Ydb.VirtualTimestamp {
	if x != nil {
		return x.xxx_hidden_Snapshot
	}
	return nil
}

func (x *ReadTableResponse) GetResult() *ReadTableResult {
	if x != nil {
		return x.xxx_hidden_Result
	}
	return nil
}

func (x *ReadTableResponse) SetStatus(v Ydb.StatusIds_StatusCode) {
	x.xxx_hidden_Status = v
}

func (x *ReadTableResponse) SetIssues(v []*Ydb_Issue.IssueMessage) {
	x.xxx_hidden_Issues = &v
}

func (x *ReadTableResponse) SetSnapshot(v *Ydb.VirtualTimestamp) {
	x.xxx_hidden_Snapshot = v
}

func (x *ReadTableResponse) SetResult(v *ReadTableResult) {
	x.xxx_hidden_Result = v
}

func (x *ReadTableResponse) HasSnapshot() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Snapshot != nil
}

func (x *ReadTableResponse) HasResult() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Result != nil
}

func (x *ReadTableResponse) ClearSnapshot() {
	x.xxx_hidden_Snapshot = nil
}

func (x *ReadTableResponse) ClearResult() {
	x.xxx_hidden_Result = nil
}

type ReadTableResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Status of request (same as other statuses)
	Status Ydb.StatusIds_StatusCode
	// Issues
	Issues []*Ydb_Issue.IssueMessage
	// Optional snapshot that corresponds to the returned data
	Snapshot *Ydb.VirtualTimestamp
	// Read table result
	Result *ReadTableResult
}

func (b0 ReadTableResponse_builder) Build() *ReadTableResponse {
	m0 := &ReadTableResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Status = b.Status
	x.xxx_hidden_Issues = &b.Issues
	x.xxx_hidden_Snapshot = b.Snapshot
	x.xxx_hidden_Result = b.Result
	return m0
}

// Result of read table request
type ReadTableResult struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ResultSet *Ydb.ResultSet         `protobuf:"bytes,1,opt,name=result_set,json=resultSet,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ReadTableResult) Reset() {
	*x = ReadTableResult{}
	mi := &file_protos_ydb_table_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadTableResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadTableResult) ProtoMessage() {}

func (x *ReadTableResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadTableResult) GetResultSet() *Ydb.ResultSet {
	if x != nil {
		return x.xxx_hidden_ResultSet
	}
	return nil
}

func (x *ReadTableResult) SetResultSet(v *Ydb.ResultSet) {
	x.xxx_hidden_ResultSet = v
}

func (x *ReadTableResult) HasResultSet() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ResultSet != nil
}

func (x *ReadTableResult) ClearResultSet() {
	x.xxx_hidden_ResultSet = nil
}

type ReadTableResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Result set (same as result of sql request)
	ResultSet *Ydb.ResultSet
}

func (b0 ReadTableResult_builder) Build() *ReadTableResult {
	m0 := &ReadTableResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ResultSet = b.ResultSet
	return m0
}

type ReadRowsRequest struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SessionId string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_Path      string                 `protobuf:"bytes,2,opt,name=path,proto3"`
	xxx_hidden_Keys      *Ydb.TypedValue        `protobuf:"bytes,3,opt,name=keys,proto3"`
	xxx_hidden_Columns   []string               `protobuf:"bytes,4,rep,name=columns,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ReadRowsRequest) Reset() {
	*x = ReadRowsRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRowsRequest) ProtoMessage() {}

func (x *ReadRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadRowsRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *ReadRowsRequest) GetPath() string {
	if x != nil {
		return x.xxx_hidden_Path
	}
	return ""
}

func (x *ReadRowsRequest) GetKeys() *Ydb.TypedValue {
	if x != nil {
		return x.xxx_hidden_Keys
	}
	return nil
}

func (x *ReadRowsRequest) GetColumns() []string {
	if x != nil {
		return x.xxx_hidden_Columns
	}
	return nil
}

func (x *ReadRowsRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *ReadRowsRequest) SetPath(v string) {
	x.xxx_hidden_Path = v
}

func (x *ReadRowsRequest) SetKeys(v *Ydb.TypedValue) {
	x.xxx_hidden_Keys = v
}

func (x *ReadRowsRequest) SetColumns(v []string) {
	x.xxx_hidden_Columns = v
}

func (x *ReadRowsRequest) HasKeys() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Keys != nil
}

func (x *ReadRowsRequest) ClearKeys() {
	x.xxx_hidden_Keys = nil
}

type ReadRowsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier
	SessionId string
	// Path to table to read
	Path string
	// Keys to read. Must be a list of structs where each stuct is a key
	// for one requested row and should contain all key columns
	Keys *Ydb.TypedValue
	// Output columns. If empty all columns will be requested
	Columns []string
}

func (b0 ReadRowsRequest_builder) Build() *ReadRowsRequest {
	m0 := &ReadRowsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_Path = b.Path
	x.xxx_hidden_Keys = b.Keys
	x.xxx_hidden_Columns = b.Columns
	return m0
}

type ReadRowsResponse struct {
	state                protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_Status    Ydb.StatusIds_StatusCode   `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode"`
	xxx_hidden_Issues    *[]*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues,proto3"`
	xxx_hidden_ResultSet *Ydb.ResultSet             `protobuf:"bytes,3,opt,name=result_set,json=resultSet,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ReadRowsResponse) Reset() {
	*x = ReadRowsResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRowsResponse) ProtoMessage() {}

func (x *ReadRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReadRowsResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *ReadRowsResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		if x.xxx_hidden_Issues != nil {
			return *x.xxx_hidden_Issues
		}
	}
	return nil
}

func (x *ReadRowsResponse) GetResultSet() *Ydb.ResultSet {
	if x != nil {
		return x.xxx_hidden_ResultSet
	}
	return nil
}

func (x *ReadRowsResponse) SetStatus(v Ydb.StatusIds_StatusCode) {
	x.xxx_hidden_Status = v
}

func (x *ReadRowsResponse) SetIssues(v []*Ydb_Issue.IssueMessage) {
	x.xxx_hidden_Issues = &v
}

func (x *ReadRowsResponse) SetResultSet(v *Ydb.ResultSet) {
	x.xxx_hidden_ResultSet = v
}

func (x *ReadRowsResponse) HasResultSet() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ResultSet != nil
}

func (x *ReadRowsResponse) ClearResultSet() {
	x.xxx_hidden_ResultSet = nil
}

type ReadRowsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Status of request (same as other statuses)
	Status Ydb.StatusIds_StatusCode
	// Issues
	Issues []*Ydb_Issue.IssueMessage
	// Result set (same as result of sql request)
	ResultSet *Ydb.ResultSet
}

func (b0 ReadRowsResponse_builder) Build() *ReadRowsResponse {
	m0 := &ReadRowsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Status = b.Status
	x.xxx_hidden_Issues = &b.Issues
	x.xxx_hidden_ResultSet = b.ResultSet
	return m0
}

type BulkUpsertRequest struct {
	state                      protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_Table           string                          `protobuf:"bytes,1,opt,name=table,proto3"`
	xxx_hidden_Rows            *Ydb.TypedValue                 `protobuf:"bytes,2,opt,name=rows,proto3"`
	xxx_hidden_OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,3,opt,name=operation_params,json=operationParams,proto3"`
	xxx_hidden_DataFormat      isBulkUpsertRequest_DataFormat  `protobuf_oneof:"data_format"`
	xxx_hidden_Data            []byte                          `protobuf:"bytes,1000,opt,name=data,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *BulkUpsertRequest) Reset() {
	*x = BulkUpsertRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkUpsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkUpsertRequest) ProtoMessage() {}

func (x *BulkUpsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BulkUpsertRequest) GetTable() string {
	if x != nil {
		return x.xxx_hidden_Table
	}
	return ""
}

func (x *BulkUpsertRequest) GetRows() *Ydb.TypedValue {
	if x != nil {
		return x.xxx_hidden_Rows
	}
	return nil
}

func (x *BulkUpsertRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.xxx_hidden_OperationParams
	}
	return nil
}

func (x *BulkUpsertRequest) GetArrowBatchSettings() *Ydb_Formats.ArrowBatchSettings {
	if x != nil {
		if x, ok := x.xxx_hidden_DataFormat.(*bulkUpsertRequest_ArrowBatchSettings); ok {
			return x.ArrowBatchSettings
		}
	}
	return nil
}

func (x *BulkUpsertRequest) GetCsvSettings() *Ydb_Formats.CsvSettings {
	if x != nil {
		if x, ok := x.xxx_hidden_DataFormat.(*bulkUpsertRequest_CsvSettings); ok {
			return x.CsvSettings
		}
	}
	return nil
}

func (x *BulkUpsertRequest) GetData() []byte {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *BulkUpsertRequest) SetTable(v string) {
	x.xxx_hidden_Table = v
}

func (x *BulkUpsertRequest) SetRows(v *Ydb.TypedValue) {
	x.xxx_hidden_Rows = v
}

func (x *BulkUpsertRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.xxx_hidden_OperationParams = v
}

func (x *BulkUpsertRequest) SetArrowBatchSettings(v *Ydb_Formats.ArrowBatchSettings) {
	if v == nil {
		x.xxx_hidden_DataFormat = nil
		return
	}
	x.xxx_hidden_DataFormat = &bulkUpsertRequest_ArrowBatchSettings{v}
}

func (x *BulkUpsertRequest) SetCsvSettings(v *Ydb_Formats.CsvSettings) {
	if v == nil {
		x.xxx_hidden_DataFormat = nil
		return
	}
	x.xxx_hidden_DataFormat = &bulkUpsertRequest_CsvSettings{v}
}

func (x *BulkUpsertRequest) SetData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Data = v
}

func (x *BulkUpsertRequest) HasRows() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Rows != nil
}

func (x *BulkUpsertRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OperationParams != nil
}

func (x *BulkUpsertRequest) HasDataFormat() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DataFormat != nil
}

func (x *BulkUpsertRequest) HasArrowBatchSettings() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_DataFormat.(*bulkUpsertRequest_ArrowBatchSettings)
	return ok
}

func (x *BulkUpsertRequest) HasCsvSettings() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_DataFormat.(*bulkUpsertRequest_CsvSettings)
	return ok
}

func (x *BulkUpsertRequest) ClearRows() {
	x.xxx_hidden_Rows = nil
}

func (x *BulkUpsertRequest) ClearOperationParams() {
	x.xxx_hidden_OperationParams = nil
}

func (x *BulkUpsertRequest) ClearDataFormat() {
	x.xxx_hidden_DataFormat = nil
}

func (x *BulkUpsertRequest) ClearArrowBatchSettings() {
	if _, ok := x.xxx_hidden_DataFormat.(*bulkUpsertRequest_ArrowBatchSettings); ok {
		x.xxx_hidden_DataFormat = nil
	}
}

func (x *BulkUpsertRequest) ClearCsvSettings() {
	if _, ok := x.xxx_hidden_DataFormat.(*bulkUpsertRequest_CsvSettings); ok {
		x.xxx_hidden_DataFormat = nil
	}
}

const BulkUpsertRequest_DataFormat_not_set_case case_BulkUpsertRequest_DataFormat = 0
const BulkUpsertRequest_ArrowBatchSettings_case case_BulkUpsertRequest_DataFormat = 7
const BulkUpsertRequest_CsvSettings_case case_BulkUpsertRequest_DataFormat = 8

func (x *BulkUpsertRequest) WhichDataFormat() case_BulkUpsertRequest_DataFormat {
	if x == nil {
		return BulkUpsertRequest_DataFormat_not_set_case
	}
	switch x.xxx_hidden_DataFormat.(type) {
	case *bulkUpsertRequest_ArrowBatchSettings:
		return BulkUpsertRequest_ArrowBatchSettings_case
	case *bulkUpsertRequest_CsvSettings:
		return BulkUpsertRequest_CsvSettings_case
	default:
		return BulkUpsertRequest_DataFormat_not_set_case
	}
}

type BulkUpsertRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Table string
	// "rows" parameter must be a list of structs where each stuct represents one row.
	// It must contain all key columns but not necessarily all non-key columns.
	// Similar to UPSERT statement only values of specified columns will be updated.
	Rows            *Ydb.TypedValue
	OperationParams *Ydb_Operations.OperationParams
	// You may set data_format + data instead of rows to insert data in serialized formats.

	// Fields of oneof xxx_hidden_DataFormat:
	ArrowBatchSettings *Ydb_Formats.ArrowBatchSettings
	CsvSettings        *Ydb_Formats.CsvSettings
	// -- end of xxx_hidden_DataFormat
	// It's last in the definition to help with sidecar patterns
	Data []byte
}

func (b0 BulkUpsertRequest_builder) Build() *BulkUpsertRequest {
	m0 := &BulkUpsertRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Table = b.Table
	x.xxx_hidden_Rows = b.Rows
	x.xxx_hidden_OperationParams = b.OperationParams
	if b.ArrowBatchSettings != nil {
		x.xxx_hidden_DataFormat = &bulkUpsertRequest_ArrowBatchSettings{b.ArrowBatchSettings}
	}
	if b.CsvSettings != nil {
		x.xxx_hidden_DataFormat = &bulkUpsertRequest_CsvSettings{b.CsvSettings}
	}
	x.xxx_hidden_Data = b.Data
	return m0
}

type case_BulkUpsertRequest_DataFormat protoreflect.FieldNumber

func (x case_BulkUpsertRequest_DataFormat) String() string {
	md := file_protos_ydb_table_proto_msgTypes[107].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isBulkUpsertRequest_DataFormat interface {
	isBulkUpsertRequest_DataFormat()
}

type bulkUpsertRequest_ArrowBatchSettings struct {
	ArrowBatchSettings *Ydb_Formats.ArrowBatchSettings `protobuf:"bytes,7,opt,name=arrow_batch_settings,json=arrowBatchSettings,proto3,oneof"`
}

type bulkUpsertRequest_CsvSettings struct {
	CsvSettings *Ydb_Formats.CsvSettings `protobuf:"bytes,8,opt,name=csv_settings,json=csvSettings,proto3,oneof"`
}

func (*bulkUpsertRequest_ArrowBatchSettings) isBulkUpsertRequest_DataFormat() {}

func (*bulkUpsertRequest_CsvSettings) isBulkUpsertRequest_DataFormat() {}

type BulkUpsertResponse struct {
	state                protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Operation *Ydb_Operations.Operation `protobuf:"bytes,1,opt,name=operation,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *BulkUpsertResponse) Reset() {
	*x = BulkUpsertResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkUpsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkUpsertResponse) ProtoMessage() {}

func (x *BulkUpsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BulkUpsertResponse) GetOperation() *Ydb_Operations.Operation {
	if x != nil {
		return x.xxx_hidden_Operation
	}
	return nil
}

func (x *BulkUpsertResponse) SetOperation(v *Ydb_Operations.Operation) {
	x.xxx_hidden_Operation = v
}

func (x *BulkUpsertResponse) HasOperation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Operation != nil
}

func (x *BulkUpsertResponse) ClearOperation() {
	x.xxx_hidden_Operation = nil
}

type BulkUpsertResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Operation *Ydb_Operations.Operation
}

func (b0 BulkUpsertResponse_builder) Build() *BulkUpsertResponse {
	m0 := &BulkUpsertResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Operation = b.Operation
	return m0
}

type BulkUpsertResult struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkUpsertResult) Reset() {
	*x = BulkUpsertResult{}
	mi := &file_protos_ydb_table_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkUpsertResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkUpsertResult) ProtoMessage() {}

func (x *BulkUpsertResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type BulkUpsertResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 BulkUpsertResult_builder) Build() *BulkUpsertResult {
	m0 := &BulkUpsertResult{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ExecuteScanQueryRequest struct {
	state                             protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_Query                  *Query                       `protobuf:"bytes,3,opt,name=query,proto3"`
	xxx_hidden_Parameters             map[string]*Ydb.TypedValue   `protobuf:"bytes,4,rep,name=parameters,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Mode                   ExecuteScanQueryRequest_Mode `protobuf:"varint,6,opt,name=mode,proto3,enum=Ydb.Table.ExecuteScanQueryRequest_Mode"`
	xxx_hidden_CollectStats           QueryStatsCollection_Mode    `protobuf:"varint,8,opt,name=collect_stats,json=collectStats,proto3,enum=Ydb.Table.QueryStatsCollection_Mode"`
	xxx_hidden_CollectFullDiagnostics bool                         `protobuf:"varint,9,opt,name=collect_full_diagnostics,json=collectFullDiagnostics,proto3"`
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *ExecuteScanQueryRequest) Reset() {
	*x = ExecuteScanQueryRequest{}
	mi := &file_protos_ydb_table_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteScanQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteScanQueryRequest) ProtoMessage() {}

func (x *ExecuteScanQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteScanQueryRequest) GetQuery() *Query {
	if x != nil {
		return x.xxx_hidden_Query
	}
	return nil
}

func (x *ExecuteScanQueryRequest) GetParameters() map[string]*Ydb.TypedValue {
	if x != nil {
		return x.xxx_hidden_Parameters
	}
	return nil
}

func (x *ExecuteScanQueryRequest) GetMode() ExecuteScanQueryRequest_Mode {
	if x != nil {
		return x.xxx_hidden_Mode
	}
	return ExecuteScanQueryRequest_MODE_UNSPECIFIED
}

func (x *ExecuteScanQueryRequest) GetCollectStats() QueryStatsCollection_Mode {
	if x != nil {
		return x.xxx_hidden_CollectStats
	}
	return QueryStatsCollection_STATS_COLLECTION_UNSPECIFIED
}

func (x *ExecuteScanQueryRequest) GetCollectFullDiagnostics() bool {
	if x != nil {
		return x.xxx_hidden_CollectFullDiagnostics
	}
	return false
}

func (x *ExecuteScanQueryRequest) SetQuery(v *Query) {
	x.xxx_hidden_Query = v
}

func (x *ExecuteScanQueryRequest) SetParameters(v map[string]*Ydb.TypedValue) {
	x.xxx_hidden_Parameters = v
}

func (x *ExecuteScanQueryRequest) SetMode(v ExecuteScanQueryRequest_Mode) {
	x.xxx_hidden_Mode = v
}

func (x *ExecuteScanQueryRequest) SetCollectStats(v QueryStatsCollection_Mode) {
	x.xxx_hidden_CollectStats = v
}

func (x *ExecuteScanQueryRequest) SetCollectFullDiagnostics(v bool) {
	x.xxx_hidden_CollectFullDiagnostics = v
}

func (x *ExecuteScanQueryRequest) HasQuery() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Query != nil
}

func (x *ExecuteScanQueryRequest) ClearQuery() {
	x.xxx_hidden_Query = nil
}

type ExecuteScanQueryRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Query        *Query
	Parameters   map[string]*Ydb.TypedValue
	Mode         ExecuteScanQueryRequest_Mode
	CollectStats QueryStatsCollection_Mode
	// works only in mode: MODE_EXPLAIN,
	// collects additional diagnostics about query compilation, including query plan and scheme
	CollectFullDiagnostics bool
}

func (b0 ExecuteScanQueryRequest_builder) Build() *ExecuteScanQueryRequest {
	m0 := &ExecuteScanQueryRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Query = b.Query
	x.xxx_hidden_Parameters = b.Parameters
	x.xxx_hidden_Mode = b.Mode
	x.xxx_hidden_CollectStats = b.CollectStats
	x.xxx_hidden_CollectFullDiagnostics = b.CollectFullDiagnostics
	return m0
}

type ExecuteScanQueryPartialResponse struct {
	state             protoimpl.MessageState         `protogen:"opaque.v1"`
	xxx_hidden_Status Ydb.StatusIds_StatusCode       `protobuf:"varint,1,opt,name=status,proto3,enum=Ydb.StatusIds_StatusCode"`
	xxx_hidden_Issues *[]*Ydb_Issue.IssueMessage     `protobuf:"bytes,2,rep,name=issues,proto3"`
	xxx_hidden_Result *ExecuteScanQueryPartialResult `protobuf:"bytes,3,opt,name=result,proto3"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ExecuteScanQueryPartialResponse) Reset() {
	*x = ExecuteScanQueryPartialResponse{}
	mi := &file_protos_ydb_table_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteScanQueryPartialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteScanQueryPartialResponse) ProtoMessage() {}

func (x *ExecuteScanQueryPartialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteScanQueryPartialResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *ExecuteScanQueryPartialResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		if x.xxx_hidden_Issues != nil {
			return *x.xxx_hidden_Issues
		}
	}
	return nil
}

func (x *ExecuteScanQueryPartialResponse) GetResult() *ExecuteScanQueryPartialResult {
	if x != nil {
		return x.xxx_hidden_Result
	}
	return nil
}

func (x *ExecuteScanQueryPartialResponse) SetStatus(v Ydb.StatusIds_StatusCode) {
	x.xxx_hidden_Status = v
}

func (x *ExecuteScanQueryPartialResponse) SetIssues(v []*Ydb_Issue.IssueMessage) {
	x.xxx_hidden_Issues = &v
}

func (x *ExecuteScanQueryPartialResponse) SetResult(v *ExecuteScanQueryPartialResult) {
	x.xxx_hidden_Result = v
}

func (x *ExecuteScanQueryPartialResponse) HasResult() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Result != nil
}

func (x *ExecuteScanQueryPartialResponse) ClearResult() {
	x.xxx_hidden_Result = nil
}

type ExecuteScanQueryPartialResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status Ydb.StatusIds_StatusCode
	Issues []*Ydb_Issue.IssueMessage
	Result *ExecuteScanQueryPartialResult
}

func (b0 ExecuteScanQueryPartialResponse_builder) Build() *ExecuteScanQueryPartialResponse {
	m0 := &ExecuteScanQueryPartialResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Status = b.Status
	x.xxx_hidden_Issues = &b.Issues
	x.xxx_hidden_Result = b.Result
	return m0
}

type ExecuteScanQueryPartialResult struct {
	state                           protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_ResultSet            *Ydb.ResultSet             `protobuf:"bytes,1,opt,name=result_set,json=resultSet,proto3"`
	xxx_hidden_QueryStats           *Ydb_TableStats.QueryStats `protobuf:"bytes,6,opt,name=query_stats,json=queryStats,proto3"`
	xxx_hidden_QueryFullDiagnostics string                     `protobuf:"bytes,7,opt,name=query_full_diagnostics,json=queryFullDiagnostics,proto3"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *ExecuteScanQueryPartialResult) Reset() {
	*x = ExecuteScanQueryPartialResult{}
	mi := &file_protos_ydb_table_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteScanQueryPartialResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteScanQueryPartialResult) ProtoMessage() {}

func (x *ExecuteScanQueryPartialResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteScanQueryPartialResult) GetResultSet() *Ydb.ResultSet {
	if x != nil {
		return x.xxx_hidden_ResultSet
	}
	return nil
}

func (x *ExecuteScanQueryPartialResult) GetQueryStats() *Ydb_TableStats.QueryStats {
	if x != nil {
		return x.xxx_hidden_QueryStats
	}
	return nil
}

func (x *ExecuteScanQueryPartialResult) GetQueryFullDiagnostics() string {
	if x != nil {
		return x.xxx_hidden_QueryFullDiagnostics
	}
	return ""
}

func (x *ExecuteScanQueryPartialResult) SetResultSet(v *Ydb.ResultSet) {
	x.xxx_hidden_ResultSet = v
}

func (x *ExecuteScanQueryPartialResult) SetQueryStats(v *Ydb_TableStats.QueryStats) {
	x.xxx_hidden_QueryStats = v
}

func (x *ExecuteScanQueryPartialResult) SetQueryFullDiagnostics(v string) {
	x.xxx_hidden_QueryFullDiagnostics = v
}

func (x *ExecuteScanQueryPartialResult) HasResultSet() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ResultSet != nil
}

func (x *ExecuteScanQueryPartialResult) HasQueryStats() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_QueryStats != nil
}

func (x *ExecuteScanQueryPartialResult) ClearResultSet() {
	x.xxx_hidden_ResultSet = nil
}

func (x *ExecuteScanQueryPartialResult) ClearQueryStats() {
	x.xxx_hidden_QueryStats = nil
}

type ExecuteScanQueryPartialResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ResultSet  *Ydb.ResultSet
	QueryStats *Ydb_TableStats.QueryStats
	// works only in mode: MODE_EXPLAIN,
	// collects additional diagnostics about query compilation, including query plan and scheme
	QueryFullDiagnostics string
}

func (b0 ExecuteScanQueryPartialResult_builder) Build() *ExecuteScanQueryPartialResult {
	m0 := &ExecuteScanQueryPartialResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ResultSet = b.ResultSet
	x.xxx_hidden_QueryStats = b.QueryStats
	x.xxx_hidden_QueryFullDiagnostics = b.QueryFullDiagnostics
	return m0
}

type SequenceDescription_SetVal struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_NextValue   int64                  `protobuf:"zigzag64,1,opt,name=next_value,json=nextValue,proto3,oneof"`
	xxx_hidden_NextUsed    bool                   `protobuf:"varint,2,opt,name=next_used,json=nextUsed,proto3,oneof"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SequenceDescription_SetVal) Reset() {
	*x = SequenceDescription_SetVal{}
	mi := &file_protos_ydb_table_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequenceDescription_SetVal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequenceDescription_SetVal) ProtoMessage() {}

func (x *SequenceDescription_SetVal) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_table_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SequenceDescription_SetVal) GetNextValue() int64 {
	if x != nil {
		return x.xxx_hidden_NextValue
	}
	return 0
}

func (x *SequenceDescription_SetVal) GetNextUsed() bool {
	if x != nil {
		return x.xxx_hidden_NextUsed
	}
	return false
}

func (x *SequenceDescription_SetVal) SetNextValue(v int64) {
	x.xxx_hidden_NextValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *SequenceDescription_SetVal) SetNextUsed(v bool) {
	x.xxx_hidden_NextUsed = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *SequenceDescription_SetVal) HasNextValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SequenceDescription_SetVal) HasNextUsed() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SequenceDescription_SetVal) ClearNextValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_NextValue = 0
}

func (x *SequenceDescription_SetVal) ClearNextUsed() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_NextUsed = false
}

type SequenceDescription_SetVal_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	NextValue *int64
	NextUsed  *bool
}

func (b0 SequenceDescription_SetVal_builder) Build() *SequenceDescription_SetVal {
	m0 := &SequenceDescription_SetVal{}
	b, x := &b0, m0
	_, _ = b, x
	if b.NextValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_NextValue = *b.NextValue
	}
	if b.NextUsed != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_NextUsed = *b.NextUsed
	}
	return m0
}

var File_protos_ydb_table_proto protoreflect.FileDescriptor

const file_protos_ydb_table_proto_rawDesc = "" +
	"\n" +
	"\x16protos/ydb_table.proto\x12\tYdb.Table\x1a#protos/annotations/validation.proto\x1a\x17protos/ydb_common.proto\x1a\x1eprotos/ydb_issue_message.proto\x1a\x1aprotos/ydb_operation.proto\x1a\x1cprotos/ydb_query_stats.proto\x1a\x16protos/ydb_value.proto\x1a\x17protos/ydb_scheme.proto\x1a\x1dprotos/ydb_status_codes.proto\x1a\x16protos/ydb_topic.proto\x1a\x18protos/ydb_formats.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"b\n" +
	"\x14CreateSessionRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\"P\n" +
	"\x15CreateSessionResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"4\n" +
	"\x13CreateSessionResult\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"\x81\x01\n" +
	"\x14DeleteSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12J\n" +
	"\x10operation_params\x18\x02 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\"P\n" +
	"\x15DeleteSessionResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\r\n" +
	"\vGlobalIndex\"\x12\n" +
	"\x10GlobalAsyncIndex\"\x13\n" +
	"\x11GlobalUniqueIndex\"\xca\x02\n" +
	"\n" +
	"TableIndex\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12#\n" +
	"\rindex_columns\x18\x02 \x03(\tR\findexColumns\x12;\n" +
	"\fglobal_index\x18\x03 \x01(\v2\x16.Ydb.Table.GlobalIndexH\x00R\vglobalIndex\x12K\n" +
	"\x12global_async_index\x18\x04 \x01(\v2\x1b.Ydb.Table.GlobalAsyncIndexH\x00R\x10globalAsyncIndex\x12N\n" +
	"\x13global_unique_index\x18\x06 \x01(\v2\x1c.Ydb.Table.GlobalUniqueIndexH\x00R\x11globalUniqueIndex\x12!\n" +
	"\fdata_columns\x18\x05 \x03(\tR\vdataColumnsB\x06\n" +
	"\x04type\"\xfe\x03\n" +
	"\x15TableIndexDescription\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12#\n" +
	"\rindex_columns\x18\x02 \x03(\tR\findexColumns\x12;\n" +
	"\fglobal_index\x18\x03 \x01(\v2\x16.Ydb.Table.GlobalIndexH\x00R\vglobalIndex\x12K\n" +
	"\x12global_async_index\x18\x05 \x01(\v2\x1b.Ydb.Table.GlobalAsyncIndexH\x00R\x10globalAsyncIndex\x12N\n" +
	"\x13global_unique_index\x18\b \x01(\v2\x1c.Ydb.Table.GlobalUniqueIndexH\x00R\x11globalUniqueIndex\x12?\n" +
	"\x06status\x18\x04 \x01(\x0e2'.Ydb.Table.TableIndexDescription.StatusR\x06status\x12!\n" +
	"\fdata_columns\x18\x06 \x03(\tR\vdataColumns\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\a \x01(\x04R\tsizeBytes\"G\n" +
	"\x06Status\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fSTATUS_READY\x10\x01\x12\x13\n" +
	"\x0fSTATUS_BUILDING\x10\x02B\x06\n" +
	"\x04type\"\xdd\x01\n" +
	"\x0fIndexBuildState\"\xc9\x01\n" +
	"\x05State\x12\x15\n" +
	"\x11STATE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fSTATE_PREPARING\x10\x01\x12\x1a\n" +
	"\x16STATE_TRANSFERING_DATA\x10\x02\x12\x12\n" +
	"\x0eSTATE_APPLYING\x10\x03\x12\x0e\n" +
	"\n" +
	"STATE_DONE\x10\x04\x12\x16\n" +
	"\x12STATE_CANCELLATION\x10\x05\x12\x13\n" +
	"\x0fSTATE_CANCELLED\x10\x06\x12\x13\n" +
	"\x0fSTATE_REJECTION\x10\a\x12\x12\n" +
	"\x0eSTATE_REJECTED\x10\b\"X\n" +
	"\x15IndexBuildDescription\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12+\n" +
	"\x05index\x18\x02 \x01(\v2\x15.Ydb.Table.TableIndexR\x05index\"\xac\x01\n" +
	"\x12IndexBuildMetadata\x12B\n" +
	"\vdescription\x18\x01 \x01(\v2 .Ydb.Table.IndexBuildDescriptionR\vdescription\x126\n" +
	"\x05state\x18\x02 \x01(\x0e2 .Ydb.Table.IndexBuildState.StateR\x05state\x12\x1a\n" +
	"\bprogress\x18\x03 \x01(\x02R\bprogress\"\x9a\x01\n" +
	"\x0eChangefeedMode\"\x87\x01\n" +
	"\x04Mode\x12\x14\n" +
	"\x10MODE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eMODE_KEYS_ONLY\x10\x01\x12\x10\n" +
	"\fMODE_UPDATES\x10\x02\x12\x12\n" +
	"\x0eMODE_NEW_IMAGE\x10\x03\x12\x12\n" +
	"\x0eMODE_OLD_IMAGE\x10\x04\x12\x1b\n" +
	"\x17MODE_NEW_AND_OLD_IMAGES\x10\x05\"\x81\x01\n" +
	"\x10ChangefeedFormat\"m\n" +
	"\x06Format\x12\x16\n" +
	"\x12FORMAT_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vFORMAT_JSON\x10\x01\x12 \n" +
	"\x1cFORMAT_DYNAMODB_STREAMS_JSON\x10\x02\x12\x18\n" +
	"\x14FORMAT_DEBEZIUM_JSON\x10\x03\"\xad\x05\n" +
	"\n" +
	"Changefeed\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x122\n" +
	"\x04mode\x18\x02 \x01(\x0e2\x1e.Ydb.Table.ChangefeedMode.ModeR\x04mode\x12:\n" +
	"\x06format\x18\x03 \x01(\x0e2\".Ydb.Table.ChangefeedFormat.FormatR\x06format\x12D\n" +
	"\x10retention_period\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\x0fretentionPeriod\x12-\n" +
	"\x12virtual_timestamps\x18\x05 \x01(\bR\x11virtualTimestamps\x12!\n" +
	"\finitial_scan\x18\x06 \x01(\bR\vinitialScan\x12^\n" +
	"\n" +
	"attributes\x18\a \x03(\v2%.Ydb.Table.Changefeed.AttributesEntryB\x17\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80 \xaa\xe6*\b\n" +
	"\x06\n" +
	"\x04\b\x01\x10dR\n" +
	"attributes\x12&\n" +
	"\n" +
	"aws_region\x18\b \x01(\tB\a\xa2\xe6*\x03\x18\x80\x01R\tawsRegion\x12[\n" +
	"\x1cresolved_timestamps_interval\x18\t \x01(\v2\x19.google.protobuf.DurationR\x1aresolvedTimestampsInterval\x12_\n" +
	"\x1btopic_partitioning_settings\x18\n" +
	" \x01(\v2\x1f.Ydb.Topic.PartitioningSettingsR\x19topicPartitioningSettings\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf4\x04\n" +
	"\x15ChangefeedDescription\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x122\n" +
	"\x04mode\x18\x02 \x01(\x0e2\x1e.Ydb.Table.ChangefeedMode.ModeR\x04mode\x12:\n" +
	"\x06format\x18\x03 \x01(\x0e2\".Ydb.Table.ChangefeedFormat.FormatR\x06format\x12<\n" +
	"\x05state\x18\x04 \x01(\x0e2&.Ydb.Table.ChangefeedDescription.StateR\x05state\x12-\n" +
	"\x12virtual_timestamps\x18\x05 \x01(\bR\x11virtualTimestamps\x12P\n" +
	"\n" +
	"attributes\x18\x06 \x03(\v20.Ydb.Table.ChangefeedDescription.AttributesEntryR\n" +
	"attributes\x12\x1d\n" +
	"\n" +
	"aws_region\x18\a \x01(\tR\tawsRegion\x12[\n" +
	"\x1cresolved_timestamps_interval\x18\b \x01(\v2\x19.google.protobuf.DurationR\x1aresolvedTimestampsInterval\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"]\n" +
	"\x05State\x12\x15\n" +
	"\x11STATE_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rSTATE_ENABLED\x10\x01\x12\x12\n" +
	"\x0eSTATE_DISABLED\x10\x02\x12\x16\n" +
	"\x12STATE_INITIAL_SCAN\x10\x03\"#\n" +
	"\vStoragePool\x12\x14\n" +
	"\x05media\x18\x01 \x01(\tR\x05media\"\xf1\x02\n" +
	"\rStoragePolicy\x12\x1f\n" +
	"\vpreset_name\x18\x01 \x01(\tR\n" +
	"presetName\x12.\n" +
	"\x06syslog\x18\x02 \x01(\v2\x16.Ydb.Table.StoragePoolR\x06syslog\x12(\n" +
	"\x03log\x18\x03 \x01(\v2\x16.Ydb.Table.StoragePoolR\x03log\x12*\n" +
	"\x04data\x18\x04 \x01(\v2\x16.Ydb.Table.StoragePoolR\x04data\x122\n" +
	"\bexternal\x18\x05 \x01(\v2\x16.Ydb.Table.StoragePoolR\bexternal\x12=\n" +
	"\x0ekeep_in_memory\x18\x06 \x01(\x0e2\x17.Ydb.FeatureFlag.StatusR\fkeepInMemory\x12F\n" +
	"\x0fcolumn_families\x18\a \x03(\v2\x1d.Ydb.Table.ColumnFamilyPolicyR\x0ecolumnFamilies\"\xe2\x02\n" +
	"\x12ColumnFamilyPolicy\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12*\n" +
	"\x04data\x18\x02 \x01(\v2\x16.Ydb.Table.StoragePoolR\x04data\x122\n" +
	"\bexternal\x18\x03 \x01(\v2\x16.Ydb.Table.StoragePoolR\bexternal\x12=\n" +
	"\x0ekeep_in_memory\x18\x04 \x01(\x0e2\x17.Ydb.FeatureFlag.StatusR\fkeepInMemory\x12K\n" +
	"\vcompression\x18\x05 \x01(\x0e2).Ydb.Table.ColumnFamilyPolicy.CompressionR\vcompression\"L\n" +
	"\vCompression\x12\x1b\n" +
	"\x17COMPRESSION_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fUNCOMPRESSED\x10\x01\x12\x0e\n" +
	"\n" +
	"COMPRESSED\x10\x02\"3\n" +
	"\x10CompactionPolicy\x12\x1f\n" +
	"\vpreset_name\x18\x01 \x01(\tR\n" +
	"presetName\"H\n" +
	"\x12ExplicitPartitions\x122\n" +
	"\fsplit_points\x18\x01 \x03(\v2\x0f.Ydb.TypedValueR\vsplitPoints\"z\n" +
	"\x0ePartitionStats\x12#\n" +
	"\rrows_estimate\x18\x01 \x01(\x04R\frowsEstimate\x12\x1d\n" +
	"\n" +
	"store_size\x18\x02 \x01(\x04R\tstoreSize\x12$\n" +
	"\x0eleader_node_id\x18\x03 \x01(\rR\fleaderNodeId\"\xbe\x02\n" +
	"\n" +
	"TableStats\x12B\n" +
	"\x0fpartition_stats\x18\x01 \x03(\v2\x19.Ydb.Table.PartitionStatsR\x0epartitionStats\x12#\n" +
	"\rrows_estimate\x18\x02 \x01(\x04R\frowsEstimate\x12\x1d\n" +
	"\n" +
	"store_size\x18\x03 \x01(\x04R\tstoreSize\x12\x1e\n" +
	"\n" +
	"partitions\x18\x04 \x01(\x04R\n" +
	"partitions\x12?\n" +
	"\rcreation_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\fcreationTime\x12G\n" +
	"\x11modification_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x10modificationTime\"\xa1\x03\n" +
	"\x12PartitioningPolicy\x12\x1f\n" +
	"\vpreset_name\x18\x01 \x01(\tR\n" +
	"presetName\x12a\n" +
	"\x11auto_partitioning\x18\x02 \x01(\x0e24.Ydb.Table.PartitioningPolicy.AutoPartitioningPolicyR\x10autoPartitioning\x12/\n" +
	"\x12uniform_partitions\x18\x03 \x01(\x04H\x00R\x11uniformPartitions\x12P\n" +
	"\x13explicit_partitions\x18\x04 \x01(\v2\x1d.Ydb.Table.ExplicitPartitionsH\x00R\x12explicitPartitions\"v\n" +
	"\x16AutoPartitioningPolicy\x12(\n" +
	"$AUTO_PARTITIONING_POLICY_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bDISABLED\x10\x01\x12\x0e\n" +
	"\n" +
	"AUTO_SPLIT\x10\x02\x12\x14\n" +
	"\x10AUTO_SPLIT_MERGE\x10\x03B\f\n" +
	"\n" +
	"partitions\"2\n" +
	"\x0fExecutionPolicy\x12\x1f\n" +
	"\vpreset_name\x18\x01 \x01(\tR\n" +
	"presetName\"\xf7\x01\n" +
	"\x11ReplicationPolicy\x12\x1f\n" +
	"\vpreset_name\x18\x01 \x01(\tR\n" +
	"presetName\x12%\n" +
	"\x0ereplicas_count\x18\x02 \x01(\rR\rreplicasCount\x12X\n" +
	"\x1ccreate_per_availability_zone\x18\x03 \x01(\x0e2\x17.Ydb.FeatureFlag.StatusR\x19createPerAvailabilityZone\x12@\n" +
	"\x0fallow_promotion\x18\x04 \x01(\x0e2\x17.Ydb.FeatureFlag.StatusR\x0eallowPromotion\"0\n" +
	"\rCachingPolicy\x12\x1f\n" +
	"\vpreset_name\x18\x01 \x01(\tR\n" +
	"presetName\"\xdf\x03\n" +
	"\fTableProfile\x12\x1f\n" +
	"\vpreset_name\x18\x01 \x01(\tR\n" +
	"presetName\x12?\n" +
	"\x0estorage_policy\x18\x02 \x01(\v2\x18.Ydb.Table.StoragePolicyR\rstoragePolicy\x12H\n" +
	"\x11compaction_policy\x18\x03 \x01(\v2\x1b.Ydb.Table.CompactionPolicyR\x10compactionPolicy\x12N\n" +
	"\x13partitioning_policy\x18\x04 \x01(\v2\x1d.Ydb.Table.PartitioningPolicyR\x12partitioningPolicy\x12E\n" +
	"\x10execution_policy\x18\x05 \x01(\v2\x1a.Ydb.Table.ExecutionPolicyR\x0fexecutionPolicy\x12K\n" +
	"\x12replication_policy\x18\x06 \x01(\v2\x1c.Ydb.Table.ReplicationPolicyR\x11replicationPolicy\x12?\n" +
	"\x0ecaching_policy\x18\a \x01(\v2\x18.Ydb.Table.CachingPolicyR\rcachingPolicy\"\x86\x04\n" +
	"\x13SequenceDescription\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tH\x00R\x04name\x88\x01\x01\x12 \n" +
	"\tmin_value\x18\x02 \x01(\x12H\x01R\bminValue\x88\x01\x01\x12 \n" +
	"\tmax_value\x18\x03 \x01(\x12H\x02R\bmaxValue\x88\x01\x01\x12$\n" +
	"\vstart_value\x18\x04 \x01(\x12H\x03R\n" +
	"startValue\x88\x01\x01\x12\x19\n" +
	"\x05cache\x18\x05 \x01(\x04H\x04R\x05cache\x88\x01\x01\x12!\n" +
	"\tincrement\x18\x06 \x01(\x12H\x05R\tincrement\x88\x01\x01\x12\x19\n" +
	"\x05cycle\x18\a \x01(\bH\x06R\x05cycle\x88\x01\x01\x12C\n" +
	"\aset_val\x18\b \x01(\v2%.Ydb.Table.SequenceDescription.SetValH\aR\x06setVal\x88\x01\x01\x1ak\n" +
	"\x06SetVal\x12\"\n" +
	"\n" +
	"next_value\x18\x01 \x01(\x12H\x00R\tnextValue\x88\x01\x01\x12 \n" +
	"\tnext_used\x18\x02 \x01(\bH\x01R\bnextUsed\x88\x01\x01B\r\n" +
	"\v_next_valueB\f\n" +
	"\n" +
	"_next_usedB\a\n" +
	"\x05_nameB\f\n" +
	"\n" +
	"_min_valueB\f\n" +
	"\n" +
	"_max_valueB\x0e\n" +
	"\f_start_valueB\b\n" +
	"\x06_cacheB\f\n" +
	"\n" +
	"_incrementB\b\n" +
	"\x06_cycleB\n" +
	"\n" +
	"\b_set_val\"\x92\x02\n" +
	"\n" +
	"ColumnMeta\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\x04type\x18\x02 \x01(\v2\t.Ydb.TypeR\x04type\x12\x16\n" +
	"\x06family\x18\x03 \x01(\tR\x06family\x12\x1e\n" +
	"\bnot_null\x18\x04 \x01(\bH\x01R\anotNull\x88\x01\x01\x124\n" +
	"\ffrom_literal\x18\x05 \x01(\v2\x0f.Ydb.TypedValueH\x00R\vfromLiteral\x12E\n" +
	"\rfrom_sequence\x18\x06 \x01(\v2\x1e.Ydb.Table.SequenceDescriptionH\x00R\ffromSequenceB\x0f\n" +
	"\rdefault_valueB\v\n" +
	"\t_not_null\"o\n" +
	"\x1aDateTypeColumnModeSettings\x12\x1f\n" +
	"\vcolumn_name\x18\x01 \x01(\tR\n" +
	"columnName\x120\n" +
	"\x14expire_after_seconds\x18\x02 \x01(\rR\x12expireAfterSeconds\"\xba\x02\n" +
	"\x1fValueSinceUnixEpochModeSettings\x12\x1f\n" +
	"\vcolumn_name\x18\x01 \x01(\tR\n" +
	"columnName\x12P\n" +
	"\vcolumn_unit\x18\x02 \x01(\x0e2/.Ydb.Table.ValueSinceUnixEpochModeSettings.UnitR\n" +
	"columnUnit\x120\n" +
	"\x14expire_after_seconds\x18\x03 \x01(\rR\x12expireAfterSeconds\"r\n" +
	"\x04Unit\x12\x14\n" +
	"\x10UNIT_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fUNIT_SECONDS\x10\x01\x12\x15\n" +
	"\x11UNIT_MILLISECONDS\x10\x02\x12\x15\n" +
	"\x11UNIT_MICROSECONDS\x10\x03\x12\x14\n" +
	"\x10UNIT_NANOSECONDS\x10\x04\"\xfd\x01\n" +
	"\vTtlSettings\x12Q\n" +
	"\x10date_type_column\x18\x01 \x01(\v2%.Ydb.Table.DateTypeColumnModeSettingsH\x00R\x0edateTypeColumn\x12a\n" +
	"\x16value_since_unix_epoch\x18\x02 \x01(\v2*.Ydb.Table.ValueSinceUnixEpochModeSettingsH\x00R\x13valueSinceUnixEpoch\x120\n" +
	"\x14run_interval_seconds\x18\x03 \x01(\rR\x12runIntervalSecondsB\x06\n" +
	"\x04mode\"\x9c\x02\n" +
	"\x0fStorageSettings\x12D\n" +
	"\x12tablet_commit_log0\x18\x01 \x01(\v2\x16.Ydb.Table.StoragePoolR\x10tabletCommitLog0\x12D\n" +
	"\x12tablet_commit_log1\x18\x02 \x01(\v2\x16.Ydb.Table.StoragePoolR\x10tabletCommitLog1\x122\n" +
	"\bexternal\x18\x04 \x01(\v2\x16.Ydb.Table.StoragePoolR\bexternal\x12I\n" +
	"\x14store_external_blobs\x18\x05 \x01(\x0e2\x17.Ydb.FeatureFlag.StatusR\x12storeExternalBlobs\"\xab\x02\n" +
	"\fColumnFamily\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12*\n" +
	"\x04data\x18\x02 \x01(\v2\x16.Ydb.Table.StoragePoolR\x04data\x12E\n" +
	"\vcompression\x18\x03 \x01(\x0e2#.Ydb.Table.ColumnFamily.CompressionR\vcompression\x12=\n" +
	"\x0ekeep_in_memory\x18\x04 \x01(\x0e2\x17.Ydb.FeatureFlag.StatusR\fkeepInMemory\"U\n" +
	"\vCompression\x12\x1b\n" +
	"\x17COMPRESSION_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10COMPRESSION_NONE\x10\x01\x12\x13\n" +
	"\x0fCOMPRESSION_LZ4\x10\x02\"\xe5\x02\n" +
	"\x14PartitioningSettings\x12!\n" +
	"\fpartition_by\x18\x01 \x03(\tR\vpartitionBy\x12I\n" +
	"\x14partitioning_by_size\x18\x02 \x01(\x0e2\x17.Ydb.FeatureFlag.StatusR\x12partitioningBySize\x12*\n" +
	"\x11partition_size_mb\x18\x03 \x01(\x04R\x0fpartitionSizeMb\x12I\n" +
	"\x14partitioning_by_load\x18\x04 \x01(\x0e2\x17.Ydb.FeatureFlag.StatusR\x12partitioningByLoad\x120\n" +
	"\x14min_partitions_count\x18\x06 \x01(\x04R\x12minPartitionsCount\x120\n" +
	"\x14max_partitions_count\x18\a \x01(\x04R\x12maxPartitionsCountJ\x04\b\x05\x10\x06\"\\\n" +
	"\x16AzReadReplicasSettings\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12.\n" +
	"\x13read_replicas_count\x18\x02 \x01(\x04R\x11readReplicasCount\"w\n" +
	"\x17ClusterReplicasSettings\x12\\\n" +
	"\x19az_read_replicas_settings\x18\x02 \x03(\v2!.Ydb.Table.AzReadReplicasSettingsR\x16azReadReplicasSettings\"\xa4\x01\n" +
	"\x14ReadReplicasSettings\x12<\n" +
	"\x1aper_az_read_replicas_count\x18\x01 \x01(\x04H\x00R\x16perAzReadReplicasCount\x12<\n" +
	"\x1aany_az_read_replicas_count\x18\x02 \x01(\x04H\x00R\x16anyAzReadReplicasCountB\n" +
	"\n" +
	"\bsettingsJ\x04\b\x03\x10\x04\"\xca\t\n" +
	"\x12CreateTableRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12/\n" +
	"\acolumns\x18\x03 \x03(\v2\x15.Ydb.Table.ColumnMetaR\acolumns\x12\x1f\n" +
	"\vprimary_key\x18\x04 \x03(\tR\n" +
	"primaryKey\x121\n" +
	"\aprofile\x18\x05 \x01(\v2\x17.Ydb.Table.TableProfileR\aprofile\x12J\n" +
	"\x10operation_params\x18\x06 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12/\n" +
	"\aindexes\x18\a \x03(\v2\x15.Ydb.Table.TableIndexR\aindexes\x129\n" +
	"\fttl_settings\x18\b \x01(\v2\x16.Ydb.Table.TtlSettingsR\vttlSettings\x12E\n" +
	"\x10storage_settings\x18\t \x01(\v2\x1a.Ydb.Table.StorageSettingsR\x0fstorageSettings\x12@\n" +
	"\x0fcolumn_families\x18\n" +
	" \x03(\v2\x17.Ydb.Table.ColumnFamilyR\x0ecolumnFamilies\x12f\n" +
	"\n" +
	"attributes\x18\v \x03(\v2-.Ydb.Table.CreateTableRequest.AttributesEntryB\x17\xa2\xe6*\a\n" +
	"\x05\b\x01\x10\x80 \xaa\xe6*\b\n" +
	"\x06\n" +
	"\x04\b\x01\x10dR\n" +
	"attributes\x12+\n" +
	"\x11compaction_policy\x18\f \x01(\tR\x10compactionPolicy\x12/\n" +
	"\x12uniform_partitions\x18\r \x01(\x04H\x00R\x11uniformPartitions\x12K\n" +
	"\x11partition_at_keys\x18\x0e \x01(\v2\x1d.Ydb.Table.ExplicitPartitionsH\x00R\x0fpartitionAtKeys\x12T\n" +
	"\x15partitioning_settings\x18\x0f \x01(\v2\x1f.Ydb.Table.PartitioningSettingsR\x14partitioningSettings\x12A\n" +
	"\x10key_bloom_filter\x18\x10 \x01(\x0e2\x17.Ydb.FeatureFlag.StatusR\x0ekeyBloomFilter\x12U\n" +
	"\x16read_replicas_settings\x18\x11 \x01(\v2\x1f.Ydb.Table.ReadReplicasSettingsR\x14readReplicasSettings\x12\x18\n" +
	"\atiering\x18\x12 \x01(\tR\atiering\x12\x1c\n" +
	"\ttemporary\x18\x13 \x01(\bR\ttemporary\x123\n" +
	"\n" +
	"store_type\x18\x14 \x01(\x0e2\x14.Ydb.Table.StoreTypeR\tstoreType\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\f\n" +
	"\n" +
	"partitions\"N\n" +
	"\x13CreateTableResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x97\x01\n" +
	"\x10DropTableRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12J\n" +
	"\x10operation_params\x18\x04 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParamsJ\x04\b\x03\x10\x04\"L\n" +
	"\x11DropTableResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x8e\x01\n" +
	"\x0fRenameIndexItem\x12\x1f\n" +
	"\vsource_name\x18\x01 \x01(\tR\n" +
	"sourceName\x12)\n" +
	"\x10destination_name\x18\x02 \x01(\tR\x0fdestinationName\x12/\n" +
	"\x13replace_destination\x18\x03 \x01(\bR\x12replaceDestination\"\x98\f\n" +
	"\x11AlterTableRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x126\n" +
	"\vadd_columns\x18\x03 \x03(\v2\x15.Ydb.Table.ColumnMetaR\n" +
	"addColumns\x12!\n" +
	"\fdrop_columns\x18\x04 \x03(\tR\vdropColumns\x12J\n" +
	"\x10operation_params\x18\x05 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12:\n" +
	"\ralter_columns\x18\x06 \x03(\v2\x15.Ydb.Table.ColumnMetaR\falterColumns\x12B\n" +
	"\x10set_ttl_settings\x18\a \x01(\v2\x16.Ydb.Table.TtlSettingsH\x00R\x0esetTtlSettings\x12D\n" +
	"\x11drop_ttl_settings\x18\b \x01(\v2\x16.google.protobuf.EmptyH\x00R\x0fdropTtlSettings\x126\n" +
	"\vadd_indexes\x18\t \x03(\v2\x15.Ydb.Table.TableIndexR\n" +
	"addIndexes\x12!\n" +
	"\fdrop_indexes\x18\n" +
	" \x03(\tR\vdropIndexes\x12P\n" +
	"\x16alter_storage_settings\x18\v \x01(\v2\x1a.Ydb.Table.StorageSettingsR\x14alterStorageSettings\x12G\n" +
	"\x13add_column_families\x18\f \x03(\v2\x17.Ydb.Table.ColumnFamilyR\x11addColumnFamilies\x12K\n" +
	"\x15alter_column_families\x18\r \x03(\v2\x17.Ydb.Table.ColumnFamilyR\x13alterColumnFamilies\x12q\n" +
	"\x10alter_attributes\x18\x0e \x03(\v21.Ydb.Table.AlterTableRequest.AlterAttributesEntryB\x13\xa2\xe6*\x03\x18\x80 \xaa\xe6*\b\n" +
	"\x06\n" +
	"\x04\b\x01\x10dR\x0falterAttributes\x122\n" +
	"\x15set_compaction_policy\x18\x0f \x01(\tR\x13setCompactionPolicy\x12_\n" +
	"\x1balter_partitioning_settings\x18\x10 \x01(\v2\x1f.Ydb.Table.PartitioningSettingsR\x19alterPartitioningSettings\x12H\n" +
	"\x14set_key_bloom_filter\x18\x11 \x01(\x0e2\x17.Ydb.FeatureFlag.StatusR\x11setKeyBloomFilter\x12\\\n" +
	"\x1aset_read_replicas_settings\x18\x12 \x01(\v2\x1f.Ydb.Table.ReadReplicasSettingsR\x17setReadReplicasSettings\x12>\n" +
	"\x0fadd_changefeeds\x18\x13 \x03(\v2\x15.Ydb.Table.ChangefeedR\x0eaddChangefeeds\x12)\n" +
	"\x10drop_changefeeds\x18\x14 \x03(\tR\x0fdropChangefeeds\x12A\n" +
	"\x0erename_indexes\x18\x15 \x03(\v2\x1a.Ydb.Table.RenameIndexItemR\rrenameIndexes\x12!\n" +
	"\vset_tiering\x18\x16 \x01(\tH\x01R\n" +
	"setTiering\x12;\n" +
	"\fdrop_tiering\x18\x17 \x01(\v2\x16.google.protobuf.EmptyH\x01R\vdropTiering\x1aB\n" +
	"\x14AlterAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\f\n" +
	"\n" +
	"ttl_actionB\x10\n" +
	"\x0etiering_action\"M\n" +
	"\x12AlterTableResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\xc9\x01\n" +
	"\x10CopyTableRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1f\n" +
	"\vsource_path\x18\x02 \x01(\tR\n" +
	"sourcePath\x12)\n" +
	"\x10destination_path\x18\x03 \x01(\tR\x0fdestinationPath\x12J\n" +
	"\x10operation_params\x18\x04 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\"L\n" +
	"\x11CopyTableResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"~\n" +
	"\rCopyTableItem\x12\x1f\n" +
	"\vsource_path\x18\x01 \x01(\tR\n" +
	"sourcePath\x12)\n" +
	"\x10destination_path\x18\x02 \x01(\tR\x0fdestinationPath\x12!\n" +
	"\fomit_indexes\x18\x03 \x01(\bR\vomitIndexes\"\xb0\x01\n" +
	"\x11CopyTablesRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x120\n" +
	"\x06tables\x18\x03 \x03(\v2\x18.Ydb.Table.CopyTableItemR\x06tables\"M\n" +
	"\x12CopyTablesResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x8e\x01\n" +
	"\x0fRenameTableItem\x12\x1f\n" +
	"\vsource_path\x18\x01 \x01(\tR\n" +
	"sourcePath\x12)\n" +
	"\x10destination_path\x18\x02 \x01(\tR\x0fdestinationPath\x12/\n" +
	"\x13replace_destination\x18\x03 \x01(\bR\x12replaceDestination\"\xb4\x01\n" +
	"\x13RenameTablesRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x122\n" +
	"\x06tables\x18\x03 \x03(\v2\x1a.Ydb.Table.RenameTableItemR\x06tables\"O\n" +
	"\x14RenameTablesResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\xef\x02\n" +
	"\x14DescribeTableRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12J\n" +
	"\x10operation_params\x18\x04 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x127\n" +
	"\x18include_shard_key_bounds\x18\x05 \x01(\bR\x15includeShardKeyBounds\x12.\n" +
	"\x13include_table_stats\x18\x06 \x01(\bR\x11includeTableStats\x126\n" +
	"\x17include_partition_stats\x18\a \x01(\bR\x15includePartitionStats\x127\n" +
	"\x18include_shard_nodes_info\x18\t \x01(\bR\x15includeShardNodesInfo\"P\n" +
	"\x15DescribeTableResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\xb7\b\n" +
	"\x13DescribeTableResult\x12%\n" +
	"\x04self\x18\x01 \x01(\v2\x11.Ydb.Scheme.EntryR\x04self\x12/\n" +
	"\acolumns\x18\x02 \x03(\v2\x15.Ydb.Table.ColumnMetaR\acolumns\x12\x1f\n" +
	"\vprimary_key\x18\x03 \x03(\tR\n" +
	"primaryKey\x129\n" +
	"\x10shard_key_bounds\x18\x04 \x03(\v2\x0f.Ydb.TypedValueR\x0eshardKeyBounds\x12:\n" +
	"\aindexes\x18\x05 \x03(\v2 .Ydb.Table.TableIndexDescriptionR\aindexes\x126\n" +
	"\vtable_stats\x18\x06 \x01(\v2\x15.Ydb.Table.TableStatsR\n" +
	"tableStats\x129\n" +
	"\fttl_settings\x18\a \x01(\v2\x16.Ydb.Table.TtlSettingsR\vttlSettings\x12E\n" +
	"\x10storage_settings\x18\b \x01(\v2\x1a.Ydb.Table.StorageSettingsR\x0fstorageSettings\x12@\n" +
	"\x0fcolumn_families\x18\t \x03(\v2\x17.Ydb.Table.ColumnFamilyR\x0ecolumnFamilies\x12N\n" +
	"\n" +
	"attributes\x18\n" +
	" \x03(\v2..Ydb.Table.DescribeTableResult.AttributesEntryR\n" +
	"attributes\x12T\n" +
	"\x15partitioning_settings\x18\f \x01(\v2\x1f.Ydb.Table.PartitioningSettingsR\x14partitioningSettings\x12A\n" +
	"\x10key_bloom_filter\x18\r \x01(\x0e2\x17.Ydb.FeatureFlag.StatusR\x0ekeyBloomFilter\x12U\n" +
	"\x16read_replicas_settings\x18\x0e \x01(\v2\x1f.Ydb.Table.ReadReplicasSettingsR\x14readReplicasSettings\x12B\n" +
	"\vchangefeeds\x18\x0f \x03(\v2 .Ydb.Table.ChangefeedDescriptionR\vchangefeeds\x12\x18\n" +
	"\atiering\x18\x10 \x01(\tR\atiering\x12\x1c\n" +
	"\ttemporary\x18\x11 \x01(\bR\ttemporary\x123\n" +
	"\n" +
	"store_type\x18\x12 \x01(\x0e2\x14.Ydb.Table.StoreTypeR\tstoreType\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01J\x04\b\v\x10\f\"?\n" +
	"\x05Query\x12\x1b\n" +
	"\byql_text\x18\x01 \x01(\tH\x00R\ayqlText\x12\x10\n" +
	"\x02id\x18\x02 \x01(\tH\x00R\x02idB\a\n" +
	"\x05query\"\x1a\n" +
	"\x18SerializableModeSettings\"N\n" +
	"\x12OnlineModeSettings\x128\n" +
	"\x18allow_inconsistent_reads\x18\x01 \x01(\bR\x16allowInconsistentReads\"\x13\n" +
	"\x11StaleModeSettings\"\x16\n" +
	"\x14SnapshotModeSettings\"\xe3\x02\n" +
	"\x13TransactionSettings\x12]\n" +
	"\x17serializable_read_write\x18\x01 \x01(\v2#.Ydb.Table.SerializableModeSettingsH\x00R\x15serializableReadWrite\x12I\n" +
	"\x10online_read_only\x18\x02 \x01(\v2\x1d.Ydb.Table.OnlineModeSettingsH\x00R\x0eonlineReadOnly\x12F\n" +
	"\x0fstale_read_only\x18\x03 \x01(\v2\x1c.Ydb.Table.StaleModeSettingsH\x00R\rstaleReadOnly\x12O\n" +
	"\x12snapshot_read_only\x18\x04 \x01(\v2\x1f.Ydb.Table.SnapshotModeSettingsH\x00R\x10snapshotReadOnlyB\t\n" +
	"\atx_mode\"\x94\x01\n" +
	"\x12TransactionControl\x12\x15\n" +
	"\x05tx_id\x18\x01 \x01(\tH\x00R\x04txId\x12;\n" +
	"\bbegin_tx\x18\x02 \x01(\v2\x1e.Ydb.Table.TransactionSettingsH\x00R\abeginTx\x12\x1b\n" +
	"\tcommit_tx\x18\n" +
	" \x01(\bR\bcommitTxB\r\n" +
	"\vtx_selector\"6\n" +
	"\x10QueryCachePolicy\x12\"\n" +
	"\rkeep_in_cache\x18\x01 \x01(\bR\vkeepInCache\"\xb1\x01\n" +
	"\x14QueryStatsCollection\"\x98\x01\n" +
	"\x04Mode\x12 \n" +
	"\x1cSTATS_COLLECTION_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15STATS_COLLECTION_NONE\x10\x01\x12\x1a\n" +
	"\x16STATS_COLLECTION_BASIC\x10\x02\x12\x19\n" +
	"\x15STATS_COLLECTION_FULL\x10\x03\x12\x1c\n" +
	"\x18STATS_COLLECTION_PROFILE\x10\x04\"\xa4\x04\n" +
	"\x17ExecuteDataQueryRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12<\n" +
	"\n" +
	"tx_control\x18\x02 \x01(\v2\x1d.Ydb.Table.TransactionControlR\ttxControl\x12&\n" +
	"\x05query\x18\x03 \x01(\v2\x10.Ydb.Table.QueryR\x05query\x12R\n" +
	"\n" +
	"parameters\x18\x04 \x03(\v22.Ydb.Table.ExecuteDataQueryRequest.ParametersEntryR\n" +
	"parameters\x12I\n" +
	"\x12query_cache_policy\x18\x05 \x01(\v2\x1b.Ydb.Table.QueryCachePolicyR\x10queryCachePolicy\x12J\n" +
	"\x10operation_params\x18\x06 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12I\n" +
	"\rcollect_stats\x18\a \x01(\x0e2$.Ydb.Table.QueryStatsCollection.ModeR\fcollectStats\x1aN\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12%\n" +
	"\x05value\x18\x02 \x01(\v2\x0f.Ydb.TypedValueR\x05value:\x028\x01\"S\n" +
	"\x18ExecuteDataQueryResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\xa1\x01\n" +
	"\x19ExecuteSchemeQueryRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x19\n" +
	"\byql_text\x18\x02 \x01(\tR\ayqlText\x12J\n" +
	"\x10operation_params\x18\x03 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\"U\n" +
	"\x1aExecuteSchemeQueryResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"!\n" +
	"\x0fTransactionMeta\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xc0\x01\n" +
	"\tQueryMeta\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12T\n" +
	"\x10parameters_types\x18\x02 \x03(\v2).Ydb.Table.QueryMeta.ParametersTypesEntryR\x0fparametersTypes\x1aM\n" +
	"\x14ParametersTypesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1f\n" +
	"\x05value\x18\x02 \x01(\v2\t.Ydb.TypeR\x05value:\x028\x01\"\xec\x01\n" +
	"\x12ExecuteQueryResult\x12/\n" +
	"\vresult_sets\x18\x01 \x03(\v2\x0e.Ydb.ResultSetR\n" +
	"resultSets\x123\n" +
	"\atx_meta\x18\x02 \x01(\v2\x1a.Ydb.Table.TransactionMetaR\x06txMeta\x123\n" +
	"\n" +
	"query_meta\x18\x03 \x01(\v2\x14.Ydb.Table.QueryMetaR\tqueryMeta\x12;\n" +
	"\vquery_stats\x18\x04 \x01(\v2\x1a.Ydb.TableStats.QueryStatsR\n" +
	"queryStats\"\xd9\x01\n" +
	"\x17ExplainDataQueryRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x19\n" +
	"\byql_text\x18\x02 \x01(\tR\ayqlText\x12J\n" +
	"\x10operation_params\x18\x03 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x128\n" +
	"\x18collect_full_diagnostics\x18\x04 \x01(\bR\x16collectFullDiagnostics\"S\n" +
	"\x18ExplainDataQueryResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x86\x01\n" +
	"\x12ExplainQueryResult\x12\x1b\n" +
	"\tquery_ast\x18\x01 \x01(\tR\bqueryAst\x12\x1d\n" +
	"\n" +
	"query_plan\x18\x02 \x01(\tR\tqueryPlan\x124\n" +
	"\x16query_full_diagnostics\x18\x03 \x01(\tR\x14queryFullDiagnostics\"\x9f\x01\n" +
	"\x17PrepareDataQueryRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x19\n" +
	"\byql_text\x18\x02 \x01(\tR\ayqlText\x12J\n" +
	"\x10operation_params\x18\x03 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\"S\n" +
	"\x18PrepareDataQueryResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\xdd\x01\n" +
	"\x12PrepareQueryResult\x12\x19\n" +
	"\bquery_id\x18\x01 \x01(\tR\aqueryId\x12]\n" +
	"\x10parameters_types\x18\x02 \x03(\v22.Ydb.Table.PrepareQueryResult.ParametersTypesEntryR\x0fparametersTypes\x1aM\n" +
	"\x14ParametersTypesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1f\n" +
	"\x05value\x18\x02 \x01(\v2\t.Ydb.TypeR\x05value:\x028\x01\"}\n" +
	"\x10KeepAliveRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12J\n" +
	"\x10operation_params\x18\x02 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\"L\n" +
	"\x11KeepAliveResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\xc6\x01\n" +
	"\x0fKeepAliveResult\x12O\n" +
	"\x0esession_status\x18\x01 \x01(\x0e2(.Ydb.Table.KeepAliveResult.SessionStatusR\rsessionStatus\"b\n" +
	"\rSessionStatus\x12\x1e\n" +
	"\x1aSESSION_STATUS_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14SESSION_STATUS_READY\x10\x01\x12\x17\n" +
	"\x13SESSION_STATUS_BUSY\x10\x02\"\xc5\x01\n" +
	"\x17BeginTransactionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12?\n" +
	"\vtx_settings\x18\x02 \x01(\v2\x1e.Ydb.Table.TransactionSettingsR\n" +
	"txSettings\x12J\n" +
	"\x10operation_params\x18\x03 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\"S\n" +
	"\x18BeginTransactionResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"M\n" +
	"\x16BeginTransactionResult\x123\n" +
	"\atx_meta\x18\x01 \x01(\v2\x1a.Ydb.Table.TransactionMetaR\x06txMeta\"\xe5\x01\n" +
	"\x18CommitTransactionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x13\n" +
	"\x05tx_id\x18\x02 \x01(\tR\x04txId\x12J\n" +
	"\x10operation_params\x18\x03 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12I\n" +
	"\rcollect_stats\x18\x04 \x01(\x0e2$.Ydb.Table.QueryStatsCollection.ModeR\fcollectStats\"T\n" +
	"\x19CommitTransactionResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"V\n" +
	"\x17CommitTransactionResult\x12;\n" +
	"\vquery_stats\x18\x01 \x01(\v2\x1a.Ydb.TableStats.QueryStatsR\n" +
	"queryStats\"\x9c\x01\n" +
	"\x1aRollbackTransactionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x13\n" +
	"\x05tx_id\x18\x02 \x01(\tR\x04txId\x12J\n" +
	"\x10operation_params\x18\x03 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\"V\n" +
	"\x1bRollbackTransactionResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\xb2\x01\n" +
	"\x18StoragePolicyDescription\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12G\n" +
	"\x06labels\x18\x02 \x03(\v2/.Ydb.Table.StoragePolicyDescription.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb8\x01\n" +
	"\x1bCompactionPolicyDescription\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12J\n" +
	"\x06labels\x18\x02 \x03(\v22.Ydb.Table.CompactionPolicyDescription.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbc\x01\n" +
	"\x1dPartitioningPolicyDescription\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12L\n" +
	"\x06labels\x18\x02 \x03(\v24.Ydb.Table.PartitioningPolicyDescription.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb6\x01\n" +
	"\x1aExecutionPolicyDescription\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12I\n" +
	"\x06labels\x18\x02 \x03(\v21.Ydb.Table.ExecutionPolicyDescription.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xba\x01\n" +
	"\x1cReplicationPolicyDescription\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12K\n" +
	"\x06labels\x18\x02 \x03(\v23.Ydb.Table.ReplicationPolicyDescription.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb2\x01\n" +
	"\x18CachingPolicyDescription\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12G\n" +
	"\x06labels\x18\x02 \x03(\v2/.Ydb.Table.CachingPolicyDescription.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x88\a\n" +
	"\x17TableProfileDescription\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12F\n" +
	"\x06labels\x18\x02 \x03(\v2..Ydb.Table.TableProfileDescription.LabelsEntryR\x06labels\x124\n" +
	"\x16default_storage_policy\x18\x03 \x01(\tR\x14defaultStoragePolicy\x128\n" +
	"\x18allowed_storage_policies\x18\x04 \x03(\tR\x16allowedStoragePolicies\x12:\n" +
	"\x19default_compaction_policy\x18\x05 \x01(\tR\x17defaultCompactionPolicy\x12>\n" +
	"\x1ballowed_compaction_policies\x18\x06 \x03(\tR\x19allowedCompactionPolicies\x12>\n" +
	"\x1bdefault_partitioning_policy\x18\a \x01(\tR\x19defaultPartitioningPolicy\x12B\n" +
	"\x1dallowed_partitioning_policies\x18\b \x03(\tR\x1ballowedPartitioningPolicies\x128\n" +
	"\x18default_execution_policy\x18\t \x01(\tR\x16defaultExecutionPolicy\x12<\n" +
	"\x1aallowed_execution_policies\x18\n" +
	" \x03(\tR\x18allowedExecutionPolicies\x12<\n" +
	"\x1adefault_replication_policy\x18\v \x01(\tR\x18defaultReplicationPolicy\x12@\n" +
	"\x1callowed_replication_policies\x18\f \x03(\tR\x1aallowedReplicationPolicies\x124\n" +
	"\x16default_caching_policy\x18\r \x01(\tR\x14defaultCachingPolicy\x128\n" +
	"\x18allowed_caching_policies\x18\x0e \x03(\tR\x16allowedCachingPolicies\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"i\n" +
	"\x1bDescribeTableOptionsRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\"W\n" +
	"\x1cDescribeTableOptionsResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\xc0\x05\n" +
	"\x1aDescribeTableOptionsResult\x12V\n" +
	"\x15table_profile_presets\x18\x01 \x03(\v2\".Ydb.Table.TableProfileDescriptionR\x13tableProfilePresets\x12Y\n" +
	"\x16storage_policy_presets\x18\x02 \x03(\v2#.Ydb.Table.StoragePolicyDescriptionR\x14storagePolicyPresets\x12b\n" +
	"\x19compaction_policy_presets\x18\x03 \x03(\v2&.Ydb.Table.CompactionPolicyDescriptionR\x17compactionPolicyPresets\x12h\n" +
	"\x1bpartitioning_policy_presets\x18\x04 \x03(\v2(.Ydb.Table.PartitioningPolicyDescriptionR\x19partitioningPolicyPresets\x12_\n" +
	"\x18execution_policy_presets\x18\x05 \x03(\v2%.Ydb.Table.ExecutionPolicyDescriptionR\x16executionPolicyPresets\x12e\n" +
	"\x1areplication_policy_presets\x18\x06 \x03(\v2'.Ydb.Table.ReplicationPolicyDescriptionR\x18replicationPolicyPresets\x12Y\n" +
	"\x16caching_policy_presets\x18\a \x03(\v2#.Ydb.Table.CachingPolicyDescriptionR\x14cachingPolicyPresets\"\xec\x01\n" +
	"\bKeyRange\x12+\n" +
	"\agreater\x18\x01 \x01(\v2\x0f.Ydb.TypedValueH\x00R\agreater\x12;\n" +
	"\x10greater_or_equal\x18\x02 \x01(\v2\x0f.Ydb.TypedValueH\x00R\x0egreaterOrEqual\x12%\n" +
	"\x04less\x18\x03 \x01(\v2\x0f.Ydb.TypedValueH\x01R\x04less\x125\n" +
	"\rless_or_equal\x18\x04 \x01(\v2\x0f.Ydb.TypedValueH\x01R\vlessOrEqualB\f\n" +
	"\n" +
	"from_boundB\n" +
	"\n" +
	"\bto_bound\"\xba\x03\n" +
	"\x10ReadTableRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x120\n" +
	"\tkey_range\x18\x03 \x01(\v2\x13.Ydb.Table.KeyRangeR\bkeyRange\x12\x18\n" +
	"\acolumns\x18\x04 \x03(\tR\acolumns\x12\x18\n" +
	"\aordered\x18\x05 \x01(\bR\aordered\x12\x1b\n" +
	"\trow_limit\x18\x06 \x01(\x04R\browLimit\x12:\n" +
	"\fuse_snapshot\x18\a \x01(\x0e2\x17.Ydb.FeatureFlag.StatusR\vuseSnapshot\x12*\n" +
	"\x11batch_limit_bytes\x18\b \x01(\x04R\x0fbatchLimitBytes\x12(\n" +
	"\x10batch_limit_rows\x18\t \x01(\x04R\x0ebatchLimitRows\x12^\n" +
	" return_not_null_data_as_optional\x18\n" +
	" \x01(\x0e2\x17.Ydb.FeatureFlag.StatusR\x1breturnNotNullDataAsOptional\"\xde\x01\n" +
	"\x11ReadTableResponse\x121\n" +
	"\x06status\x18\x01 \x01(\x0e2\x19.Ydb.StatusIds.StatusCodeR\x06status\x12/\n" +
	"\x06issues\x18\x02 \x03(\v2\x17.Ydb.Issue.IssueMessageR\x06issues\x121\n" +
	"\bsnapshot\x18\x04 \x01(\v2\x15.Ydb.VirtualTimestampR\bsnapshot\x122\n" +
	"\x06result\x18\x03 \x01(\v2\x1a.Ydb.Table.ReadTableResultR\x06result\"@\n" +
	"\x0fReadTableResult\x12-\n" +
	"\n" +
	"result_set\x18\x01 \x01(\v2\x0e.Ydb.ResultSetR\tresultSet\"\x83\x01\n" +
	"\x0fReadRowsRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12#\n" +
	"\x04keys\x18\x03 \x01(\v2\x0f.Ydb.TypedValueR\x04keys\x12\x18\n" +
	"\acolumns\x18\x04 \x03(\tR\acolumns\"\xa5\x01\n" +
	"\x10ReadRowsResponse\x121\n" +
	"\x06status\x18\x01 \x01(\x0e2\x19.Ydb.StatusIds.StatusCodeR\x06status\x12/\n" +
	"\x06issues\x18\x02 \x03(\v2\x17.Ydb.Issue.IssueMessageR\x06issues\x12-\n" +
	"\n" +
	"result_set\x18\x03 \x01(\v2\x0e.Ydb.ResultSetR\tresultSet\"\xd2\x02\n" +
	"\x11BulkUpsertRequest\x12\x14\n" +
	"\x05table\x18\x01 \x01(\tR\x05table\x12#\n" +
	"\x04rows\x18\x02 \x01(\v2\x0f.Ydb.TypedValueR\x04rows\x12J\n" +
	"\x10operation_params\x18\x03 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x12S\n" +
	"\x14arrow_batch_settings\x18\a \x01(\v2\x1f.Ydb.Formats.ArrowBatchSettingsH\x00R\x12arrowBatchSettings\x12=\n" +
	"\fcsv_settings\x18\b \x01(\v2\x18.Ydb.Formats.CsvSettingsH\x00R\vcsvSettings\x12\x13\n" +
	"\x04data\x18\xe8\a \x01(\fR\x04dataB\r\n" +
	"\vdata_format\"M\n" +
	"\x12BulkUpsertResponse\x127\n" +
	"\toperation\x18\x01 \x01(\v2\x19.Ydb.Operations.OperationR\toperation\"\x12\n" +
	"\x10BulkUpsertResult\"\xfe\x03\n" +
	"\x17ExecuteScanQueryRequest\x12&\n" +
	"\x05query\x18\x03 \x01(\v2\x10.Ydb.Table.QueryR\x05query\x12R\n" +
	"\n" +
	"parameters\x18\x04 \x03(\v22.Ydb.Table.ExecuteScanQueryRequest.ParametersEntryR\n" +
	"parameters\x12;\n" +
	"\x04mode\x18\x06 \x01(\x0e2'.Ydb.Table.ExecuteScanQueryRequest.ModeR\x04mode\x12I\n" +
	"\rcollect_stats\x18\b \x01(\x0e2$.Ydb.Table.QueryStatsCollection.ModeR\fcollectStats\x128\n" +
	"\x18collect_full_diagnostics\x18\t \x01(\bR\x16collectFullDiagnostics\x1aN\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12%\n" +
	"\x05value\x18\x02 \x01(\v2\x0f.Ydb.TypedValueR\x05value:\x028\x01\"=\n" +
	"\x04Mode\x12\x14\n" +
	"\x10MODE_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fMODE_EXPLAIN\x10\x01\x12\r\n" +
	"\tMODE_EXEC\x10\x03J\x04\b\x01\x10\x02J\x04\b\x02\x10\x03J\x04\b\x05\x10\x06J\x04\b\a\x10\b\"\xc7\x01\n" +
	"\x1fExecuteScanQueryPartialResponse\x121\n" +
	"\x06status\x18\x01 \x01(\x0e2\x19.Ydb.StatusIds.StatusCodeR\x06status\x12/\n" +
	"\x06issues\x18\x02 \x03(\v2\x17.Ydb.Issue.IssueMessageR\x06issues\x12@\n" +
	"\x06result\x18\x03 \x01(\v2(.Ydb.Table.ExecuteScanQueryPartialResultR\x06result\"\xd9\x01\n" +
	"\x1dExecuteScanQueryPartialResult\x12-\n" +
	"\n" +
	"result_set\x18\x01 \x01(\v2\x0e.Ydb.ResultSetR\tresultSet\x12;\n" +
	"\vquery_stats\x18\x06 \x01(\v2\x1a.Ydb.TableStats.QueryStatsR\n" +
	"queryStats\x124\n" +
	"\x16query_full_diagnostics\x18\a \x01(\tR\x14queryFullDiagnosticsJ\x04\b\x02\x10\x03J\x04\b\x03\x10\x04J\x04\b\x04\x10\x05J\x04\b\x05\x10\x06*R\n" +
	"\tStoreType\x12\x1a\n" +
	"\x16STORE_TYPE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eSTORE_TYPE_ROW\x10\x01\x12\x15\n" +
	"\x11STORE_TYPE_COLUMN\x10\x02BS\n" +
	"\x14tech.ydb.proto.tableZ8github.com/ydb-platform/ydb-go-genproto/protos/Ydb_Table\xf8\x01\x01b\x06proto3"

var file_protos_ydb_table_proto_enumTypes = make([]protoimpl.EnumInfo, 13)
var file_protos_ydb_table_proto_msgTypes = make([]protoimpl.MessageInfo, 130)
var file_protos_ydb_table_proto_goTypes = []any{
	(StoreType)(0),                                 // 0: Ydb.Table.StoreType
	(TableIndexDescription_Status)(0),              // 1: Ydb.Table.TableIndexDescription.Status
	(IndexBuildState_State)(0),                     // 2: Ydb.Table.IndexBuildState.State
	(ChangefeedMode_Mode)(0),                       // 3: Ydb.Table.ChangefeedMode.Mode
	(ChangefeedFormat_Format)(0),                   // 4: Ydb.Table.ChangefeedFormat.Format
	(ChangefeedDescription_State)(0),               // 5: Ydb.Table.ChangefeedDescription.State
	(ColumnFamilyPolicy_Compression)(0),            // 6: Ydb.Table.ColumnFamilyPolicy.Compression
	(PartitioningPolicy_AutoPartitioningPolicy)(0), // 7: Ydb.Table.PartitioningPolicy.AutoPartitioningPolicy
	(ValueSinceUnixEpochModeSettings_Unit)(0),      // 8: Ydb.Table.ValueSinceUnixEpochModeSettings.Unit
	(ColumnFamily_Compression)(0),                  // 9: Ydb.Table.ColumnFamily.Compression
	(QueryStatsCollection_Mode)(0),                 // 10: Ydb.Table.QueryStatsCollection.Mode
	(KeepAliveResult_SessionStatus)(0),             // 11: Ydb.Table.KeepAliveResult.SessionStatus
	(ExecuteScanQueryRequest_Mode)(0),              // 12: Ydb.Table.ExecuteScanQueryRequest.Mode
	(*CreateSessionRequest)(nil),                   // 13: Ydb.Table.CreateSessionRequest
	(*CreateSessionResponse)(nil),                  // 14: Ydb.Table.CreateSessionResponse
	(*CreateSessionResult)(nil),                    // 15: Ydb.Table.CreateSessionResult
	(*DeleteSessionRequest)(nil),                   // 16: Ydb.Table.DeleteSessionRequest
	(*DeleteSessionResponse)(nil),                  // 17: Ydb.Table.DeleteSessionResponse
	(*GlobalIndex)(nil),                            // 18: Ydb.Table.GlobalIndex
	(*GlobalAsyncIndex)(nil),                       // 19: Ydb.Table.GlobalAsyncIndex
	(*GlobalUniqueIndex)(nil),                      // 20: Ydb.Table.GlobalUniqueIndex
	(*TableIndex)(nil),                             // 21: Ydb.Table.TableIndex
	(*TableIndexDescription)(nil),                  // 22: Ydb.Table.TableIndexDescription
	(*IndexBuildState)(nil),                        // 23: Ydb.Table.IndexBuildState
	(*IndexBuildDescription)(nil),                  // 24: Ydb.Table.IndexBuildDescription
	(*IndexBuildMetadata)(nil),                     // 25: Ydb.Table.IndexBuildMetadata
	(*ChangefeedMode)(nil),                         // 26: Ydb.Table.ChangefeedMode
	(*ChangefeedFormat)(nil),                       // 27: Ydb.Table.ChangefeedFormat
	(*Changefeed)(nil),                             // 28: Ydb.Table.Changefeed
	(*ChangefeedDescription)(nil),                  // 29: Ydb.Table.ChangefeedDescription
	(*StoragePool)(nil),                            // 30: Ydb.Table.StoragePool
	(*StoragePolicy)(nil),                          // 31: Ydb.Table.StoragePolicy
	(*ColumnFamilyPolicy)(nil),                     // 32: Ydb.Table.ColumnFamilyPolicy
	(*CompactionPolicy)(nil),                       // 33: Ydb.Table.CompactionPolicy
	(*ExplicitPartitions)(nil),                     // 34: Ydb.Table.ExplicitPartitions
	(*PartitionStats)(nil),                         // 35: Ydb.Table.PartitionStats
	(*TableStats)(nil),                             // 36: Ydb.Table.TableStats
	(*PartitioningPolicy)(nil),                     // 37: Ydb.Table.PartitioningPolicy
	(*ExecutionPolicy)(nil),                        // 38: Ydb.Table.ExecutionPolicy
	(*ReplicationPolicy)(nil),                      // 39: Ydb.Table.ReplicationPolicy
	(*CachingPolicy)(nil),                          // 40: Ydb.Table.CachingPolicy
	(*TableProfile)(nil),                           // 41: Ydb.Table.TableProfile
	(*SequenceDescription)(nil),                    // 42: Ydb.Table.SequenceDescription
	(*ColumnMeta)(nil),                             // 43: Ydb.Table.ColumnMeta
	(*DateTypeColumnModeSettings)(nil),             // 44: Ydb.Table.DateTypeColumnModeSettings
	(*ValueSinceUnixEpochModeSettings)(nil),        // 45: Ydb.Table.ValueSinceUnixEpochModeSettings
	(*TtlSettings)(nil),                            // 46: Ydb.Table.TtlSettings
	(*StorageSettings)(nil),                        // 47: Ydb.Table.StorageSettings
	(*ColumnFamily)(nil),                           // 48: Ydb.Table.ColumnFamily
	(*PartitioningSettings)(nil),                   // 49: Ydb.Table.PartitioningSettings
	(*AzReadReplicasSettings)(nil),                 // 50: Ydb.Table.AzReadReplicasSettings
	(*ClusterReplicasSettings)(nil),                // 51: Ydb.Table.ClusterReplicasSettings
	(*ReadReplicasSettings)(nil),                   // 52: Ydb.Table.ReadReplicasSettings
	(*CreateTableRequest)(nil),                     // 53: Ydb.Table.CreateTableRequest
	(*CreateTableResponse)(nil),                    // 54: Ydb.Table.CreateTableResponse
	(*DropTableRequest)(nil),                       // 55: Ydb.Table.DropTableRequest
	(*DropTableResponse)(nil),                      // 56: Ydb.Table.DropTableResponse
	(*RenameIndexItem)(nil),                        // 57: Ydb.Table.RenameIndexItem
	(*AlterTableRequest)(nil),                      // 58: Ydb.Table.AlterTableRequest
	(*AlterTableResponse)(nil),                     // 59: Ydb.Table.AlterTableResponse
	(*CopyTableRequest)(nil),                       // 60: Ydb.Table.CopyTableRequest
	(*CopyTableResponse)(nil),                      // 61: Ydb.Table.CopyTableResponse
	(*CopyTableItem)(nil),                          // 62: Ydb.Table.CopyTableItem
	(*CopyTablesRequest)(nil),                      // 63: Ydb.Table.CopyTablesRequest
	(*CopyTablesResponse)(nil),                     // 64: Ydb.Table.CopyTablesResponse
	(*RenameTableItem)(nil),                        // 65: Ydb.Table.RenameTableItem
	(*RenameTablesRequest)(nil),                    // 66: Ydb.Table.RenameTablesRequest
	(*RenameTablesResponse)(nil),                   // 67: Ydb.Table.RenameTablesResponse
	(*DescribeTableRequest)(nil),                   // 68: Ydb.Table.DescribeTableRequest
	(*DescribeTableResponse)(nil),                  // 69: Ydb.Table.DescribeTableResponse
	(*DescribeTableResult)(nil),                    // 70: Ydb.Table.DescribeTableResult
	(*Query)(nil),                                  // 71: Ydb.Table.Query
	(*SerializableModeSettings)(nil),               // 72: Ydb.Table.SerializableModeSettings
	(*OnlineModeSettings)(nil),                     // 73: Ydb.Table.OnlineModeSettings
	(*StaleModeSettings)(nil),                      // 74: Ydb.Table.StaleModeSettings
	(*SnapshotModeSettings)(nil),                   // 75: Ydb.Table.SnapshotModeSettings
	(*TransactionSettings)(nil),                    // 76: Ydb.Table.TransactionSettings
	(*TransactionControl)(nil),                     // 77: Ydb.Table.TransactionControl
	(*QueryCachePolicy)(nil),                       // 78: Ydb.Table.QueryCachePolicy
	(*QueryStatsCollection)(nil),                   // 79: Ydb.Table.QueryStatsCollection
	(*ExecuteDataQueryRequest)(nil),                // 80: Ydb.Table.ExecuteDataQueryRequest
	(*ExecuteDataQueryResponse)(nil),               // 81: Ydb.Table.ExecuteDataQueryResponse
	(*ExecuteSchemeQueryRequest)(nil),              // 82: Ydb.Table.ExecuteSchemeQueryRequest
	(*ExecuteSchemeQueryResponse)(nil),             // 83: Ydb.Table.ExecuteSchemeQueryResponse
	(*TransactionMeta)(nil),                        // 84: Ydb.Table.TransactionMeta
	(*QueryMeta)(nil),                              // 85: Ydb.Table.QueryMeta
	(*ExecuteQueryResult)(nil),                     // 86: Ydb.Table.ExecuteQueryResult
	(*ExplainDataQueryRequest)(nil),                // 87: Ydb.Table.ExplainDataQueryRequest
	(*ExplainDataQueryResponse)(nil),               // 88: Ydb.Table.ExplainDataQueryResponse
	(*ExplainQueryResult)(nil),                     // 89: Ydb.Table.ExplainQueryResult
	(*PrepareDataQueryRequest)(nil),                // 90: Ydb.Table.PrepareDataQueryRequest
	(*PrepareDataQueryResponse)(nil),               // 91: Ydb.Table.PrepareDataQueryResponse
	(*PrepareQueryResult)(nil),                     // 92: Ydb.Table.PrepareQueryResult
	(*KeepAliveRequest)(nil),                       // 93: Ydb.Table.KeepAliveRequest
	(*KeepAliveResponse)(nil),                      // 94: Ydb.Table.KeepAliveResponse
	(*KeepAliveResult)(nil),                        // 95: Ydb.Table.KeepAliveResult
	(*BeginTransactionRequest)(nil),                // 96: Ydb.Table.BeginTransactionRequest
	(*BeginTransactionResponse)(nil),               // 97: Ydb.Table.BeginTransactionResponse
	(*BeginTransactionResult)(nil),                 // 98: Ydb.Table.BeginTransactionResult
	(*CommitTransactionRequest)(nil),               // 99: Ydb.Table.CommitTransactionRequest
	(*CommitTransactionResponse)(nil),              // 100: Ydb.Table.CommitTransactionResponse
	(*CommitTransactionResult)(nil),                // 101: Ydb.Table.CommitTransactionResult
	(*RollbackTransactionRequest)(nil),             // 102: Ydb.Table.RollbackTransactionRequest
	(*RollbackTransactionResponse)(nil),            // 103: Ydb.Table.RollbackTransactionResponse
	(*StoragePolicyDescription)(nil),               // 104: Ydb.Table.StoragePolicyDescription
	(*CompactionPolicyDescription)(nil),            // 105: Ydb.Table.CompactionPolicyDescription
	(*PartitioningPolicyDescription)(nil),          // 106: Ydb.Table.PartitioningPolicyDescription
	(*ExecutionPolicyDescription)(nil),             // 107: Ydb.Table.ExecutionPolicyDescription
	(*ReplicationPolicyDescription)(nil),           // 108: Ydb.Table.ReplicationPolicyDescription
	(*CachingPolicyDescription)(nil),               // 109: Ydb.Table.CachingPolicyDescription
	(*TableProfileDescription)(nil),                // 110: Ydb.Table.TableProfileDescription
	(*DescribeTableOptionsRequest)(nil),            // 111: Ydb.Table.DescribeTableOptionsRequest
	(*DescribeTableOptionsResponse)(nil),           // 112: Ydb.Table.DescribeTableOptionsResponse
	(*DescribeTableOptionsResult)(nil),             // 113: Ydb.Table.DescribeTableOptionsResult
	(*KeyRange)(nil),                               // 114: Ydb.Table.KeyRange
	(*ReadTableRequest)(nil),                       // 115: Ydb.Table.ReadTableRequest
	(*ReadTableResponse)(nil),                      // 116: Ydb.Table.ReadTableResponse
	(*ReadTableResult)(nil),                        // 117: Ydb.Table.ReadTableResult
	(*ReadRowsRequest)(nil),                        // 118: Ydb.Table.ReadRowsRequest
	(*ReadRowsResponse)(nil),                       // 119: Ydb.Table.ReadRowsResponse
	(*BulkUpsertRequest)(nil),                      // 120: Ydb.Table.BulkUpsertRequest
	(*BulkUpsertResponse)(nil),                     // 121: Ydb.Table.BulkUpsertResponse
	(*BulkUpsertResult)(nil),                       // 122: Ydb.Table.BulkUpsertResult
	(*ExecuteScanQueryRequest)(nil),                // 123: Ydb.Table.ExecuteScanQueryRequest
	(*ExecuteScanQueryPartialResponse)(nil),        // 124: Ydb.Table.ExecuteScanQueryPartialResponse
	(*ExecuteScanQueryPartialResult)(nil),          // 125: Ydb.Table.ExecuteScanQueryPartialResult
	nil,                                            // 126: Ydb.Table.Changefeed.AttributesEntry
	nil,                                            // 127: Ydb.Table.ChangefeedDescription.AttributesEntry
	(*SequenceDescription_SetVal)(nil),             // 128: Ydb.Table.SequenceDescription.SetVal
	nil,                                            // 129: Ydb.Table.CreateTableRequest.AttributesEntry
	nil,                                            // 130: Ydb.Table.AlterTableRequest.AlterAttributesEntry
	nil,                                            // 131: Ydb.Table.DescribeTableResult.AttributesEntry
	nil,                                            // 132: Ydb.Table.ExecuteDataQueryRequest.ParametersEntry
	nil,                                            // 133: Ydb.Table.QueryMeta.ParametersTypesEntry
	nil,                                            // 134: Ydb.Table.PrepareQueryResult.ParametersTypesEntry
	nil,                                            // 135: Ydb.Table.StoragePolicyDescription.LabelsEntry
	nil,                                            // 136: Ydb.Table.CompactionPolicyDescription.LabelsEntry
	nil,                                            // 137: Ydb.Table.PartitioningPolicyDescription.LabelsEntry
	nil,                                            // 138: Ydb.Table.ExecutionPolicyDescription.LabelsEntry
	nil,                                            // 139: Ydb.Table.ReplicationPolicyDescription.LabelsEntry
	nil,                                            // 140: Ydb.Table.CachingPolicyDescription.LabelsEntry
	nil,                                            // 141: Ydb.Table.TableProfileDescription.LabelsEntry
	nil,                                            // 142: Ydb.Table.ExecuteScanQueryRequest.ParametersEntry
	(*Ydb_Operations.OperationParams)(nil),         // 143: Ydb.Operations.OperationParams
	(*Ydb_Operations.Operation)(nil),               // 144: Ydb.Operations.Operation
	(*durationpb.Duration)(nil),                    // 145: google.protobuf.Duration
	(*Ydb_Topic.PartitioningSettings)(nil),         // 146: Ydb.Topic.PartitioningSettings
	(Ydb.FeatureFlag_Status)(0),                    // 147: Ydb.FeatureFlag.Status
	(*Ydb.TypedValue)(nil),                         // 148: Ydb.TypedValue
	(*timestamppb.Timestamp)(nil),                  // 149: google.protobuf.Timestamp
	(*Ydb.Type)(nil),                               // 150: Ydb.Type
	(*emptypb.Empty)(nil),                          // 151: google.protobuf.Empty
	(*Ydb_Scheme.Entry)(nil),                       // 152: Ydb.Scheme.Entry
	(*Ydb.ResultSet)(nil),                          // 153: Ydb.ResultSet
	(*Ydb_TableStats.QueryStats)(nil),              // 154: Ydb.TableStats.QueryStats
	(Ydb.StatusIds_StatusCode)(0),                  // 155: Ydb.StatusIds.StatusCode
	(*Ydb_Issue.IssueMessage)(nil),                 // 156: Ydb.Issue.IssueMessage
	(*Ydb.VirtualTimestamp)(nil),                   // 157: Ydb.VirtualTimestamp
	(*Ydb_Formats.ArrowBatchSettings)(nil),         // 158: Ydb.Formats.ArrowBatchSettings
	(*Ydb_Formats.CsvSettings)(nil),                // 159: Ydb.Formats.CsvSettings
}
var file_protos_ydb_table_proto_depIdxs = []int32{
	143, // 0: Ydb.Table.CreateSessionRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	144, // 1: Ydb.Table.CreateSessionResponse.operation:type_name -> Ydb.Operations.Operation
	143, // 2: Ydb.Table.DeleteSessionRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	144, // 3: Ydb.Table.DeleteSessionResponse.operation:type_name -> Ydb.Operations.Operation
	18,  // 4: Ydb.Table.TableIndex.global_index:type_name -> Ydb.Table.GlobalIndex
	19,  // 5: Ydb.Table.TableIndex.global_async_index:type_name -> Ydb.Table.GlobalAsyncIndex
	20,  // 6: Ydb.Table.TableIndex.global_unique_index:type_name -> Ydb.Table.GlobalUniqueIndex
	18,  // 7: Ydb.Table.TableIndexDescription.global_index:type_name -> Ydb.Table.GlobalIndex
	19,  // 8: Ydb.Table.TableIndexDescription.global_async_index:type_name -> Ydb.Table.GlobalAsyncIndex
	20,  // 9: Ydb.Table.TableIndexDescription.global_unique_index:type_name -> Ydb.Table.GlobalUniqueIndex
	1,   // 10: Ydb.Table.TableIndexDescription.status:type_name -> Ydb.Table.TableIndexDescription.Status
	21,  // 11: Ydb.Table.IndexBuildDescription.index:type_name -> Ydb.Table.TableIndex
	24,  // 12: Ydb.Table.IndexBuildMetadata.description:type_name -> Ydb.Table.IndexBuildDescription
	2,   // 13: Ydb.Table.IndexBuildMetadata.state:type_name -> Ydb.Table.IndexBuildState.State
	3,   // 14: Ydb.Table.Changefeed.mode:type_name -> Ydb.Table.ChangefeedMode.Mode
	4,   // 15: Ydb.Table.Changefeed.format:type_name -> Ydb.Table.ChangefeedFormat.Format
	145, // 16: Ydb.Table.Changefeed.retention_period:type_name -> google.protobuf.Duration
	126, // 17: Ydb.Table.Changefeed.attributes:type_name -> Ydb.Table.Changefeed.AttributesEntry
	145, // 18: Ydb.Table.Changefeed.resolved_timestamps_interval:type_name -> google.protobuf.Duration
	146, // 19: Ydb.Table.Changefeed.topic_partitioning_settings:type_name -> Ydb.Topic.PartitioningSettings
	3,   // 20: Ydb.Table.ChangefeedDescription.mode:type_name -> Ydb.Table.ChangefeedMode.Mode
	4,   // 21: Ydb.Table.ChangefeedDescription.format:type_name -> Ydb.Table.ChangefeedFormat.Format
	5,   // 22: Ydb.Table.ChangefeedDescription.state:type_name -> Ydb.Table.ChangefeedDescription.State
	127, // 23: Ydb.Table.ChangefeedDescription.attributes:type_name -> Ydb.Table.ChangefeedDescription.AttributesEntry
	145, // 24: Ydb.Table.ChangefeedDescription.resolved_timestamps_interval:type_name -> google.protobuf.Duration
	30,  // 25: Ydb.Table.StoragePolicy.syslog:type_name -> Ydb.Table.StoragePool
	30,  // 26: Ydb.Table.StoragePolicy.log:type_name -> Ydb.Table.StoragePool
	30,  // 27: Ydb.Table.StoragePolicy.data:type_name -> Ydb.Table.StoragePool
	30,  // 28: Ydb.Table.StoragePolicy.external:type_name -> Ydb.Table.StoragePool
	147, // 29: Ydb.Table.StoragePolicy.keep_in_memory:type_name -> Ydb.FeatureFlag.Status
	32,  // 30: Ydb.Table.StoragePolicy.column_families:type_name -> Ydb.Table.ColumnFamilyPolicy
	30,  // 31: Ydb.Table.ColumnFamilyPolicy.data:type_name -> Ydb.Table.StoragePool
	30,  // 32: Ydb.Table.ColumnFamilyPolicy.external:type_name -> Ydb.Table.StoragePool
	147, // 33: Ydb.Table.ColumnFamilyPolicy.keep_in_memory:type_name -> Ydb.FeatureFlag.Status
	6,   // 34: Ydb.Table.ColumnFamilyPolicy.compression:type_name -> Ydb.Table.ColumnFamilyPolicy.Compression
	148, // 35: Ydb.Table.ExplicitPartitions.split_points:type_name -> Ydb.TypedValue
	35,  // 36: Ydb.Table.TableStats.partition_stats:type_name -> Ydb.Table.PartitionStats
	149, // 37: Ydb.Table.TableStats.creation_time:type_name -> google.protobuf.Timestamp
	149, // 38: Ydb.Table.TableStats.modification_time:type_name -> google.protobuf.Timestamp
	7,   // 39: Ydb.Table.PartitioningPolicy.auto_partitioning:type_name -> Ydb.Table.PartitioningPolicy.AutoPartitioningPolicy
	34,  // 40: Ydb.Table.PartitioningPolicy.explicit_partitions:type_name -> Ydb.Table.ExplicitPartitions
	147, // 41: Ydb.Table.ReplicationPolicy.create_per_availability_zone:type_name -> Ydb.FeatureFlag.Status
	147, // 42: Ydb.Table.ReplicationPolicy.allow_promotion:type_name -> Ydb.FeatureFlag.Status
	31,  // 43: Ydb.Table.TableProfile.storage_policy:type_name -> Ydb.Table.StoragePolicy
	33,  // 44: Ydb.Table.TableProfile.compaction_policy:type_name -> Ydb.Table.CompactionPolicy
	37,  // 45: Ydb.Table.TableProfile.partitioning_policy:type_name -> Ydb.Table.PartitioningPolicy
	38,  // 46: Ydb.Table.TableProfile.execution_policy:type_name -> Ydb.Table.ExecutionPolicy
	39,  // 47: Ydb.Table.TableProfile.replication_policy:type_name -> Ydb.Table.ReplicationPolicy
	40,  // 48: Ydb.Table.TableProfile.caching_policy:type_name -> Ydb.Table.CachingPolicy
	128, // 49: Ydb.Table.SequenceDescription.set_val:type_name -> Ydb.Table.SequenceDescription.SetVal
	150, // 50: Ydb.Table.ColumnMeta.type:type_name -> Ydb.Type
	148, // 51: Ydb.Table.ColumnMeta.from_literal:type_name -> Ydb.TypedValue
	42,  // 52: Ydb.Table.ColumnMeta.from_sequence:type_name -> Ydb.Table.SequenceDescription
	8,   // 53: Ydb.Table.ValueSinceUnixEpochModeSettings.column_unit:type_name -> Ydb.Table.ValueSinceUnixEpochModeSettings.Unit
	44,  // 54: Ydb.Table.TtlSettings.date_type_column:type_name -> Ydb.Table.DateTypeColumnModeSettings
	45,  // 55: Ydb.Table.TtlSettings.value_since_unix_epoch:type_name -> Ydb.Table.ValueSinceUnixEpochModeSettings
	30,  // 56: Ydb.Table.StorageSettings.tablet_commit_log0:type_name -> Ydb.Table.StoragePool
	30,  // 57: Ydb.Table.StorageSettings.tablet_commit_log1:type_name -> Ydb.Table.StoragePool
	30,  // 58: Ydb.Table.StorageSettings.external:type_name -> Ydb.Table.StoragePool
	147, // 59: Ydb.Table.StorageSettings.store_external_blobs:type_name -> Ydb.FeatureFlag.Status
	30,  // 60: Ydb.Table.ColumnFamily.data:type_name -> Ydb.Table.StoragePool
	9,   // 61: Ydb.Table.ColumnFamily.compression:type_name -> Ydb.Table.ColumnFamily.Compression
	147, // 62: Ydb.Table.ColumnFamily.keep_in_memory:type_name -> Ydb.FeatureFlag.Status
	147, // 63: Ydb.Table.PartitioningSettings.partitioning_by_size:type_name -> Ydb.FeatureFlag.Status
	147, // 64: Ydb.Table.PartitioningSettings.partitioning_by_load:type_name -> Ydb.FeatureFlag.Status
	50,  // 65: Ydb.Table.ClusterReplicasSettings.az_read_replicas_settings:type_name -> Ydb.Table.AzReadReplicasSettings
	43,  // 66: Ydb.Table.CreateTableRequest.columns:type_name -> Ydb.Table.ColumnMeta
	41,  // 67: Ydb.Table.CreateTableRequest.profile:type_name -> Ydb.Table.TableProfile
	143, // 68: Ydb.Table.CreateTableRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	21,  // 69: Ydb.Table.CreateTableRequest.indexes:type_name -> Ydb.Table.TableIndex
	46,  // 70: Ydb.Table.CreateTableRequest.ttl_settings:type_name -> Ydb.Table.TtlSettings
	47,  // 71: Ydb.Table.CreateTableRequest.storage_settings:type_name -> Ydb.Table.StorageSettings
	48,  // 72: Ydb.Table.CreateTableRequest.column_families:type_name -> Ydb.Table.ColumnFamily
	129, // 73: Ydb.Table.CreateTableRequest.attributes:type_name -> Ydb.Table.CreateTableRequest.AttributesEntry
	34,  // 74: Ydb.Table.CreateTableRequest.partition_at_keys:type_name -> Ydb.Table.ExplicitPartitions
	49,  // 75: Ydb.Table.CreateTableRequest.partitioning_settings:type_name -> Ydb.Table.PartitioningSettings
	147, // 76: Ydb.Table.CreateTableRequest.key_bloom_filter:type_name -> Ydb.FeatureFlag.Status
	52,  // 77: Ydb.Table.CreateTableRequest.read_replicas_settings:type_name -> Ydb.Table.ReadReplicasSettings
	0,   // 78: Ydb.Table.CreateTableRequest.store_type:type_name -> Ydb.Table.StoreType
	144, // 79: Ydb.Table.CreateTableResponse.operation:type_name -> Ydb.Operations.Operation
	143, // 80: Ydb.Table.DropTableRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	144, // 81: Ydb.Table.DropTableResponse.operation:type_name -> Ydb.Operations.Operation
	43,  // 82: Ydb.Table.AlterTableRequest.add_columns:type_name -> Ydb.Table.ColumnMeta
	143, // 83: Ydb.Table.AlterTableRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	43,  // 84: Ydb.Table.AlterTableRequest.alter_columns:type_name -> Ydb.Table.ColumnMeta
	46,  // 85: Ydb.Table.AlterTableRequest.set_ttl_settings:type_name -> Ydb.Table.TtlSettings
	151, // 86: Ydb.Table.AlterTableRequest.drop_ttl_settings:type_name -> google.protobuf.Empty
	21,  // 87: Ydb.Table.AlterTableRequest.add_indexes:type_name -> Ydb.Table.TableIndex
	47,  // 88: Ydb.Table.AlterTableRequest.alter_storage_settings:type_name -> Ydb.Table.StorageSettings
	48,  // 89: Ydb.Table.AlterTableRequest.add_column_families:type_name -> Ydb.Table.ColumnFamily
	48,  // 90: Ydb.Table.AlterTableRequest.alter_column_families:type_name -> Ydb.Table.ColumnFamily
	130, // 91: Ydb.Table.AlterTableRequest.alter_attributes:type_name -> Ydb.Table.AlterTableRequest.AlterAttributesEntry
	49,  // 92: Ydb.Table.AlterTableRequest.alter_partitioning_settings:type_name -> Ydb.Table.PartitioningSettings
	147, // 93: Ydb.Table.AlterTableRequest.set_key_bloom_filter:type_name -> Ydb.FeatureFlag.Status
	52,  // 94: Ydb.Table.AlterTableRequest.set_read_replicas_settings:type_name -> Ydb.Table.ReadReplicasSettings
	28,  // 95: Ydb.Table.AlterTableRequest.add_changefeeds:type_name -> Ydb.Table.Changefeed
	57,  // 96: Ydb.Table.AlterTableRequest.rename_indexes:type_name -> Ydb.Table.RenameIndexItem
	151, // 97: Ydb.Table.AlterTableRequest.drop_tiering:type_name -> google.protobuf.Empty
	144, // 98: Ydb.Table.AlterTableResponse.operation:type_name -> Ydb.Operations.Operation
	143, // 99: Ydb.Table.CopyTableRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	144, // 100: Ydb.Table.CopyTableResponse.operation:type_name -> Ydb.Operations.Operation
	143, // 101: Ydb.Table.CopyTablesRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	62,  // 102: Ydb.Table.CopyTablesRequest.tables:type_name -> Ydb.Table.CopyTableItem
	144, // 103: Ydb.Table.CopyTablesResponse.operation:type_name -> Ydb.Operations.Operation
	143, // 104: Ydb.Table.RenameTablesRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	65,  // 105: Ydb.Table.RenameTablesRequest.tables:type_name -> Ydb.Table.RenameTableItem
	144, // 106: Ydb.Table.RenameTablesResponse.operation:type_name -> Ydb.Operations.Operation
	143, // 107: Ydb.Table.DescribeTableRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	144, // 108: Ydb.Table.DescribeTableResponse.operation:type_name -> Ydb.Operations.Operation
	152, // 109: Ydb.Table.DescribeTableResult.self:type_name -> Ydb.Scheme.Entry
	43,  // 110: Ydb.Table.DescribeTableResult.columns:type_name -> Ydb.Table.ColumnMeta
	148, // 111: Ydb.Table.DescribeTableResult.shard_key_bounds:type_name -> Ydb.TypedValue
	22,  // 112: Ydb.Table.DescribeTableResult.indexes:type_name -> Ydb.Table.TableIndexDescription
	36,  // 113: Ydb.Table.DescribeTableResult.table_stats:type_name -> Ydb.Table.TableStats
	46,  // 114: Ydb.Table.DescribeTableResult.ttl_settings:type_name -> Ydb.Table.TtlSettings
	47,  // 115: Ydb.Table.DescribeTableResult.storage_settings:type_name -> Ydb.Table.StorageSettings
	48,  // 116: Ydb.Table.DescribeTableResult.column_families:type_name -> Ydb.Table.ColumnFamily
	131, // 117: Ydb.Table.DescribeTableResult.attributes:type_name -> Ydb.Table.DescribeTableResult.AttributesEntry
	49,  // 118: Ydb.Table.DescribeTableResult.partitioning_settings:type_name -> Ydb.Table.PartitioningSettings
	147, // 119: Ydb.Table.DescribeTableResult.key_bloom_filter:type_name -> Ydb.FeatureFlag.Status
	52,  // 120: Ydb.Table.DescribeTableResult.read_replicas_settings:type_name -> Ydb.Table.ReadReplicasSettings
	29,  // 121: Ydb.Table.DescribeTableResult.changefeeds:type_name -> Ydb.Table.ChangefeedDescription
	0,   // 122: Ydb.Table.DescribeTableResult.store_type:type_name -> Ydb.Table.StoreType
	72,  // 123: Ydb.Table.TransactionSettings.serializable_read_write:type_name -> Ydb.Table.SerializableModeSettings
	73,  // 124: Ydb.Table.TransactionSettings.online_read_only:type_name -> Ydb.Table.OnlineModeSettings
	74,  // 125: Ydb.Table.TransactionSettings.stale_read_only:type_name -> Ydb.Table.StaleModeSettings
	75,  // 126: Ydb.Table.TransactionSettings.snapshot_read_only:type_name -> Ydb.Table.SnapshotModeSettings
	76,  // 127: Ydb.Table.TransactionControl.begin_tx:type_name -> Ydb.Table.TransactionSettings
	77,  // 128: Ydb.Table.ExecuteDataQueryRequest.tx_control:type_name -> Ydb.Table.TransactionControl
	71,  // 129: Ydb.Table.ExecuteDataQueryRequest.query:type_name -> Ydb.Table.Query
	132, // 130: Ydb.Table.ExecuteDataQueryRequest.parameters:type_name -> Ydb.Table.ExecuteDataQueryRequest.ParametersEntry
	78,  // 131: Ydb.Table.ExecuteDataQueryRequest.query_cache_policy:type_name -> Ydb.Table.QueryCachePolicy
	143, // 132: Ydb.Table.ExecuteDataQueryRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	10,  // 133: Ydb.Table.ExecuteDataQueryRequest.collect_stats:type_name -> Ydb.Table.QueryStatsCollection.Mode
	144, // 134: Ydb.Table.ExecuteDataQueryResponse.operation:type_name -> Ydb.Operations.Operation
	143, // 135: Ydb.Table.ExecuteSchemeQueryRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	144, // 136: Ydb.Table.ExecuteSchemeQueryResponse.operation:type_name -> Ydb.Operations.Operation
	133, // 137: Ydb.Table.QueryMeta.parameters_types:type_name -> Ydb.Table.QueryMeta.ParametersTypesEntry
	153, // 138: Ydb.Table.ExecuteQueryResult.result_sets:type_name -> Ydb.ResultSet
	84,  // 139: Ydb.Table.ExecuteQueryResult.tx_meta:type_name -> Ydb.Table.TransactionMeta
	85,  // 140: Ydb.Table.ExecuteQueryResult.query_meta:type_name -> Ydb.Table.QueryMeta
	154, // 141: Ydb.Table.ExecuteQueryResult.query_stats:type_name -> Ydb.TableStats.QueryStats
	143, // 142: Ydb.Table.ExplainDataQueryRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	144, // 143: Ydb.Table.ExplainDataQueryResponse.operation:type_name -> Ydb.Operations.Operation
	143, // 144: Ydb.Table.PrepareDataQueryRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	144, // 145: Ydb.Table.PrepareDataQueryResponse.operation:type_name -> Ydb.Operations.Operation
	134, // 146: Ydb.Table.PrepareQueryResult.parameters_types:type_name -> Ydb.Table.PrepareQueryResult.ParametersTypesEntry
	143, // 147: Ydb.Table.KeepAliveRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	144, // 148: Ydb.Table.KeepAliveResponse.operation:type_name -> Ydb.Operations.Operation
	11,  // 149: Ydb.Table.KeepAliveResult.session_status:type_name -> Ydb.Table.KeepAliveResult.SessionStatus
	76,  // 150: Ydb.Table.BeginTransactionRequest.tx_settings:type_name -> Ydb.Table.TransactionSettings
	143, // 151: Ydb.Table.BeginTransactionRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	144, // 152: Ydb.Table.BeginTransactionResponse.operation:type_name -> Ydb.Operations.Operation
	84,  // 153: Ydb.Table.BeginTransactionResult.tx_meta:type_name -> Ydb.Table.TransactionMeta
	143, // 154: Ydb.Table.CommitTransactionRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	10,  // 155: Ydb.Table.CommitTransactionRequest.collect_stats:type_name -> Ydb.Table.QueryStatsCollection.Mode
	144, // 156: Ydb.Table.CommitTransactionResponse.operation:type_name -> Ydb.Operations.Operation
	154, // 157: Ydb.Table.CommitTransactionResult.query_stats:type_name -> Ydb.TableStats.QueryStats
	143, // 158: Ydb.Table.RollbackTransactionRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	144, // 159: Ydb.Table.RollbackTransactionResponse.operation:type_name -> Ydb.Operations.Operation
	135, // 160: Ydb.Table.StoragePolicyDescription.labels:type_name -> Ydb.Table.StoragePolicyDescription.LabelsEntry
	136, // 161: Ydb.Table.CompactionPolicyDescription.labels:type_name -> Ydb.Table.CompactionPolicyDescription.LabelsEntry
	137, // 162: Ydb.Table.PartitioningPolicyDescription.labels:type_name -> Ydb.Table.PartitioningPolicyDescription.LabelsEntry
	138, // 163: Ydb.Table.ExecutionPolicyDescription.labels:type_name -> Ydb.Table.ExecutionPolicyDescription.LabelsEntry
	139, // 164: Ydb.Table.ReplicationPolicyDescription.labels:type_name -> Ydb.Table.ReplicationPolicyDescription.LabelsEntry
	140, // 165: Ydb.Table.CachingPolicyDescription.labels:type_name -> Ydb.Table.CachingPolicyDescription.LabelsEntry
	141, // 166: Ydb.Table.TableProfileDescription.labels:type_name -> Ydb.Table.TableProfileDescription.LabelsEntry
	143, // 167: Ydb.Table.DescribeTableOptionsRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	144, // 168: Ydb.Table.DescribeTableOptionsResponse.operation:type_name -> Ydb.Operations.Operation
	110, // 169: Ydb.Table.DescribeTableOptionsResult.table_profile_presets:type_name -> Ydb.Table.TableProfileDescription
	104, // 170: Ydb.Table.DescribeTableOptionsResult.storage_policy_presets:type_name -> Ydb.Table.StoragePolicyDescription
	105, // 171: Ydb.Table.DescribeTableOptionsResult.compaction_policy_presets:type_name -> Ydb.Table.CompactionPolicyDescription
	106, // 172: Ydb.Table.DescribeTableOptionsResult.partitioning_policy_presets:type_name -> Ydb.Table.PartitioningPolicyDescription
	107, // 173: Ydb.Table.DescribeTableOptionsResult.execution_policy_presets:type_name -> Ydb.Table.ExecutionPolicyDescription
	108, // 174: Ydb.Table.DescribeTableOptionsResult.replication_policy_presets:type_name -> Ydb.Table.ReplicationPolicyDescription
	109, // 175: Ydb.Table.DescribeTableOptionsResult.caching_policy_presets:type_name -> Ydb.Table.CachingPolicyDescription
	148, // 176: Ydb.Table.KeyRange.greater:type_name -> Ydb.TypedValue
	148, // 177: Ydb.Table.KeyRange.greater_or_equal:type_name -> Ydb.TypedValue
	148, // 178: Ydb.Table.KeyRange.less:type_name -> Ydb.TypedValue
	148, // 179: Ydb.Table.KeyRange.less_or_equal:type_name -> Ydb.TypedValue
	114, // 180: Ydb.Table.ReadTableRequest.key_range:type_name -> Ydb.Table.KeyRange
	147, // 181: Ydb.Table.ReadTableRequest.use_snapshot:type_name -> Ydb.FeatureFlag.Status
	147, // 182: Ydb.Table.ReadTableRequest.return_not_null_data_as_optional:type_name -> Ydb.FeatureFlag.Status
	155, // 183: Ydb.Table.ReadTableResponse.status:type_name -> Ydb.StatusIds.StatusCode
	156, // 184: Ydb.Table.ReadTableResponse.issues:type_name -> Ydb.Issue.IssueMessage
	157, // 185: Ydb.Table.ReadTableResponse.snapshot:type_name -> Ydb.VirtualTimestamp
	117, // 186: Ydb.Table.ReadTableResponse.result:type_name -> Ydb.Table.ReadTableResult
	153, // 187: Ydb.Table.ReadTableResult.result_set:type_name -> Ydb.ResultSet
	148, // 188: Ydb.Table.ReadRowsRequest.keys:type_name -> Ydb.TypedValue
	155, // 189: Ydb.Table.ReadRowsResponse.status:type_name -> Ydb.StatusIds.StatusCode
	156, // 190: Ydb.Table.ReadRowsResponse.issues:type_name -> Ydb.Issue.IssueMessage
	153, // 191: Ydb.Table.ReadRowsResponse.result_set:type_name -> Ydb.ResultSet
	148, // 192: Ydb.Table.BulkUpsertRequest.rows:type_name -> Ydb.TypedValue
	143, // 193: Ydb.Table.BulkUpsertRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	158, // 194: Ydb.Table.BulkUpsertRequest.arrow_batch_settings:type_name -> Ydb.Formats.ArrowBatchSettings
	159, // 195: Ydb.Table.BulkUpsertRequest.csv_settings:type_name -> Ydb.Formats.CsvSettings
	144, // 196: Ydb.Table.BulkUpsertResponse.operation:type_name -> Ydb.Operations.Operation
	71,  // 197: Ydb.Table.ExecuteScanQueryRequest.query:type_name -> Ydb.Table.Query
	142, // 198: Ydb.Table.ExecuteScanQueryRequest.parameters:type_name -> Ydb.Table.ExecuteScanQueryRequest.ParametersEntry
	12,  // 199: Ydb.Table.ExecuteScanQueryRequest.mode:type_name -> Ydb.Table.ExecuteScanQueryRequest.Mode
	10,  // 200: Ydb.Table.ExecuteScanQueryRequest.collect_stats:type_name -> Ydb.Table.QueryStatsCollection.Mode
	155, // 201: Ydb.Table.ExecuteScanQueryPartialResponse.status:type_name -> Ydb.StatusIds.StatusCode
	156, // 202: Ydb.Table.ExecuteScanQueryPartialResponse.issues:type_name -> Ydb.Issue.IssueMessage
	125, // 203: Ydb.Table.ExecuteScanQueryPartialResponse.result:type_name -> Ydb.Table.ExecuteScanQueryPartialResult
	153, // 204: Ydb.Table.ExecuteScanQueryPartialResult.result_set:type_name -> Ydb.ResultSet
	154, // 205: Ydb.Table.ExecuteScanQueryPartialResult.query_stats:type_name -> Ydb.TableStats.QueryStats
	148, // 206: Ydb.Table.ExecuteDataQueryRequest.ParametersEntry.value:type_name -> Ydb.TypedValue
	150, // 207: Ydb.Table.QueryMeta.ParametersTypesEntry.value:type_name -> Ydb.Type
	150, // 208: Ydb.Table.PrepareQueryResult.ParametersTypesEntry.value:type_name -> Ydb.Type
	148, // 209: Ydb.Table.ExecuteScanQueryRequest.ParametersEntry.value:type_name -> Ydb.TypedValue
	210, // [210:210] is the sub-list for method output_type
	210, // [210:210] is the sub-list for method input_type
	210, // [210:210] is the sub-list for extension type_name
	210, // [210:210] is the sub-list for extension extendee
	0,   // [0:210] is the sub-list for field type_name
}

func init() { file_protos_ydb_table_proto_init() }
func file_protos_ydb_table_proto_init() {
	if File_protos_ydb_table_proto != nil {
		return
	}
	file_protos_ydb_table_proto_msgTypes[8].OneofWrappers = []any{
		(*tableIndex_GlobalIndex)(nil),
		(*tableIndex_GlobalAsyncIndex)(nil),
		(*tableIndex_GlobalUniqueIndex)(nil),
	}
	file_protos_ydb_table_proto_msgTypes[9].OneofWrappers = []any{
		(*tableIndexDescription_GlobalIndex)(nil),
		(*tableIndexDescription_GlobalAsyncIndex)(nil),
		(*tableIndexDescription_GlobalUniqueIndex)(nil),
	}
	file_protos_ydb_table_proto_msgTypes[24].OneofWrappers = []any{
		(*partitioningPolicy_UniformPartitions)(nil),
		(*partitioningPolicy_ExplicitPartitions)(nil),
	}
	file_protos_ydb_table_proto_msgTypes[29].OneofWrappers = []any{}
	file_protos_ydb_table_proto_msgTypes[30].OneofWrappers = []any{
		(*columnMeta_FromLiteral)(nil),
		(*columnMeta_FromSequence)(nil),
	}
	file_protos_ydb_table_proto_msgTypes[33].OneofWrappers = []any{
		(*ttlSettings_DateTypeColumn)(nil),
		(*ttlSettings_ValueSinceUnixEpoch)(nil),
	}
	file_protos_ydb_table_proto_msgTypes[39].OneofWrappers = []any{
		(*readReplicasSettings_PerAzReadReplicasCount)(nil),
		(*readReplicasSettings_AnyAzReadReplicasCount)(nil),
	}
	file_protos_ydb_table_proto_msgTypes[40].OneofWrappers = []any{
		(*createTableRequest_UniformPartitions)(nil),
		(*createTableRequest_PartitionAtKeys)(nil),
	}
	file_protos_ydb_table_proto_msgTypes[45].OneofWrappers = []any{
		(*alterTableRequest_SetTtlSettings)(nil),
		(*alterTableRequest_DropTtlSettings)(nil),
		(*alterTableRequest_SetTiering)(nil),
		(*alterTableRequest_DropTiering)(nil),
	}
	file_protos_ydb_table_proto_msgTypes[58].OneofWrappers = []any{
		(*query_YqlText)(nil),
		(*query_Id)(nil),
	}
	file_protos_ydb_table_proto_msgTypes[63].OneofWrappers = []any{
		(*transactionSettings_SerializableReadWrite)(nil),
		(*transactionSettings_OnlineReadOnly)(nil),
		(*transactionSettings_StaleReadOnly)(nil),
		(*transactionSettings_SnapshotReadOnly)(nil),
	}
	file_protos_ydb_table_proto_msgTypes[64].OneofWrappers = []any{
		(*transactionControl_TxId)(nil),
		(*transactionControl_BeginTx)(nil),
	}
	file_protos_ydb_table_proto_msgTypes[101].OneofWrappers = []any{
		(*keyRange_Greater)(nil),
		(*keyRange_GreaterOrEqual)(nil),
		(*keyRange_Less)(nil),
		(*keyRange_LessOrEqual)(nil),
	}
	file_protos_ydb_table_proto_msgTypes[107].OneofWrappers = []any{
		(*bulkUpsertRequest_ArrowBatchSettings)(nil),
		(*bulkUpsertRequest_CsvSettings)(nil),
	}
	file_protos_ydb_table_proto_msgTypes[115].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_ydb_table_proto_rawDesc), len(file_protos_ydb_table_proto_rawDesc)),
			NumEnums:      13,
			NumMessages:   130,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_ydb_table_proto_goTypes,
		DependencyIndexes: file_protos_ydb_table_proto_depIdxs,
		EnumInfos:         file_protos_ydb_table_proto_enumTypes,
		MessageInfos:      file_protos_ydb_table_proto_msgTypes,
	}.Build()
	File_protos_ydb_table_proto = out.File
	file_protos_ydb_table_proto_goTypes = nil
	file_protos_ydb_table_proto_depIdxs = nil
}
