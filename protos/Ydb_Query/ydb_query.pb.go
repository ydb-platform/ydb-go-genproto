// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: protos/ydb_query.proto

//go:build !protoopaque

package Ydb_Query

import (
	Ydb "github.com/ydb-platform/ydb-go-genproto/protos/Ydb"
	Ydb_Issue "github.com/ydb-platform/ydb-go-genproto/protos/Ydb_Issue"
	Ydb_Operations "github.com/ydb-platform/ydb-go-genproto/protos/Ydb_Operations"
	Ydb_TableStats "github.com/ydb-platform/ydb-go-genproto/protos/Ydb_TableStats"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Syntax int32

const (
	Syntax_SYNTAX_UNSPECIFIED Syntax = 0
	Syntax_SYNTAX_YQL_V1      Syntax = 1 // YQL
	Syntax_SYNTAX_PG          Syntax = 2 // PostgresQL
)

// Enum value maps for Syntax.
var (
	Syntax_name = map[int32]string{
		0: "SYNTAX_UNSPECIFIED",
		1: "SYNTAX_YQL_V1",
		2: "SYNTAX_PG",
	}
	Syntax_value = map[string]int32{
		"SYNTAX_UNSPECIFIED": 0,
		"SYNTAX_YQL_V1":      1,
		"SYNTAX_PG":          2,
	}
)

func (x Syntax) Enum() *Syntax {
	p := new(Syntax)
	*p = x
	return p
}

func (x Syntax) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Syntax) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_query_proto_enumTypes[0].Descriptor()
}

func (Syntax) Type() protoreflect.EnumType {
	return &file_protos_ydb_query_proto_enumTypes[0]
}

func (x Syntax) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ExecMode int32

const (
	ExecMode_EXEC_MODE_UNSPECIFIED ExecMode = 0
	ExecMode_EXEC_MODE_PARSE       ExecMode = 10
	ExecMode_EXEC_MODE_VALIDATE    ExecMode = 20
	ExecMode_EXEC_MODE_EXPLAIN     ExecMode = 30
	ExecMode_EXEC_MODE_EXECUTE     ExecMode = 50
)

// Enum value maps for ExecMode.
var (
	ExecMode_name = map[int32]string{
		0:  "EXEC_MODE_UNSPECIFIED",
		10: "EXEC_MODE_PARSE",
		20: "EXEC_MODE_VALIDATE",
		30: "EXEC_MODE_EXPLAIN",
		50: "EXEC_MODE_EXECUTE",
	}
	ExecMode_value = map[string]int32{
		"EXEC_MODE_UNSPECIFIED": 0,
		"EXEC_MODE_PARSE":       10,
		"EXEC_MODE_VALIDATE":    20,
		"EXEC_MODE_EXPLAIN":     30,
		"EXEC_MODE_EXECUTE":     50,
	}
)

func (x ExecMode) Enum() *ExecMode {
	p := new(ExecMode)
	*p = x
	return p
}

func (x ExecMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecMode) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_query_proto_enumTypes[1].Descriptor()
}

func (ExecMode) Type() protoreflect.EnumType {
	return &file_protos_ydb_query_proto_enumTypes[1]
}

func (x ExecMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type StatsMode int32

const (
	StatsMode_STATS_MODE_UNSPECIFIED StatsMode = 0
	StatsMode_STATS_MODE_NONE        StatsMode = 10 // Stats collection is disabled
	StatsMode_STATS_MODE_BASIC       StatsMode = 20 // Aggregated stats of reads, updates and deletes per table
	StatsMode_STATS_MODE_FULL        StatsMode = 30 // Add execution stats and plan on top of STATS_MODE_BASIC
	StatsMode_STATS_MODE_PROFILE     StatsMode = 40 // Detailed execution stats including stats for individual tasks and channels
)

// Enum value maps for StatsMode.
var (
	StatsMode_name = map[int32]string{
		0:  "STATS_MODE_UNSPECIFIED",
		10: "STATS_MODE_NONE",
		20: "STATS_MODE_BASIC",
		30: "STATS_MODE_FULL",
		40: "STATS_MODE_PROFILE",
	}
	StatsMode_value = map[string]int32{
		"STATS_MODE_UNSPECIFIED": 0,
		"STATS_MODE_NONE":        10,
		"STATS_MODE_BASIC":       20,
		"STATS_MODE_FULL":        30,
		"STATS_MODE_PROFILE":     40,
	}
)

func (x StatsMode) Enum() *StatsMode {
	p := new(StatsMode)
	*p = x
	return p
}

func (x StatsMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatsMode) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_query_proto_enumTypes[2].Descriptor()
}

func (StatsMode) Type() protoreflect.EnumType {
	return &file_protos_ydb_query_proto_enumTypes[2]
}

func (x StatsMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ExecStatus int32

const (
	ExecStatus_EXEC_STATUS_UNSPECIFIED ExecStatus = 0
	ExecStatus_EXEC_STATUS_STARTING    ExecStatus = 10
	ExecStatus_EXEC_STATUS_ABORTED     ExecStatus = 20
	ExecStatus_EXEC_STATUS_CANCELLED   ExecStatus = 30
	ExecStatus_EXEC_STATUS_COMPLETED   ExecStatus = 40
	ExecStatus_EXEC_STATUS_FAILED      ExecStatus = 50
)

// Enum value maps for ExecStatus.
var (
	ExecStatus_name = map[int32]string{
		0:  "EXEC_STATUS_UNSPECIFIED",
		10: "EXEC_STATUS_STARTING",
		20: "EXEC_STATUS_ABORTED",
		30: "EXEC_STATUS_CANCELLED",
		40: "EXEC_STATUS_COMPLETED",
		50: "EXEC_STATUS_FAILED",
	}
	ExecStatus_value = map[string]int32{
		"EXEC_STATUS_UNSPECIFIED": 0,
		"EXEC_STATUS_STARTING":    10,
		"EXEC_STATUS_ABORTED":     20,
		"EXEC_STATUS_CANCELLED":   30,
		"EXEC_STATUS_COMPLETED":   40,
		"EXEC_STATUS_FAILED":      50,
	}
)

func (x ExecStatus) Enum() *ExecStatus {
	p := new(ExecStatus)
	*p = x
	return p
}

func (x ExecStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_ydb_query_proto_enumTypes[3].Descriptor()
}

func (ExecStatus) Type() protoreflect.EnumType {
	return &file_protos_ydb_query_proto_enumTypes[3]
}

func (x ExecStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type CreateSessionRequest struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	mi := &file_protos_ydb_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type CreateSessionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 CreateSessionRequest_builder) Build() *CreateSessionRequest {
	m0 := &CreateSessionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type CreateSessionResponse struct {
	state  protoimpl.MessageState    `protogen:"hybrid.v1"`
	Status *Ydb.StatusIds_StatusCode `protobuf:"varint,1,opt,name=status,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues" json:"issues,omitempty"`
	// Identifier of created session
	SessionId *string `protobuf:"bytes,3,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	// Identifier node where session was created
	NodeId        *int64 `protobuf:"varint,4,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionResponse) Reset() {
	*x = CreateSessionResponse{}
	mi := &file_protos_ydb_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResponse) ProtoMessage() {}

func (x *CreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateSessionResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *CreateSessionResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *CreateSessionResponse) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *CreateSessionResponse) GetNodeId() int64 {
	if x != nil && x.NodeId != nil {
		return *x.NodeId
	}
	return 0
}

func (x *CreateSessionResponse) SetStatus(v Ydb.StatusIds_StatusCode) {
	x.Status = &v
}

func (x *CreateSessionResponse) SetIssues(v []*Ydb_Issue.IssueMessage) {
	x.Issues = v
}

func (x *CreateSessionResponse) SetSessionId(v string) {
	x.SessionId = &v
}

func (x *CreateSessionResponse) SetNodeId(v int64) {
	x.NodeId = &v
}

func (x *CreateSessionResponse) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *CreateSessionResponse) HasSessionId() bool {
	if x == nil {
		return false
	}
	return x.SessionId != nil
}

func (x *CreateSessionResponse) HasNodeId() bool {
	if x == nil {
		return false
	}
	return x.NodeId != nil
}

func (x *CreateSessionResponse) ClearStatus() {
	x.Status = nil
}

func (x *CreateSessionResponse) ClearSessionId() {
	x.SessionId = nil
}

func (x *CreateSessionResponse) ClearNodeId() {
	x.NodeId = nil
}

type CreateSessionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status *Ydb.StatusIds_StatusCode
	Issues []*Ydb_Issue.IssueMessage
	// Identifier of created session
	SessionId *string
	// Identifier node where session was created
	NodeId *int64
}

func (b0 CreateSessionResponse_builder) Build() *CreateSessionResponse {
	m0 := &CreateSessionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Status = b.Status
	x.Issues = b.Issues
	x.SessionId = b.SessionId
	x.NodeId = b.NodeId
	return m0
}

type DeleteSessionRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Identifier of session to delete (required)
	SessionId     *string `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSessionRequest) Reset() {
	*x = DeleteSessionRequest{}
	mi := &file_protos_ydb_query_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionRequest) ProtoMessage() {}

func (x *DeleteSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteSessionRequest) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *DeleteSessionRequest) SetSessionId(v string) {
	x.SessionId = &v
}

func (x *DeleteSessionRequest) HasSessionId() bool {
	if x == nil {
		return false
	}
	return x.SessionId != nil
}

func (x *DeleteSessionRequest) ClearSessionId() {
	x.SessionId = nil
}

type DeleteSessionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Identifier of session to delete (required)
	SessionId *string
}

func (b0 DeleteSessionRequest_builder) Build() *DeleteSessionRequest {
	m0 := &DeleteSessionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.SessionId = b.SessionId
	return m0
}

type DeleteSessionResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Status        *Ydb.StatusIds_StatusCode `protobuf:"varint,1,opt,name=status,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues        []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues" json:"issues,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSessionResponse) Reset() {
	*x = DeleteSessionResponse{}
	mi := &file_protos_ydb_query_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionResponse) ProtoMessage() {}

func (x *DeleteSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeleteSessionResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *DeleteSessionResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *DeleteSessionResponse) SetStatus(v Ydb.StatusIds_StatusCode) {
	x.Status = &v
}

func (x *DeleteSessionResponse) SetIssues(v []*Ydb_Issue.IssueMessage) {
	x.Issues = v
}

func (x *DeleteSessionResponse) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *DeleteSessionResponse) ClearStatus() {
	x.Status = nil
}

type DeleteSessionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status *Ydb.StatusIds_StatusCode
	Issues []*Ydb_Issue.IssueMessage
}

func (b0 DeleteSessionResponse_builder) Build() *DeleteSessionResponse {
	m0 := &DeleteSessionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Status = b.Status
	x.Issues = b.Issues
	return m0
}

type AttachSessionRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Identifier of session to attach (required)
	SessionId     *string `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachSessionRequest) Reset() {
	*x = AttachSessionRequest{}
	mi := &file_protos_ydb_query_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachSessionRequest) ProtoMessage() {}

func (x *AttachSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AttachSessionRequest) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *AttachSessionRequest) SetSessionId(v string) {
	x.SessionId = &v
}

func (x *AttachSessionRequest) HasSessionId() bool {
	if x == nil {
		return false
	}
	return x.SessionId != nil
}

func (x *AttachSessionRequest) ClearSessionId() {
	x.SessionId = nil
}

type AttachSessionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Identifier of session to attach (required)
	SessionId *string
}

func (b0 AttachSessionRequest_builder) Build() *AttachSessionRequest {
	m0 := &AttachSessionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.SessionId = b.SessionId
	return m0
}

type SessionState struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Status        *Ydb.StatusIds_StatusCode `protobuf:"varint,1,opt,name=status,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues        []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues" json:"issues,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionState) Reset() {
	*x = SessionState{}
	mi := &file_protos_ydb_query_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionState) ProtoMessage() {}

func (x *SessionState) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SessionState) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *SessionState) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *SessionState) SetStatus(v Ydb.StatusIds_StatusCode) {
	x.Status = &v
}

func (x *SessionState) SetIssues(v []*Ydb_Issue.IssueMessage) {
	x.Issues = v
}

func (x *SessionState) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *SessionState) ClearStatus() {
	x.Status = nil
}

type SessionState_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status *Ydb.StatusIds_StatusCode
	Issues []*Ydb_Issue.IssueMessage
}

func (b0 SessionState_builder) Build() *SessionState {
	m0 := &SessionState{}
	b, x := &b0, m0
	_, _ = b, x
	x.Status = b.Status
	x.Issues = b.Issues
	return m0
}

type SerializableModeSettings struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SerializableModeSettings) Reset() {
	*x = SerializableModeSettings{}
	mi := &file_protos_ydb_query_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SerializableModeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializableModeSettings) ProtoMessage() {}

func (x *SerializableModeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type SerializableModeSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 SerializableModeSettings_builder) Build() *SerializableModeSettings {
	m0 := &SerializableModeSettings{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type OnlineModeSettings struct {
	state                  protoimpl.MessageState `protogen:"hybrid.v1"`
	AllowInconsistentReads *bool                  `protobuf:"varint,1,opt,name=allow_inconsistent_reads,json=allowInconsistentReads" json:"allow_inconsistent_reads,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *OnlineModeSettings) Reset() {
	*x = OnlineModeSettings{}
	mi := &file_protos_ydb_query_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineModeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineModeSettings) ProtoMessage() {}

func (x *OnlineModeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *OnlineModeSettings) GetAllowInconsistentReads() bool {
	if x != nil && x.AllowInconsistentReads != nil {
		return *x.AllowInconsistentReads
	}
	return false
}

func (x *OnlineModeSettings) SetAllowInconsistentReads(v bool) {
	x.AllowInconsistentReads = &v
}

func (x *OnlineModeSettings) HasAllowInconsistentReads() bool {
	if x == nil {
		return false
	}
	return x.AllowInconsistentReads != nil
}

func (x *OnlineModeSettings) ClearAllowInconsistentReads() {
	x.AllowInconsistentReads = nil
}

type OnlineModeSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	AllowInconsistentReads *bool
}

func (b0 OnlineModeSettings_builder) Build() *OnlineModeSettings {
	m0 := &OnlineModeSettings{}
	b, x := &b0, m0
	_, _ = b, x
	x.AllowInconsistentReads = b.AllowInconsistentReads
	return m0
}

type StaleModeSettings struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StaleModeSettings) Reset() {
	*x = StaleModeSettings{}
	mi := &file_protos_ydb_query_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StaleModeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaleModeSettings) ProtoMessage() {}

func (x *StaleModeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type StaleModeSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 StaleModeSettings_builder) Build() *StaleModeSettings {
	m0 := &StaleModeSettings{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type SnapshotModeSettings struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotModeSettings) Reset() {
	*x = SnapshotModeSettings{}
	mi := &file_protos_ydb_query_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotModeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotModeSettings) ProtoMessage() {}

func (x *SnapshotModeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type SnapshotModeSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 SnapshotModeSettings_builder) Build() *SnapshotModeSettings {
	m0 := &SnapshotModeSettings{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type TransactionSettings struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Types that are valid to be assigned to TxMode:
	//
	//	*TransactionSettings_SerializableReadWrite
	//	*TransactionSettings_OnlineReadOnly
	//	*TransactionSettings_StaleReadOnly
	//	*TransactionSettings_SnapshotReadOnly
	TxMode        isTransactionSettings_TxMode `protobuf_oneof:"tx_mode"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionSettings) Reset() {
	*x = TransactionSettings{}
	mi := &file_protos_ydb_query_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionSettings) ProtoMessage() {}

func (x *TransactionSettings) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TransactionSettings) GetTxMode() isTransactionSettings_TxMode {
	if x != nil {
		return x.TxMode
	}
	return nil
}

func (x *TransactionSettings) GetSerializableReadWrite() *SerializableModeSettings {
	if x != nil {
		if x, ok := x.TxMode.(*TransactionSettings_SerializableReadWrite); ok {
			return x.SerializableReadWrite
		}
	}
	return nil
}

func (x *TransactionSettings) GetOnlineReadOnly() *OnlineModeSettings {
	if x != nil {
		if x, ok := x.TxMode.(*TransactionSettings_OnlineReadOnly); ok {
			return x.OnlineReadOnly
		}
	}
	return nil
}

func (x *TransactionSettings) GetStaleReadOnly() *StaleModeSettings {
	if x != nil {
		if x, ok := x.TxMode.(*TransactionSettings_StaleReadOnly); ok {
			return x.StaleReadOnly
		}
	}
	return nil
}

func (x *TransactionSettings) GetSnapshotReadOnly() *SnapshotModeSettings {
	if x != nil {
		if x, ok := x.TxMode.(*TransactionSettings_SnapshotReadOnly); ok {
			return x.SnapshotReadOnly
		}
	}
	return nil
}

func (x *TransactionSettings) SetSerializableReadWrite(v *SerializableModeSettings) {
	if v == nil {
		x.TxMode = nil
		return
	}
	x.TxMode = &TransactionSettings_SerializableReadWrite{v}
}

func (x *TransactionSettings) SetOnlineReadOnly(v *OnlineModeSettings) {
	if v == nil {
		x.TxMode = nil
		return
	}
	x.TxMode = &TransactionSettings_OnlineReadOnly{v}
}

func (x *TransactionSettings) SetStaleReadOnly(v *StaleModeSettings) {
	if v == nil {
		x.TxMode = nil
		return
	}
	x.TxMode = &TransactionSettings_StaleReadOnly{v}
}

func (x *TransactionSettings) SetSnapshotReadOnly(v *SnapshotModeSettings) {
	if v == nil {
		x.TxMode = nil
		return
	}
	x.TxMode = &TransactionSettings_SnapshotReadOnly{v}
}

func (x *TransactionSettings) HasTxMode() bool {
	if x == nil {
		return false
	}
	return x.TxMode != nil
}

func (x *TransactionSettings) HasSerializableReadWrite() bool {
	if x == nil {
		return false
	}
	_, ok := x.TxMode.(*TransactionSettings_SerializableReadWrite)
	return ok
}

func (x *TransactionSettings) HasOnlineReadOnly() bool {
	if x == nil {
		return false
	}
	_, ok := x.TxMode.(*TransactionSettings_OnlineReadOnly)
	return ok
}

func (x *TransactionSettings) HasStaleReadOnly() bool {
	if x == nil {
		return false
	}
	_, ok := x.TxMode.(*TransactionSettings_StaleReadOnly)
	return ok
}

func (x *TransactionSettings) HasSnapshotReadOnly() bool {
	if x == nil {
		return false
	}
	_, ok := x.TxMode.(*TransactionSettings_SnapshotReadOnly)
	return ok
}

func (x *TransactionSettings) ClearTxMode() {
	x.TxMode = nil
}

func (x *TransactionSettings) ClearSerializableReadWrite() {
	if _, ok := x.TxMode.(*TransactionSettings_SerializableReadWrite); ok {
		x.TxMode = nil
	}
}

func (x *TransactionSettings) ClearOnlineReadOnly() {
	if _, ok := x.TxMode.(*TransactionSettings_OnlineReadOnly); ok {
		x.TxMode = nil
	}
}

func (x *TransactionSettings) ClearStaleReadOnly() {
	if _, ok := x.TxMode.(*TransactionSettings_StaleReadOnly); ok {
		x.TxMode = nil
	}
}

func (x *TransactionSettings) ClearSnapshotReadOnly() {
	if _, ok := x.TxMode.(*TransactionSettings_SnapshotReadOnly); ok {
		x.TxMode = nil
	}
}

const TransactionSettings_TxMode_not_set_case case_TransactionSettings_TxMode = 0
const TransactionSettings_SerializableReadWrite_case case_TransactionSettings_TxMode = 1
const TransactionSettings_OnlineReadOnly_case case_TransactionSettings_TxMode = 2
const TransactionSettings_StaleReadOnly_case case_TransactionSettings_TxMode = 3
const TransactionSettings_SnapshotReadOnly_case case_TransactionSettings_TxMode = 4

func (x *TransactionSettings) WhichTxMode() case_TransactionSettings_TxMode {
	if x == nil {
		return TransactionSettings_TxMode_not_set_case
	}
	switch x.TxMode.(type) {
	case *TransactionSettings_SerializableReadWrite:
		return TransactionSettings_SerializableReadWrite_case
	case *TransactionSettings_OnlineReadOnly:
		return TransactionSettings_OnlineReadOnly_case
	case *TransactionSettings_StaleReadOnly:
		return TransactionSettings_StaleReadOnly_case
	case *TransactionSettings_SnapshotReadOnly:
		return TransactionSettings_SnapshotReadOnly_case
	default:
		return TransactionSettings_TxMode_not_set_case
	}
}

type TransactionSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof TxMode:
	SerializableReadWrite *SerializableModeSettings
	OnlineReadOnly        *OnlineModeSettings
	StaleReadOnly         *StaleModeSettings
	SnapshotReadOnly      *SnapshotModeSettings
	// -- end of TxMode
}

func (b0 TransactionSettings_builder) Build() *TransactionSettings {
	m0 := &TransactionSettings{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SerializableReadWrite != nil {
		x.TxMode = &TransactionSettings_SerializableReadWrite{b.SerializableReadWrite}
	}
	if b.OnlineReadOnly != nil {
		x.TxMode = &TransactionSettings_OnlineReadOnly{b.OnlineReadOnly}
	}
	if b.StaleReadOnly != nil {
		x.TxMode = &TransactionSettings_StaleReadOnly{b.StaleReadOnly}
	}
	if b.SnapshotReadOnly != nil {
		x.TxMode = &TransactionSettings_SnapshotReadOnly{b.SnapshotReadOnly}
	}
	return m0
}

type case_TransactionSettings_TxMode protoreflect.FieldNumber

func (x case_TransactionSettings_TxMode) String() string {
	md := file_protos_ydb_query_proto_msgTypes[10].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isTransactionSettings_TxMode interface {
	isTransactionSettings_TxMode()
}

type TransactionSettings_SerializableReadWrite struct {
	SerializableReadWrite *SerializableModeSettings `protobuf:"bytes,1,opt,name=serializable_read_write,json=serializableReadWrite,oneof"`
}

type TransactionSettings_OnlineReadOnly struct {
	OnlineReadOnly *OnlineModeSettings `protobuf:"bytes,2,opt,name=online_read_only,json=onlineReadOnly,oneof"`
}

type TransactionSettings_StaleReadOnly struct {
	StaleReadOnly *StaleModeSettings `protobuf:"bytes,3,opt,name=stale_read_only,json=staleReadOnly,oneof"`
}

type TransactionSettings_SnapshotReadOnly struct {
	SnapshotReadOnly *SnapshotModeSettings `protobuf:"bytes,4,opt,name=snapshot_read_only,json=snapshotReadOnly,oneof"`
}

func (*TransactionSettings_SerializableReadWrite) isTransactionSettings_TxMode() {}

func (*TransactionSettings_OnlineReadOnly) isTransactionSettings_TxMode() {}

func (*TransactionSettings_StaleReadOnly) isTransactionSettings_TxMode() {}

func (*TransactionSettings_SnapshotReadOnly) isTransactionSettings_TxMode() {}

type TransactionControl struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Types that are valid to be assigned to TxSelector:
	//
	//	*TransactionControl_TxId
	//	*TransactionControl_BeginTx
	TxSelector    isTransactionControl_TxSelector `protobuf_oneof:"tx_selector"`
	CommitTx      *bool                           `protobuf:"varint,10,opt,name=commit_tx,json=commitTx" json:"commit_tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionControl) Reset() {
	*x = TransactionControl{}
	mi := &file_protos_ydb_query_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionControl) ProtoMessage() {}

func (x *TransactionControl) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TransactionControl) GetTxSelector() isTransactionControl_TxSelector {
	if x != nil {
		return x.TxSelector
	}
	return nil
}

func (x *TransactionControl) GetTxId() string {
	if x != nil {
		if x, ok := x.TxSelector.(*TransactionControl_TxId); ok {
			return x.TxId
		}
	}
	return ""
}

func (x *TransactionControl) GetBeginTx() *TransactionSettings {
	if x != nil {
		if x, ok := x.TxSelector.(*TransactionControl_BeginTx); ok {
			return x.BeginTx
		}
	}
	return nil
}

func (x *TransactionControl) GetCommitTx() bool {
	if x != nil && x.CommitTx != nil {
		return *x.CommitTx
	}
	return false
}

func (x *TransactionControl) SetTxId(v string) {
	x.TxSelector = &TransactionControl_TxId{v}
}

func (x *TransactionControl) SetBeginTx(v *TransactionSettings) {
	if v == nil {
		x.TxSelector = nil
		return
	}
	x.TxSelector = &TransactionControl_BeginTx{v}
}

func (x *TransactionControl) SetCommitTx(v bool) {
	x.CommitTx = &v
}

func (x *TransactionControl) HasTxSelector() bool {
	if x == nil {
		return false
	}
	return x.TxSelector != nil
}

func (x *TransactionControl) HasTxId() bool {
	if x == nil {
		return false
	}
	_, ok := x.TxSelector.(*TransactionControl_TxId)
	return ok
}

func (x *TransactionControl) HasBeginTx() bool {
	if x == nil {
		return false
	}
	_, ok := x.TxSelector.(*TransactionControl_BeginTx)
	return ok
}

func (x *TransactionControl) HasCommitTx() bool {
	if x == nil {
		return false
	}
	return x.CommitTx != nil
}

func (x *TransactionControl) ClearTxSelector() {
	x.TxSelector = nil
}

func (x *TransactionControl) ClearTxId() {
	if _, ok := x.TxSelector.(*TransactionControl_TxId); ok {
		x.TxSelector = nil
	}
}

func (x *TransactionControl) ClearBeginTx() {
	if _, ok := x.TxSelector.(*TransactionControl_BeginTx); ok {
		x.TxSelector = nil
	}
}

func (x *TransactionControl) ClearCommitTx() {
	x.CommitTx = nil
}

const TransactionControl_TxSelector_not_set_case case_TransactionControl_TxSelector = 0
const TransactionControl_TxId_case case_TransactionControl_TxSelector = 1
const TransactionControl_BeginTx_case case_TransactionControl_TxSelector = 2

func (x *TransactionControl) WhichTxSelector() case_TransactionControl_TxSelector {
	if x == nil {
		return TransactionControl_TxSelector_not_set_case
	}
	switch x.TxSelector.(type) {
	case *TransactionControl_TxId:
		return TransactionControl_TxId_case
	case *TransactionControl_BeginTx:
		return TransactionControl_BeginTx_case
	default:
		return TransactionControl_TxSelector_not_set_case
	}
}

type TransactionControl_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof TxSelector:
	TxId    *string
	BeginTx *TransactionSettings
	// -- end of TxSelector
	CommitTx *bool
}

func (b0 TransactionControl_builder) Build() *TransactionControl {
	m0 := &TransactionControl{}
	b, x := &b0, m0
	_, _ = b, x
	if b.TxId != nil {
		x.TxSelector = &TransactionControl_TxId{*b.TxId}
	}
	if b.BeginTx != nil {
		x.TxSelector = &TransactionControl_BeginTx{b.BeginTx}
	}
	x.CommitTx = b.CommitTx
	return m0
}

type case_TransactionControl_TxSelector protoreflect.FieldNumber

func (x case_TransactionControl_TxSelector) String() string {
	md := file_protos_ydb_query_proto_msgTypes[11].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isTransactionControl_TxSelector interface {
	isTransactionControl_TxSelector()
}

type TransactionControl_TxId struct {
	TxId string `protobuf:"bytes,1,opt,name=tx_id,json=txId,oneof"`
}

type TransactionControl_BeginTx struct {
	BeginTx *TransactionSettings `protobuf:"bytes,2,opt,name=begin_tx,json=beginTx,oneof"`
}

func (*TransactionControl_TxId) isTransactionControl_TxSelector() {}

func (*TransactionControl_BeginTx) isTransactionControl_TxSelector() {}

type BeginTransactionRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Session identifier (required)
	SessionId     *string              `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	TxSettings    *TransactionSettings `protobuf:"bytes,2,opt,name=tx_settings,json=txSettings" json:"tx_settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BeginTransactionRequest) Reset() {
	*x = BeginTransactionRequest{}
	mi := &file_protos_ydb_query_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeginTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginTransactionRequest) ProtoMessage() {}

func (x *BeginTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BeginTransactionRequest) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *BeginTransactionRequest) GetTxSettings() *TransactionSettings {
	if x != nil {
		return x.TxSettings
	}
	return nil
}

func (x *BeginTransactionRequest) SetSessionId(v string) {
	x.SessionId = &v
}

func (x *BeginTransactionRequest) SetTxSettings(v *TransactionSettings) {
	x.TxSettings = v
}

func (x *BeginTransactionRequest) HasSessionId() bool {
	if x == nil {
		return false
	}
	return x.SessionId != nil
}

func (x *BeginTransactionRequest) HasTxSettings() bool {
	if x == nil {
		return false
	}
	return x.TxSettings != nil
}

func (x *BeginTransactionRequest) ClearSessionId() {
	x.SessionId = nil
}

func (x *BeginTransactionRequest) ClearTxSettings() {
	x.TxSettings = nil
}

type BeginTransactionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier (required)
	SessionId  *string
	TxSettings *TransactionSettings
}

func (b0 BeginTransactionRequest_builder) Build() *BeginTransactionRequest {
	m0 := &BeginTransactionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.SessionId = b.SessionId
	x.TxSettings = b.TxSettings
	return m0
}

type TransactionMeta struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Transaction identifier
	Id            *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionMeta) Reset() {
	*x = TransactionMeta{}
	mi := &file_protos_ydb_query_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMeta) ProtoMessage() {}

func (x *TransactionMeta) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TransactionMeta) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *TransactionMeta) SetId(v string) {
	x.Id = &v
}

func (x *TransactionMeta) HasId() bool {
	if x == nil {
		return false
	}
	return x.Id != nil
}

func (x *TransactionMeta) ClearId() {
	x.Id = nil
}

type TransactionMeta_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Transaction identifier
	Id *string
}

func (b0 TransactionMeta_builder) Build() *TransactionMeta {
	m0 := &TransactionMeta{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	return m0
}

type BeginTransactionResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Status        *Ydb.StatusIds_StatusCode `protobuf:"varint,1,opt,name=status,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues        []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues" json:"issues,omitempty"`
	TxMeta        *TransactionMeta          `protobuf:"bytes,3,opt,name=tx_meta,json=txMeta" json:"tx_meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BeginTransactionResponse) Reset() {
	*x = BeginTransactionResponse{}
	mi := &file_protos_ydb_query_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeginTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginTransactionResponse) ProtoMessage() {}

func (x *BeginTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BeginTransactionResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *BeginTransactionResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *BeginTransactionResponse) GetTxMeta() *TransactionMeta {
	if x != nil {
		return x.TxMeta
	}
	return nil
}

func (x *BeginTransactionResponse) SetStatus(v Ydb.StatusIds_StatusCode) {
	x.Status = &v
}

func (x *BeginTransactionResponse) SetIssues(v []*Ydb_Issue.IssueMessage) {
	x.Issues = v
}

func (x *BeginTransactionResponse) SetTxMeta(v *TransactionMeta) {
	x.TxMeta = v
}

func (x *BeginTransactionResponse) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *BeginTransactionResponse) HasTxMeta() bool {
	if x == nil {
		return false
	}
	return x.TxMeta != nil
}

func (x *BeginTransactionResponse) ClearStatus() {
	x.Status = nil
}

func (x *BeginTransactionResponse) ClearTxMeta() {
	x.TxMeta = nil
}

type BeginTransactionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status *Ydb.StatusIds_StatusCode
	Issues []*Ydb_Issue.IssueMessage
	TxMeta *TransactionMeta
}

func (b0 BeginTransactionResponse_builder) Build() *BeginTransactionResponse {
	m0 := &BeginTransactionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Status = b.Status
	x.Issues = b.Issues
	x.TxMeta = b.TxMeta
	return m0
}

type CommitTransactionRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Session identifier (required)
	SessionId *string `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	// Transaction identifier (required)
	TxId          *string `protobuf:"bytes,2,opt,name=tx_id,json=txId" json:"tx_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitTransactionRequest) Reset() {
	*x = CommitTransactionRequest{}
	mi := &file_protos_ydb_query_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTransactionRequest) ProtoMessage() {}

func (x *CommitTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommitTransactionRequest) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *CommitTransactionRequest) GetTxId() string {
	if x != nil && x.TxId != nil {
		return *x.TxId
	}
	return ""
}

func (x *CommitTransactionRequest) SetSessionId(v string) {
	x.SessionId = &v
}

func (x *CommitTransactionRequest) SetTxId(v string) {
	x.TxId = &v
}

func (x *CommitTransactionRequest) HasSessionId() bool {
	if x == nil {
		return false
	}
	return x.SessionId != nil
}

func (x *CommitTransactionRequest) HasTxId() bool {
	if x == nil {
		return false
	}
	return x.TxId != nil
}

func (x *CommitTransactionRequest) ClearSessionId() {
	x.SessionId = nil
}

func (x *CommitTransactionRequest) ClearTxId() {
	x.TxId = nil
}

type CommitTransactionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier (required)
	SessionId *string
	// Transaction identifier (required)
	TxId *string
}

func (b0 CommitTransactionRequest_builder) Build() *CommitTransactionRequest {
	m0 := &CommitTransactionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.SessionId = b.SessionId
	x.TxId = b.TxId
	return m0
}

type CommitTransactionResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Status        *Ydb.StatusIds_StatusCode `protobuf:"varint,1,opt,name=status,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues        []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues" json:"issues,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitTransactionResponse) Reset() {
	*x = CommitTransactionResponse{}
	mi := &file_protos_ydb_query_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTransactionResponse) ProtoMessage() {}

func (x *CommitTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CommitTransactionResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *CommitTransactionResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *CommitTransactionResponse) SetStatus(v Ydb.StatusIds_StatusCode) {
	x.Status = &v
}

func (x *CommitTransactionResponse) SetIssues(v []*Ydb_Issue.IssueMessage) {
	x.Issues = v
}

func (x *CommitTransactionResponse) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *CommitTransactionResponse) ClearStatus() {
	x.Status = nil
}

type CommitTransactionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status *Ydb.StatusIds_StatusCode
	Issues []*Ydb_Issue.IssueMessage
}

func (b0 CommitTransactionResponse_builder) Build() *CommitTransactionResponse {
	m0 := &CommitTransactionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Status = b.Status
	x.Issues = b.Issues
	return m0
}

type RollbackTransactionRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Session identifier (required)
	SessionId *string `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	// Transaction identifier (required)
	TxId          *string `protobuf:"bytes,2,opt,name=tx_id,json=txId" json:"tx_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackTransactionRequest) Reset() {
	*x = RollbackTransactionRequest{}
	mi := &file_protos_ydb_query_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackTransactionRequest) ProtoMessage() {}

func (x *RollbackTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RollbackTransactionRequest) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *RollbackTransactionRequest) GetTxId() string {
	if x != nil && x.TxId != nil {
		return *x.TxId
	}
	return ""
}

func (x *RollbackTransactionRequest) SetSessionId(v string) {
	x.SessionId = &v
}

func (x *RollbackTransactionRequest) SetTxId(v string) {
	x.TxId = &v
}

func (x *RollbackTransactionRequest) HasSessionId() bool {
	if x == nil {
		return false
	}
	return x.SessionId != nil
}

func (x *RollbackTransactionRequest) HasTxId() bool {
	if x == nil {
		return false
	}
	return x.TxId != nil
}

func (x *RollbackTransactionRequest) ClearSessionId() {
	x.SessionId = nil
}

func (x *RollbackTransactionRequest) ClearTxId() {
	x.TxId = nil
}

type RollbackTransactionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier (required)
	SessionId *string
	// Transaction identifier (required)
	TxId *string
}

func (b0 RollbackTransactionRequest_builder) Build() *RollbackTransactionRequest {
	m0 := &RollbackTransactionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.SessionId = b.SessionId
	x.TxId = b.TxId
	return m0
}

type RollbackTransactionResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Status        *Ydb.StatusIds_StatusCode `protobuf:"varint,1,opt,name=status,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues        []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues" json:"issues,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackTransactionResponse) Reset() {
	*x = RollbackTransactionResponse{}
	mi := &file_protos_ydb_query_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackTransactionResponse) ProtoMessage() {}

func (x *RollbackTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RollbackTransactionResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *RollbackTransactionResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *RollbackTransactionResponse) SetStatus(v Ydb.StatusIds_StatusCode) {
	x.Status = &v
}

func (x *RollbackTransactionResponse) SetIssues(v []*Ydb_Issue.IssueMessage) {
	x.Issues = v
}

func (x *RollbackTransactionResponse) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *RollbackTransactionResponse) ClearStatus() {
	x.Status = nil
}

type RollbackTransactionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status *Ydb.StatusIds_StatusCode
	Issues []*Ydb_Issue.IssueMessage
}

func (b0 RollbackTransactionResponse_builder) Build() *RollbackTransactionResponse {
	m0 := &RollbackTransactionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Status = b.Status
	x.Issues = b.Issues
	return m0
}

type QueryContent struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Syntax        *Syntax                `protobuf:"varint,1,opt,name=syntax,enum=Ydb.Query.Syntax" json:"syntax,omitempty"`
	Text          *string                `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryContent) Reset() {
	*x = QueryContent{}
	mi := &file_protos_ydb_query_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryContent) ProtoMessage() {}

func (x *QueryContent) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryContent) GetSyntax() Syntax {
	if x != nil && x.Syntax != nil {
		return *x.Syntax
	}
	return Syntax_SYNTAX_UNSPECIFIED
}

func (x *QueryContent) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *QueryContent) SetSyntax(v Syntax) {
	x.Syntax = &v
}

func (x *QueryContent) SetText(v string) {
	x.Text = &v
}

func (x *QueryContent) HasSyntax() bool {
	if x == nil {
		return false
	}
	return x.Syntax != nil
}

func (x *QueryContent) HasText() bool {
	if x == nil {
		return false
	}
	return x.Text != nil
}

func (x *QueryContent) ClearSyntax() {
	x.Syntax = nil
}

func (x *QueryContent) ClearText() {
	x.Text = nil
}

type QueryContent_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Syntax *Syntax
	Text   *string
}

func (b0 QueryContent_builder) Build() *QueryContent {
	m0 := &QueryContent{}
	b, x := &b0, m0
	_, _ = b, x
	x.Syntax = b.Syntax
	x.Text = b.Text
	return m0
}

type ExecuteQueryRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Session identifier (required)
	SessionId *string             `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	ExecMode  *ExecMode           `protobuf:"varint,2,opt,name=exec_mode,json=execMode,enum=Ydb.Query.ExecMode" json:"exec_mode,omitempty"`
	TxControl *TransactionControl `protobuf:"bytes,3,opt,name=tx_control,json=txControl" json:"tx_control,omitempty"`
	// Types that are valid to be assigned to Query:
	//
	//	*ExecuteQueryRequest_QueryContent
	Query      isExecuteQueryRequest_Query `protobuf_oneof:"query"`
	Parameters map[string]*Ydb.TypedValue  `protobuf:"bytes,6,rep,name=parameters" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StatsMode  *StatsMode                  `protobuf:"varint,7,opt,name=stats_mode,json=statsMode,enum=Ydb.Query.StatsMode" json:"stats_mode,omitempty"`
	// For queries with multiple result sets, some of them may be computed concurrently.
	// If true, parts of different results sets may be interleaved in response stream.
	ConcurrentResultSets *bool `protobuf:"varint,8,opt,name=concurrent_result_sets,json=concurrentResultSets" json:"concurrent_result_sets,omitempty"`
	// Allows to set size limitation (in bytes) for one result part
	ResponsePartLimitBytes *int64  `protobuf:"varint,9,opt,name=response_part_limit_bytes,json=responsePartLimitBytes" json:"response_part_limit_bytes,omitempty"`
	PoolId                 *string `protobuf:"bytes,10,opt,name=pool_id,json=poolId" json:"pool_id,omitempty"` // Workload manager pool id
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ExecuteQueryRequest) Reset() {
	*x = ExecuteQueryRequest{}
	mi := &file_protos_ydb_query_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteQueryRequest) ProtoMessage() {}

func (x *ExecuteQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteQueryRequest) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *ExecuteQueryRequest) GetExecMode() ExecMode {
	if x != nil && x.ExecMode != nil {
		return *x.ExecMode
	}
	return ExecMode_EXEC_MODE_UNSPECIFIED
}

func (x *ExecuteQueryRequest) GetTxControl() *TransactionControl {
	if x != nil {
		return x.TxControl
	}
	return nil
}

func (x *ExecuteQueryRequest) GetQuery() isExecuteQueryRequest_Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ExecuteQueryRequest) GetQueryContent() *QueryContent {
	if x != nil {
		if x, ok := x.Query.(*ExecuteQueryRequest_QueryContent); ok {
			return x.QueryContent
		}
	}
	return nil
}

func (x *ExecuteQueryRequest) GetParameters() map[string]*Ydb.TypedValue {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ExecuteQueryRequest) GetStatsMode() StatsMode {
	if x != nil && x.StatsMode != nil {
		return *x.StatsMode
	}
	return StatsMode_STATS_MODE_UNSPECIFIED
}

func (x *ExecuteQueryRequest) GetConcurrentResultSets() bool {
	if x != nil && x.ConcurrentResultSets != nil {
		return *x.ConcurrentResultSets
	}
	return false
}

func (x *ExecuteQueryRequest) GetResponsePartLimitBytes() int64 {
	if x != nil && x.ResponsePartLimitBytes != nil {
		return *x.ResponsePartLimitBytes
	}
	return 0
}

func (x *ExecuteQueryRequest) GetPoolId() string {
	if x != nil && x.PoolId != nil {
		return *x.PoolId
	}
	return ""
}

func (x *ExecuteQueryRequest) SetSessionId(v string) {
	x.SessionId = &v
}

func (x *ExecuteQueryRequest) SetExecMode(v ExecMode) {
	x.ExecMode = &v
}

func (x *ExecuteQueryRequest) SetTxControl(v *TransactionControl) {
	x.TxControl = v
}

func (x *ExecuteQueryRequest) SetQueryContent(v *QueryContent) {
	if v == nil {
		x.Query = nil
		return
	}
	x.Query = &ExecuteQueryRequest_QueryContent{v}
}

func (x *ExecuteQueryRequest) SetParameters(v map[string]*Ydb.TypedValue) {
	x.Parameters = v
}

func (x *ExecuteQueryRequest) SetStatsMode(v StatsMode) {
	x.StatsMode = &v
}

func (x *ExecuteQueryRequest) SetConcurrentResultSets(v bool) {
	x.ConcurrentResultSets = &v
}

func (x *ExecuteQueryRequest) SetResponsePartLimitBytes(v int64) {
	x.ResponsePartLimitBytes = &v
}

func (x *ExecuteQueryRequest) SetPoolId(v string) {
	x.PoolId = &v
}

func (x *ExecuteQueryRequest) HasSessionId() bool {
	if x == nil {
		return false
	}
	return x.SessionId != nil
}

func (x *ExecuteQueryRequest) HasExecMode() bool {
	if x == nil {
		return false
	}
	return x.ExecMode != nil
}

func (x *ExecuteQueryRequest) HasTxControl() bool {
	if x == nil {
		return false
	}
	return x.TxControl != nil
}

func (x *ExecuteQueryRequest) HasQuery() bool {
	if x == nil {
		return false
	}
	return x.Query != nil
}

func (x *ExecuteQueryRequest) HasQueryContent() bool {
	if x == nil {
		return false
	}
	_, ok := x.Query.(*ExecuteQueryRequest_QueryContent)
	return ok
}

func (x *ExecuteQueryRequest) HasStatsMode() bool {
	if x == nil {
		return false
	}
	return x.StatsMode != nil
}

func (x *ExecuteQueryRequest) HasConcurrentResultSets() bool {
	if x == nil {
		return false
	}
	return x.ConcurrentResultSets != nil
}

func (x *ExecuteQueryRequest) HasResponsePartLimitBytes() bool {
	if x == nil {
		return false
	}
	return x.ResponsePartLimitBytes != nil
}

func (x *ExecuteQueryRequest) HasPoolId() bool {
	if x == nil {
		return false
	}
	return x.PoolId != nil
}

func (x *ExecuteQueryRequest) ClearSessionId() {
	x.SessionId = nil
}

func (x *ExecuteQueryRequest) ClearExecMode() {
	x.ExecMode = nil
}

func (x *ExecuteQueryRequest) ClearTxControl() {
	x.TxControl = nil
}

func (x *ExecuteQueryRequest) ClearQuery() {
	x.Query = nil
}

func (x *ExecuteQueryRequest) ClearQueryContent() {
	if _, ok := x.Query.(*ExecuteQueryRequest_QueryContent); ok {
		x.Query = nil
	}
}

func (x *ExecuteQueryRequest) ClearStatsMode() {
	x.StatsMode = nil
}

func (x *ExecuteQueryRequest) ClearConcurrentResultSets() {
	x.ConcurrentResultSets = nil
}

func (x *ExecuteQueryRequest) ClearResponsePartLimitBytes() {
	x.ResponsePartLimitBytes = nil
}

func (x *ExecuteQueryRequest) ClearPoolId() {
	x.PoolId = nil
}

const ExecuteQueryRequest_Query_not_set_case case_ExecuteQueryRequest_Query = 0
const ExecuteQueryRequest_QueryContent_case case_ExecuteQueryRequest_Query = 4

func (x *ExecuteQueryRequest) WhichQuery() case_ExecuteQueryRequest_Query {
	if x == nil {
		return ExecuteQueryRequest_Query_not_set_case
	}
	switch x.Query.(type) {
	case *ExecuteQueryRequest_QueryContent:
		return ExecuteQueryRequest_QueryContent_case
	default:
		return ExecuteQueryRequest_Query_not_set_case
	}
}

type ExecuteQueryRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session identifier (required)
	SessionId *string
	ExecMode  *ExecMode
	TxControl *TransactionControl
	// Fields of oneof Query:
	QueryContent *QueryContent
	// -- end of Query
	Parameters map[string]*Ydb.TypedValue
	StatsMode  *StatsMode
	// For queries with multiple result sets, some of them may be computed concurrently.
	// If true, parts of different results sets may be interleaved in response stream.
	ConcurrentResultSets *bool
	// Allows to set size limitation (in bytes) for one result part
	ResponsePartLimitBytes *int64
	PoolId                 *string
}

func (b0 ExecuteQueryRequest_builder) Build() *ExecuteQueryRequest {
	m0 := &ExecuteQueryRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.SessionId = b.SessionId
	x.ExecMode = b.ExecMode
	x.TxControl = b.TxControl
	if b.QueryContent != nil {
		x.Query = &ExecuteQueryRequest_QueryContent{b.QueryContent}
	}
	x.Parameters = b.Parameters
	x.StatsMode = b.StatsMode
	x.ConcurrentResultSets = b.ConcurrentResultSets
	x.ResponsePartLimitBytes = b.ResponsePartLimitBytes
	x.PoolId = b.PoolId
	return m0
}

type case_ExecuteQueryRequest_Query protoreflect.FieldNumber

func (x case_ExecuteQueryRequest_Query) String() string {
	md := file_protos_ydb_query_proto_msgTypes[20].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isExecuteQueryRequest_Query interface {
	isExecuteQueryRequest_Query()
}

type ExecuteQueryRequest_QueryContent struct {
	QueryContent *QueryContent `protobuf:"bytes,4,opt,name=query_content,json=queryContent,oneof"`
}

func (*ExecuteQueryRequest_QueryContent) isExecuteQueryRequest_Query() {}

type ResultSetMeta struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Columns       []*Ydb.Column          `protobuf:"bytes,1,rep,name=columns" json:"columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResultSetMeta) Reset() {
	*x = ResultSetMeta{}
	mi := &file_protos_ydb_query_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResultSetMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultSetMeta) ProtoMessage() {}

func (x *ResultSetMeta) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResultSetMeta) GetColumns() []*Ydb.Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *ResultSetMeta) SetColumns(v []*Ydb.Column) {
	x.Columns = v
}

type ResultSetMeta_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Columns []*Ydb.Column
}

func (b0 ResultSetMeta_builder) Build() *ResultSetMeta {
	m0 := &ResultSetMeta{}
	b, x := &b0, m0
	_, _ = b, x
	x.Columns = b.Columns
	return m0
}

type ExecuteQueryResponsePart struct {
	state  protoimpl.MessageState    `protogen:"hybrid.v1"`
	Status *Ydb.StatusIds_StatusCode `protobuf:"varint,1,opt,name=status,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues" json:"issues,omitempty"`
	// Index of current result set
	ResultSetIndex *int64 `protobuf:"varint,3,opt,name=result_set_index,json=resultSetIndex" json:"result_set_index,omitempty"`
	// Result set part
	ResultSet *Ydb.ResultSet `protobuf:"bytes,4,opt,name=result_set,json=resultSet" json:"result_set,omitempty"`
	// Execution statistics (last part only)
	ExecStats     *Ydb_TableStats.QueryStats `protobuf:"bytes,5,opt,name=exec_stats,json=execStats" json:"exec_stats,omitempty"`
	TxMeta        *TransactionMeta           `protobuf:"bytes,6,opt,name=tx_meta,json=txMeta" json:"tx_meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteQueryResponsePart) Reset() {
	*x = ExecuteQueryResponsePart{}
	mi := &file_protos_ydb_query_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteQueryResponsePart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteQueryResponsePart) ProtoMessage() {}

func (x *ExecuteQueryResponsePart) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteQueryResponsePart) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *ExecuteQueryResponsePart) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *ExecuteQueryResponsePart) GetResultSetIndex() int64 {
	if x != nil && x.ResultSetIndex != nil {
		return *x.ResultSetIndex
	}
	return 0
}

func (x *ExecuteQueryResponsePart) GetResultSet() *Ydb.ResultSet {
	if x != nil {
		return x.ResultSet
	}
	return nil
}

func (x *ExecuteQueryResponsePart) GetExecStats() *Ydb_TableStats.QueryStats {
	if x != nil {
		return x.ExecStats
	}
	return nil
}

func (x *ExecuteQueryResponsePart) GetTxMeta() *TransactionMeta {
	if x != nil {
		return x.TxMeta
	}
	return nil
}

func (x *ExecuteQueryResponsePart) SetStatus(v Ydb.StatusIds_StatusCode) {
	x.Status = &v
}

func (x *ExecuteQueryResponsePart) SetIssues(v []*Ydb_Issue.IssueMessage) {
	x.Issues = v
}

func (x *ExecuteQueryResponsePart) SetResultSetIndex(v int64) {
	x.ResultSetIndex = &v
}

func (x *ExecuteQueryResponsePart) SetResultSet(v *Ydb.ResultSet) {
	x.ResultSet = v
}

func (x *ExecuteQueryResponsePart) SetExecStats(v *Ydb_TableStats.QueryStats) {
	x.ExecStats = v
}

func (x *ExecuteQueryResponsePart) SetTxMeta(v *TransactionMeta) {
	x.TxMeta = v
}

func (x *ExecuteQueryResponsePart) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *ExecuteQueryResponsePart) HasResultSetIndex() bool {
	if x == nil {
		return false
	}
	return x.ResultSetIndex != nil
}

func (x *ExecuteQueryResponsePart) HasResultSet() bool {
	if x == nil {
		return false
	}
	return x.ResultSet != nil
}

func (x *ExecuteQueryResponsePart) HasExecStats() bool {
	if x == nil {
		return false
	}
	return x.ExecStats != nil
}

func (x *ExecuteQueryResponsePart) HasTxMeta() bool {
	if x == nil {
		return false
	}
	return x.TxMeta != nil
}

func (x *ExecuteQueryResponsePart) ClearStatus() {
	x.Status = nil
}

func (x *ExecuteQueryResponsePart) ClearResultSetIndex() {
	x.ResultSetIndex = nil
}

func (x *ExecuteQueryResponsePart) ClearResultSet() {
	x.ResultSet = nil
}

func (x *ExecuteQueryResponsePart) ClearExecStats() {
	x.ExecStats = nil
}

func (x *ExecuteQueryResponsePart) ClearTxMeta() {
	x.TxMeta = nil
}

type ExecuteQueryResponsePart_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status *Ydb.StatusIds_StatusCode
	Issues []*Ydb_Issue.IssueMessage
	// Index of current result set
	ResultSetIndex *int64
	// Result set part
	ResultSet *Ydb.ResultSet
	// Execution statistics (last part only)
	ExecStats *Ydb_TableStats.QueryStats
	TxMeta    *TransactionMeta
}

func (b0 ExecuteQueryResponsePart_builder) Build() *ExecuteQueryResponsePart {
	m0 := &ExecuteQueryResponsePart{}
	b, x := &b0, m0
	_, _ = b, x
	x.Status = b.Status
	x.Issues = b.Issues
	x.ResultSetIndex = b.ResultSetIndex
	x.ResultSet = b.ResultSet
	x.ExecStats = b.ExecStats
	x.TxMeta = b.TxMeta
	return m0
}

type ExecuteScriptRequest struct {
	state           protoimpl.MessageState          `protogen:"hybrid.v1"`
	OperationParams *Ydb_Operations.OperationParams `protobuf:"bytes,1,opt,name=operation_params,json=operationParams" json:"operation_params,omitempty"`
	ExecMode        *ExecMode                       `protobuf:"varint,2,opt,name=exec_mode,json=execMode,enum=Ydb.Query.ExecMode" json:"exec_mode,omitempty"`
	ScriptContent   *QueryContent                   `protobuf:"bytes,3,opt,name=script_content,json=scriptContent" json:"script_content,omitempty"`
	Parameters      map[string]*Ydb.TypedValue      `protobuf:"bytes,4,rep,name=parameters" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StatsMode       *StatsMode                      `protobuf:"varint,5,opt,name=stats_mode,json=statsMode,enum=Ydb.Query.StatsMode" json:"stats_mode,omitempty"`
	// After script execution operation finishes, TTL will start counting.
	// After this TTL the results will be removed from database.
	ResultsTtl    *durationpb.Duration `protobuf:"bytes,6,opt,name=results_ttl,json=resultsTtl" json:"results_ttl,omitempty"`
	PoolId        *string              `protobuf:"bytes,7,opt,name=pool_id,json=poolId" json:"pool_id,omitempty"` // Workload manager pool id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteScriptRequest) Reset() {
	*x = ExecuteScriptRequest{}
	mi := &file_protos_ydb_query_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteScriptRequest) ProtoMessage() {}

func (x *ExecuteScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteScriptRequest) GetOperationParams() *Ydb_Operations.OperationParams {
	if x != nil {
		return x.OperationParams
	}
	return nil
}

func (x *ExecuteScriptRequest) GetExecMode() ExecMode {
	if x != nil && x.ExecMode != nil {
		return *x.ExecMode
	}
	return ExecMode_EXEC_MODE_UNSPECIFIED
}

func (x *ExecuteScriptRequest) GetScriptContent() *QueryContent {
	if x != nil {
		return x.ScriptContent
	}
	return nil
}

func (x *ExecuteScriptRequest) GetParameters() map[string]*Ydb.TypedValue {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ExecuteScriptRequest) GetStatsMode() StatsMode {
	if x != nil && x.StatsMode != nil {
		return *x.StatsMode
	}
	return StatsMode_STATS_MODE_UNSPECIFIED
}

func (x *ExecuteScriptRequest) GetResultsTtl() *durationpb.Duration {
	if x != nil {
		return x.ResultsTtl
	}
	return nil
}

func (x *ExecuteScriptRequest) GetPoolId() string {
	if x != nil && x.PoolId != nil {
		return *x.PoolId
	}
	return ""
}

func (x *ExecuteScriptRequest) SetOperationParams(v *Ydb_Operations.OperationParams) {
	x.OperationParams = v
}

func (x *ExecuteScriptRequest) SetExecMode(v ExecMode) {
	x.ExecMode = &v
}

func (x *ExecuteScriptRequest) SetScriptContent(v *QueryContent) {
	x.ScriptContent = v
}

func (x *ExecuteScriptRequest) SetParameters(v map[string]*Ydb.TypedValue) {
	x.Parameters = v
}

func (x *ExecuteScriptRequest) SetStatsMode(v StatsMode) {
	x.StatsMode = &v
}

func (x *ExecuteScriptRequest) SetResultsTtl(v *durationpb.Duration) {
	x.ResultsTtl = v
}

func (x *ExecuteScriptRequest) SetPoolId(v string) {
	x.PoolId = &v
}

func (x *ExecuteScriptRequest) HasOperationParams() bool {
	if x == nil {
		return false
	}
	return x.OperationParams != nil
}

func (x *ExecuteScriptRequest) HasExecMode() bool {
	if x == nil {
		return false
	}
	return x.ExecMode != nil
}

func (x *ExecuteScriptRequest) HasScriptContent() bool {
	if x == nil {
		return false
	}
	return x.ScriptContent != nil
}

func (x *ExecuteScriptRequest) HasStatsMode() bool {
	if x == nil {
		return false
	}
	return x.StatsMode != nil
}

func (x *ExecuteScriptRequest) HasResultsTtl() bool {
	if x == nil {
		return false
	}
	return x.ResultsTtl != nil
}

func (x *ExecuteScriptRequest) HasPoolId() bool {
	if x == nil {
		return false
	}
	return x.PoolId != nil
}

func (x *ExecuteScriptRequest) ClearOperationParams() {
	x.OperationParams = nil
}

func (x *ExecuteScriptRequest) ClearExecMode() {
	x.ExecMode = nil
}

func (x *ExecuteScriptRequest) ClearScriptContent() {
	x.ScriptContent = nil
}

func (x *ExecuteScriptRequest) ClearStatsMode() {
	x.StatsMode = nil
}

func (x *ExecuteScriptRequest) ClearResultsTtl() {
	x.ResultsTtl = nil
}

func (x *ExecuteScriptRequest) ClearPoolId() {
	x.PoolId = nil
}

type ExecuteScriptRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationParams *Ydb_Operations.OperationParams
	ExecMode        *ExecMode
	ScriptContent   *QueryContent
	Parameters      map[string]*Ydb.TypedValue
	StatsMode       *StatsMode
	// After script execution operation finishes, TTL will start counting.
	// After this TTL the results will be removed from database.
	ResultsTtl *durationpb.Duration
	PoolId     *string
}

func (b0 ExecuteScriptRequest_builder) Build() *ExecuteScriptRequest {
	m0 := &ExecuteScriptRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationParams = b.OperationParams
	x.ExecMode = b.ExecMode
	x.ScriptContent = b.ScriptContent
	x.Parameters = b.Parameters
	x.StatsMode = b.StatsMode
	x.ResultsTtl = b.ResultsTtl
	x.PoolId = b.PoolId
	return m0
}

type ExecuteScriptMetadata struct {
	state          protoimpl.MessageState `protogen:"hybrid.v1"`
	ExecutionId    *string                `protobuf:"bytes,1,opt,name=execution_id,json=executionId" json:"execution_id,omitempty"`
	ExecStatus     *ExecStatus            `protobuf:"varint,2,opt,name=exec_status,json=execStatus,enum=Ydb.Query.ExecStatus" json:"exec_status,omitempty"`
	ScriptContent  *QueryContent          `protobuf:"bytes,3,opt,name=script_content,json=scriptContent" json:"script_content,omitempty"`
	ResultSetsMeta []*ResultSetMeta       `protobuf:"bytes,4,rep,name=result_sets_meta,json=resultSetsMeta" json:"result_sets_meta,omitempty"`
	ExecMode       *ExecMode              `protobuf:"varint,5,opt,name=exec_mode,json=execMode,enum=Ydb.Query.ExecMode" json:"exec_mode,omitempty"`
	// Execution statistics
	ExecStats     *Ydb_TableStats.QueryStats `protobuf:"bytes,6,opt,name=exec_stats,json=execStats" json:"exec_stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteScriptMetadata) Reset() {
	*x = ExecuteScriptMetadata{}
	mi := &file_protos_ydb_query_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteScriptMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteScriptMetadata) ProtoMessage() {}

func (x *ExecuteScriptMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteScriptMetadata) GetExecutionId() string {
	if x != nil && x.ExecutionId != nil {
		return *x.ExecutionId
	}
	return ""
}

func (x *ExecuteScriptMetadata) GetExecStatus() ExecStatus {
	if x != nil && x.ExecStatus != nil {
		return *x.ExecStatus
	}
	return ExecStatus_EXEC_STATUS_UNSPECIFIED
}

func (x *ExecuteScriptMetadata) GetScriptContent() *QueryContent {
	if x != nil {
		return x.ScriptContent
	}
	return nil
}

func (x *ExecuteScriptMetadata) GetResultSetsMeta() []*ResultSetMeta {
	if x != nil {
		return x.ResultSetsMeta
	}
	return nil
}

func (x *ExecuteScriptMetadata) GetExecMode() ExecMode {
	if x != nil && x.ExecMode != nil {
		return *x.ExecMode
	}
	return ExecMode_EXEC_MODE_UNSPECIFIED
}

func (x *ExecuteScriptMetadata) GetExecStats() *Ydb_TableStats.QueryStats {
	if x != nil {
		return x.ExecStats
	}
	return nil
}

func (x *ExecuteScriptMetadata) SetExecutionId(v string) {
	x.ExecutionId = &v
}

func (x *ExecuteScriptMetadata) SetExecStatus(v ExecStatus) {
	x.ExecStatus = &v
}

func (x *ExecuteScriptMetadata) SetScriptContent(v *QueryContent) {
	x.ScriptContent = v
}

func (x *ExecuteScriptMetadata) SetResultSetsMeta(v []*ResultSetMeta) {
	x.ResultSetsMeta = v
}

func (x *ExecuteScriptMetadata) SetExecMode(v ExecMode) {
	x.ExecMode = &v
}

func (x *ExecuteScriptMetadata) SetExecStats(v *Ydb_TableStats.QueryStats) {
	x.ExecStats = v
}

func (x *ExecuteScriptMetadata) HasExecutionId() bool {
	if x == nil {
		return false
	}
	return x.ExecutionId != nil
}

func (x *ExecuteScriptMetadata) HasExecStatus() bool {
	if x == nil {
		return false
	}
	return x.ExecStatus != nil
}

func (x *ExecuteScriptMetadata) HasScriptContent() bool {
	if x == nil {
		return false
	}
	return x.ScriptContent != nil
}

func (x *ExecuteScriptMetadata) HasExecMode() bool {
	if x == nil {
		return false
	}
	return x.ExecMode != nil
}

func (x *ExecuteScriptMetadata) HasExecStats() bool {
	if x == nil {
		return false
	}
	return x.ExecStats != nil
}

func (x *ExecuteScriptMetadata) ClearExecutionId() {
	x.ExecutionId = nil
}

func (x *ExecuteScriptMetadata) ClearExecStatus() {
	x.ExecStatus = nil
}

func (x *ExecuteScriptMetadata) ClearScriptContent() {
	x.ScriptContent = nil
}

func (x *ExecuteScriptMetadata) ClearExecMode() {
	x.ExecMode = nil
}

func (x *ExecuteScriptMetadata) ClearExecStats() {
	x.ExecStats = nil
}

type ExecuteScriptMetadata_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ExecutionId    *string
	ExecStatus     *ExecStatus
	ScriptContent  *QueryContent
	ResultSetsMeta []*ResultSetMeta
	ExecMode       *ExecMode
	// Execution statistics
	ExecStats *Ydb_TableStats.QueryStats
}

func (b0 ExecuteScriptMetadata_builder) Build() *ExecuteScriptMetadata {
	m0 := &ExecuteScriptMetadata{}
	b, x := &b0, m0
	_, _ = b, x
	x.ExecutionId = b.ExecutionId
	x.ExecStatus = b.ExecStatus
	x.ScriptContent = b.ScriptContent
	x.ResultSetsMeta = b.ResultSetsMeta
	x.ExecMode = b.ExecMode
	x.ExecStats = b.ExecStats
	return m0
}

type FetchScriptResultsRequest struct {
	state          protoimpl.MessageState `protogen:"hybrid.v1"`
	OperationId    *string                `protobuf:"bytes,1,opt,name=operation_id,json=operationId" json:"operation_id,omitempty"`
	ResultSetIndex *int64                 `protobuf:"varint,2,opt,name=result_set_index,json=resultSetIndex" json:"result_set_index,omitempty"`
	FetchToken     *string                `protobuf:"bytes,3,opt,name=fetch_token,json=fetchToken" json:"fetch_token,omitempty"`
	RowsLimit      *int64                 `protobuf:"varint,4,opt,name=rows_limit,json=rowsLimit" json:"rows_limit,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FetchScriptResultsRequest) Reset() {
	*x = FetchScriptResultsRequest{}
	mi := &file_protos_ydb_query_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchScriptResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchScriptResultsRequest) ProtoMessage() {}

func (x *FetchScriptResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FetchScriptResultsRequest) GetOperationId() string {
	if x != nil && x.OperationId != nil {
		return *x.OperationId
	}
	return ""
}

func (x *FetchScriptResultsRequest) GetResultSetIndex() int64 {
	if x != nil && x.ResultSetIndex != nil {
		return *x.ResultSetIndex
	}
	return 0
}

func (x *FetchScriptResultsRequest) GetFetchToken() string {
	if x != nil && x.FetchToken != nil {
		return *x.FetchToken
	}
	return ""
}

func (x *FetchScriptResultsRequest) GetRowsLimit() int64 {
	if x != nil && x.RowsLimit != nil {
		return *x.RowsLimit
	}
	return 0
}

func (x *FetchScriptResultsRequest) SetOperationId(v string) {
	x.OperationId = &v
}

func (x *FetchScriptResultsRequest) SetResultSetIndex(v int64) {
	x.ResultSetIndex = &v
}

func (x *FetchScriptResultsRequest) SetFetchToken(v string) {
	x.FetchToken = &v
}

func (x *FetchScriptResultsRequest) SetRowsLimit(v int64) {
	x.RowsLimit = &v
}

func (x *FetchScriptResultsRequest) HasOperationId() bool {
	if x == nil {
		return false
	}
	return x.OperationId != nil
}

func (x *FetchScriptResultsRequest) HasResultSetIndex() bool {
	if x == nil {
		return false
	}
	return x.ResultSetIndex != nil
}

func (x *FetchScriptResultsRequest) HasFetchToken() bool {
	if x == nil {
		return false
	}
	return x.FetchToken != nil
}

func (x *FetchScriptResultsRequest) HasRowsLimit() bool {
	if x == nil {
		return false
	}
	return x.RowsLimit != nil
}

func (x *FetchScriptResultsRequest) ClearOperationId() {
	x.OperationId = nil
}

func (x *FetchScriptResultsRequest) ClearResultSetIndex() {
	x.ResultSetIndex = nil
}

func (x *FetchScriptResultsRequest) ClearFetchToken() {
	x.FetchToken = nil
}

func (x *FetchScriptResultsRequest) ClearRowsLimit() {
	x.RowsLimit = nil
}

type FetchScriptResultsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OperationId    *string
	ResultSetIndex *int64
	FetchToken     *string
	RowsLimit      *int64
}

func (b0 FetchScriptResultsRequest_builder) Build() *FetchScriptResultsRequest {
	m0 := &FetchScriptResultsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.OperationId = b.OperationId
	x.ResultSetIndex = b.ResultSetIndex
	x.FetchToken = b.FetchToken
	x.RowsLimit = b.RowsLimit
	return m0
}

type FetchScriptResultsResponse struct {
	state          protoimpl.MessageState    `protogen:"hybrid.v1"`
	Status         *Ydb.StatusIds_StatusCode `protobuf:"varint,1,opt,name=status,enum=Ydb.StatusIds_StatusCode" json:"status,omitempty"`
	Issues         []*Ydb_Issue.IssueMessage `protobuf:"bytes,2,rep,name=issues" json:"issues,omitempty"`
	ResultSetIndex *int64                    `protobuf:"varint,3,opt,name=result_set_index,json=resultSetIndex" json:"result_set_index,omitempty"`
	ResultSet      *Ydb.ResultSet            `protobuf:"bytes,4,opt,name=result_set,json=resultSet" json:"result_set,omitempty"`
	NextFetchToken *string                   `protobuf:"bytes,5,opt,name=next_fetch_token,json=nextFetchToken" json:"next_fetch_token,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FetchScriptResultsResponse) Reset() {
	*x = FetchScriptResultsResponse{}
	mi := &file_protos_ydb_query_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchScriptResultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchScriptResultsResponse) ProtoMessage() {}

func (x *FetchScriptResultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FetchScriptResultsResponse) GetStatus() Ydb.StatusIds_StatusCode {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Ydb.StatusIds_StatusCode(0)
}

func (x *FetchScriptResultsResponse) GetIssues() []*Ydb_Issue.IssueMessage {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *FetchScriptResultsResponse) GetResultSetIndex() int64 {
	if x != nil && x.ResultSetIndex != nil {
		return *x.ResultSetIndex
	}
	return 0
}

func (x *FetchScriptResultsResponse) GetResultSet() *Ydb.ResultSet {
	if x != nil {
		return x.ResultSet
	}
	return nil
}

func (x *FetchScriptResultsResponse) GetNextFetchToken() string {
	if x != nil && x.NextFetchToken != nil {
		return *x.NextFetchToken
	}
	return ""
}

func (x *FetchScriptResultsResponse) SetStatus(v Ydb.StatusIds_StatusCode) {
	x.Status = &v
}

func (x *FetchScriptResultsResponse) SetIssues(v []*Ydb_Issue.IssueMessage) {
	x.Issues = v
}

func (x *FetchScriptResultsResponse) SetResultSetIndex(v int64) {
	x.ResultSetIndex = &v
}

func (x *FetchScriptResultsResponse) SetResultSet(v *Ydb.ResultSet) {
	x.ResultSet = v
}

func (x *FetchScriptResultsResponse) SetNextFetchToken(v string) {
	x.NextFetchToken = &v
}

func (x *FetchScriptResultsResponse) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *FetchScriptResultsResponse) HasResultSetIndex() bool {
	if x == nil {
		return false
	}
	return x.ResultSetIndex != nil
}

func (x *FetchScriptResultsResponse) HasResultSet() bool {
	if x == nil {
		return false
	}
	return x.ResultSet != nil
}

func (x *FetchScriptResultsResponse) HasNextFetchToken() bool {
	if x == nil {
		return false
	}
	return x.NextFetchToken != nil
}

func (x *FetchScriptResultsResponse) ClearStatus() {
	x.Status = nil
}

func (x *FetchScriptResultsResponse) ClearResultSetIndex() {
	x.ResultSetIndex = nil
}

func (x *FetchScriptResultsResponse) ClearResultSet() {
	x.ResultSet = nil
}

func (x *FetchScriptResultsResponse) ClearNextFetchToken() {
	x.NextFetchToken = nil
}

type FetchScriptResultsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Status         *Ydb.StatusIds_StatusCode
	Issues         []*Ydb_Issue.IssueMessage
	ResultSetIndex *int64
	ResultSet      *Ydb.ResultSet
	NextFetchToken *string
}

func (b0 FetchScriptResultsResponse_builder) Build() *FetchScriptResultsResponse {
	m0 := &FetchScriptResultsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Status = b.Status
	x.Issues = b.Issues
	x.ResultSetIndex = b.ResultSetIndex
	x.ResultSet = b.ResultSet
	x.NextFetchToken = b.NextFetchToken
	return m0
}

type Script struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	ScriptContent *QueryContent          `protobuf:"bytes,1,opt,name=script_content,json=scriptContent" json:"script_content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Script) Reset() {
	*x = Script{}
	mi := &file_protos_ydb_query_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Script) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Script) ProtoMessage() {}

func (x *Script) ProtoReflect() protoreflect.Message {
	mi := &file_protos_ydb_query_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Script) GetScriptContent() *QueryContent {
	if x != nil {
		return x.ScriptContent
	}
	return nil
}

func (x *Script) SetScriptContent(v *QueryContent) {
	x.ScriptContent = v
}

func (x *Script) HasScriptContent() bool {
	if x == nil {
		return false
	}
	return x.ScriptContent != nil
}

func (x *Script) ClearScriptContent() {
	x.ScriptContent = nil
}

type Script_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScriptContent *QueryContent
}

func (b0 Script_builder) Build() *Script {
	m0 := &Script{}
	b, x := &b0, m0
	_, _ = b, x
	x.ScriptContent = b.ScriptContent
	return m0
}

var File_protos_ydb_query_proto protoreflect.FileDescriptor

const file_protos_ydb_query_proto_rawDesc = "" +
	"\n" +
	"\x16protos/ydb_query.proto\x12\tYdb.Query\x1a\x1egoogle/protobuf/duration.proto\x1a#protos/annotations/validation.proto\x1a\x1eprotos/ydb_issue_message.proto\x1a\x1aprotos/ydb_operation.proto\x1a\x1cprotos/ydb_query_stats.proto\x1a\x1dprotos/ydb_status_codes.proto\x1a\x16protos/ydb_value.proto\x1a!google/protobuf/go_features.proto\"\x16\n" +
	"\x14CreateSessionRequest\"\xc6\x01\n" +
	"\x15CreateSessionResponse\x121\n" +
	"\x06status\x18\x01 \x01(\x0e2\x19.Ydb.StatusIds.StatusCodeR\x06status\x12/\n" +
	"\x06issues\x18\x02 \x03(\v2\x17.Ydb.Issue.IssueMessageR\x06issues\x12&\n" +
	"\n" +
	"session_id\x18\x03 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\tsessionId\x12!\n" +
	"\anode_id\x18\x04 \x01(\x03B\b\xb2\xe6*\x04>= 0R\x06nodeId\">\n" +
	"\x14DeleteSessionRequest\x12&\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\tsessionId\"{\n" +
	"\x15DeleteSessionResponse\x121\n" +
	"\x06status\x18\x01 \x01(\x0e2\x19.Ydb.StatusIds.StatusCodeR\x06status\x12/\n" +
	"\x06issues\x18\x02 \x03(\v2\x17.Ydb.Issue.IssueMessageR\x06issues\">\n" +
	"\x14AttachSessionRequest\x12&\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\tsessionId\"r\n" +
	"\fSessionState\x121\n" +
	"\x06status\x18\x01 \x01(\x0e2\x19.Ydb.StatusIds.StatusCodeR\x06status\x12/\n" +
	"\x06issues\x18\x02 \x03(\v2\x17.Ydb.Issue.IssueMessageR\x06issues\"\x1a\n" +
	"\x18SerializableModeSettings\"N\n" +
	"\x12OnlineModeSettings\x128\n" +
	"\x18allow_inconsistent_reads\x18\x01 \x01(\bR\x16allowInconsistentReads\"\x13\n" +
	"\x11StaleModeSettings\"\x16\n" +
	"\x14SnapshotModeSettings\"\xe3\x02\n" +
	"\x13TransactionSettings\x12]\n" +
	"\x17serializable_read_write\x18\x01 \x01(\v2#.Ydb.Query.SerializableModeSettingsH\x00R\x15serializableReadWrite\x12I\n" +
	"\x10online_read_only\x18\x02 \x01(\v2\x1d.Ydb.Query.OnlineModeSettingsH\x00R\x0eonlineReadOnly\x12F\n" +
	"\x0fstale_read_only\x18\x03 \x01(\v2\x1c.Ydb.Query.StaleModeSettingsH\x00R\rstaleReadOnly\x12O\n" +
	"\x12snapshot_read_only\x18\x04 \x01(\v2\x1f.Ydb.Query.SnapshotModeSettingsH\x00R\x10snapshotReadOnlyB\t\n" +
	"\atx_mode\"\x9d\x01\n" +
	"\x12TransactionControl\x12\x1e\n" +
	"\x05tx_id\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bH\x00R\x04txId\x12;\n" +
	"\bbegin_tx\x18\x02 \x01(\v2\x1e.Ydb.Query.TransactionSettingsH\x00R\abeginTx\x12\x1b\n" +
	"\tcommit_tx\x18\n" +
	" \x01(\bR\bcommitTxB\r\n" +
	"\vtx_selector\"\x82\x01\n" +
	"\x17BeginTransactionRequest\x12&\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\tsessionId\x12?\n" +
	"\vtx_settings\x18\x02 \x01(\v2\x1e.Ydb.Query.TransactionSettingsR\n" +
	"txSettings\"*\n" +
	"\x0fTransactionMeta\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x02id\"\xb3\x01\n" +
	"\x18BeginTransactionResponse\x121\n" +
	"\x06status\x18\x01 \x01(\x0e2\x19.Ydb.StatusIds.StatusCodeR\x06status\x12/\n" +
	"\x06issues\x18\x02 \x03(\v2\x17.Ydb.Issue.IssueMessageR\x06issues\x123\n" +
	"\atx_meta\x18\x03 \x01(\v2\x1a.Ydb.Query.TransactionMetaR\x06txMeta\"`\n" +
	"\x18CommitTransactionRequest\x12&\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\tsessionId\x12\x1c\n" +
	"\x05tx_id\x18\x02 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x04txId\"\x7f\n" +
	"\x19CommitTransactionResponse\x121\n" +
	"\x06status\x18\x01 \x01(\x0e2\x19.Ydb.StatusIds.StatusCodeR\x06status\x12/\n" +
	"\x06issues\x18\x02 \x03(\v2\x17.Ydb.Issue.IssueMessageR\x06issues\"b\n" +
	"\x1aRollbackTransactionRequest\x12&\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\tsessionId\x12\x1c\n" +
	"\x05tx_id\x18\x02 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x04txId\"\x81\x01\n" +
	"\x1bRollbackTransactionResponse\x121\n" +
	"\x06status\x18\x01 \x01(\x0e2\x19.Ydb.StatusIds.StatusCodeR\x06status\x12/\n" +
	"\x06issues\x18\x02 \x03(\v2\x17.Ydb.Issue.IssueMessageR\x06issues\"M\n" +
	"\fQueryContent\x12)\n" +
	"\x06syntax\x18\x01 \x01(\x0e2\x11.Ydb.Query.SyntaxR\x06syntax\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\"\xe8\x04\n" +
	"\x13ExecuteQueryRequest\x12&\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\tsessionId\x120\n" +
	"\texec_mode\x18\x02 \x01(\x0e2\x13.Ydb.Query.ExecModeR\bexecMode\x12<\n" +
	"\n" +
	"tx_control\x18\x03 \x01(\v2\x1d.Ydb.Query.TransactionControlR\ttxControl\x12>\n" +
	"\rquery_content\x18\x04 \x01(\v2\x17.Ydb.Query.QueryContentH\x00R\fqueryContent\x12N\n" +
	"\n" +
	"parameters\x18\x06 \x03(\v2..Ydb.Query.ExecuteQueryRequest.ParametersEntryR\n" +
	"parameters\x123\n" +
	"\n" +
	"stats_mode\x18\a \x01(\x0e2\x14.Ydb.Query.StatsModeR\tstatsMode\x124\n" +
	"\x16concurrent_result_sets\x18\b \x01(\bR\x14concurrentResultSets\x12L\n" +
	"\x19response_part_limit_bytes\x18\t \x01(\x03B\x11\xb2\xe6*\r[0; 33554432]R\x16responsePartLimitBytes\x12\x17\n" +
	"\apool_id\x18\n" +
	" \x01(\tR\x06poolId\x1aN\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12%\n" +
	"\x05value\x18\x02 \x01(\v2\x0f.Ydb.TypedValueR\x05value:\x028\x01B\a\n" +
	"\x05query\"6\n" +
	"\rResultSetMeta\x12%\n" +
	"\acolumns\x18\x01 \x03(\v2\v.Ydb.ColumnR\acolumns\"\xd1\x02\n" +
	"\x18ExecuteQueryResponsePart\x121\n" +
	"\x06status\x18\x01 \x01(\x0e2\x19.Ydb.StatusIds.StatusCodeR\x06status\x12/\n" +
	"\x06issues\x18\x02 \x03(\v2\x17.Ydb.Issue.IssueMessageR\x06issues\x122\n" +
	"\x10result_set_index\x18\x03 \x01(\x03B\b\xb2\xe6*\x04>= 0R\x0eresultSetIndex\x12-\n" +
	"\n" +
	"result_set\x18\x04 \x01(\v2\x0e.Ydb.ResultSetR\tresultSet\x129\n" +
	"\n" +
	"exec_stats\x18\x05 \x01(\v2\x1a.Ydb.TableStats.QueryStatsR\texecStats\x123\n" +
	"\atx_meta\x18\x06 \x01(\v2\x1a.Ydb.Query.TransactionMetaR\x06txMeta\"\xff\x03\n" +
	"\x14ExecuteScriptRequest\x12J\n" +
	"\x10operation_params\x18\x01 \x01(\v2\x1f.Ydb.Operations.OperationParamsR\x0foperationParams\x120\n" +
	"\texec_mode\x18\x02 \x01(\x0e2\x13.Ydb.Query.ExecModeR\bexecMode\x12>\n" +
	"\x0escript_content\x18\x03 \x01(\v2\x17.Ydb.Query.QueryContentR\rscriptContent\x12O\n" +
	"\n" +
	"parameters\x18\x04 \x03(\v2/.Ydb.Query.ExecuteScriptRequest.ParametersEntryR\n" +
	"parameters\x123\n" +
	"\n" +
	"stats_mode\x18\x05 \x01(\x0e2\x14.Ydb.Query.StatsModeR\tstatsMode\x12:\n" +
	"\vresults_ttl\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\n" +
	"resultsTtl\x12\x17\n" +
	"\apool_id\x18\a \x01(\tR\x06poolId\x1aN\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12%\n" +
	"\x05value\x18\x02 \x01(\v2\x0f.Ydb.TypedValueR\x05value:\x028\x01\"\xec\x02\n" +
	"\x15ExecuteScriptMetadata\x12*\n" +
	"\fexecution_id\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\vexecutionId\x126\n" +
	"\vexec_status\x18\x02 \x01(\x0e2\x15.Ydb.Query.ExecStatusR\n" +
	"execStatus\x12>\n" +
	"\x0escript_content\x18\x03 \x01(\v2\x17.Ydb.Query.QueryContentR\rscriptContent\x12B\n" +
	"\x10result_sets_meta\x18\x04 \x03(\v2\x18.Ydb.Query.ResultSetMetaR\x0eresultSetsMeta\x120\n" +
	"\texec_mode\x18\x05 \x01(\x0e2\x13.Ydb.Query.ExecModeR\bexecMode\x129\n" +
	"\n" +
	"exec_stats\x18\x06 \x01(\v2\x1a.Ydb.TableStats.QueryStatsR\texecStats\"\xc4\x01\n" +
	"\x19FetchScriptResultsRequest\x12*\n" +
	"\foperation_id\x18\x01 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\voperationId\x12(\n" +
	"\x10result_set_index\x18\x02 \x01(\x03R\x0eresultSetIndex\x12(\n" +
	"\vfetch_token\x18\x03 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\n" +
	"fetchToken\x12'\n" +
	"\n" +
	"rows_limit\x18\x04 \x01(\x03B\b\xb2\xe6*\x04>= 0R\trowsLimit\"\x96\x02\n" +
	"\x1aFetchScriptResultsResponse\x121\n" +
	"\x06status\x18\x01 \x01(\x0e2\x19.Ydb.StatusIds.StatusCodeR\x06status\x12/\n" +
	"\x06issues\x18\x02 \x03(\v2\x17.Ydb.Issue.IssueMessageR\x06issues\x122\n" +
	"\x10result_set_index\x18\x03 \x01(\x03B\b\xb2\xe6*\x04>= 0R\x0eresultSetIndex\x12-\n" +
	"\n" +
	"result_set\x18\x04 \x01(\v2\x0e.Ydb.ResultSetR\tresultSet\x121\n" +
	"\x10next_fetch_token\x18\x05 \x01(\tB\a\xa2\xe6*\x03\x18\x80\bR\x0enextFetchToken\"H\n" +
	"\x06Script\x12>\n" +
	"\x0escript_content\x18\x01 \x01(\v2\x17.Ydb.Query.QueryContentR\rscriptContent*B\n" +
	"\x06Syntax\x12\x16\n" +
	"\x12SYNTAX_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rSYNTAX_YQL_V1\x10\x01\x12\r\n" +
	"\tSYNTAX_PG\x10\x02*\x86\x01\n" +
	"\bExecMode\x12\x19\n" +
	"\x15EXEC_MODE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fEXEC_MODE_PARSE\x10\n" +
	"\x12\x16\n" +
	"\x12EXEC_MODE_VALIDATE\x10\x14\x12\x15\n" +
	"\x11EXEC_MODE_EXPLAIN\x10\x1e\x12\x15\n" +
	"\x11EXEC_MODE_EXECUTE\x102\"\x04\b(\x10(*\x7f\n" +
	"\tStatsMode\x12\x1a\n" +
	"\x16STATS_MODE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fSTATS_MODE_NONE\x10\n" +
	"\x12\x14\n" +
	"\x10STATS_MODE_BASIC\x10\x14\x12\x13\n" +
	"\x0fSTATS_MODE_FULL\x10\x1e\x12\x16\n" +
	"\x12STATS_MODE_PROFILE\x10(*\xaa\x01\n" +
	"\n" +
	"ExecStatus\x12\x1b\n" +
	"\x17EXEC_STATUS_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14EXEC_STATUS_STARTING\x10\n" +
	"\x12\x17\n" +
	"\x13EXEC_STATUS_ABORTED\x10\x14\x12\x19\n" +
	"\x15EXEC_STATUS_CANCELLED\x10\x1e\x12\x19\n" +
	"\x15EXEC_STATUS_COMPLETED\x10(\x12\x16\n" +
	"\x12EXEC_STATUS_FAILED\x102B[\n" +
	"\x14tech.ydb.proto.queryZ8github.com/ydb-platform/ydb-go-genproto/protos/Ydb_Query\xf8\x01\x01\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_protos_ydb_query_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_protos_ydb_query_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_protos_ydb_query_proto_goTypes = []any{
	(Syntax)(0),                            // 0: Ydb.Query.Syntax
	(ExecMode)(0),                          // 1: Ydb.Query.ExecMode
	(StatsMode)(0),                         // 2: Ydb.Query.StatsMode
	(ExecStatus)(0),                        // 3: Ydb.Query.ExecStatus
	(*CreateSessionRequest)(nil),           // 4: Ydb.Query.CreateSessionRequest
	(*CreateSessionResponse)(nil),          // 5: Ydb.Query.CreateSessionResponse
	(*DeleteSessionRequest)(nil),           // 6: Ydb.Query.DeleteSessionRequest
	(*DeleteSessionResponse)(nil),          // 7: Ydb.Query.DeleteSessionResponse
	(*AttachSessionRequest)(nil),           // 8: Ydb.Query.AttachSessionRequest
	(*SessionState)(nil),                   // 9: Ydb.Query.SessionState
	(*SerializableModeSettings)(nil),       // 10: Ydb.Query.SerializableModeSettings
	(*OnlineModeSettings)(nil),             // 11: Ydb.Query.OnlineModeSettings
	(*StaleModeSettings)(nil),              // 12: Ydb.Query.StaleModeSettings
	(*SnapshotModeSettings)(nil),           // 13: Ydb.Query.SnapshotModeSettings
	(*TransactionSettings)(nil),            // 14: Ydb.Query.TransactionSettings
	(*TransactionControl)(nil),             // 15: Ydb.Query.TransactionControl
	(*BeginTransactionRequest)(nil),        // 16: Ydb.Query.BeginTransactionRequest
	(*TransactionMeta)(nil),                // 17: Ydb.Query.TransactionMeta
	(*BeginTransactionResponse)(nil),       // 18: Ydb.Query.BeginTransactionResponse
	(*CommitTransactionRequest)(nil),       // 19: Ydb.Query.CommitTransactionRequest
	(*CommitTransactionResponse)(nil),      // 20: Ydb.Query.CommitTransactionResponse
	(*RollbackTransactionRequest)(nil),     // 21: Ydb.Query.RollbackTransactionRequest
	(*RollbackTransactionResponse)(nil),    // 22: Ydb.Query.RollbackTransactionResponse
	(*QueryContent)(nil),                   // 23: Ydb.Query.QueryContent
	(*ExecuteQueryRequest)(nil),            // 24: Ydb.Query.ExecuteQueryRequest
	(*ResultSetMeta)(nil),                  // 25: Ydb.Query.ResultSetMeta
	(*ExecuteQueryResponsePart)(nil),       // 26: Ydb.Query.ExecuteQueryResponsePart
	(*ExecuteScriptRequest)(nil),           // 27: Ydb.Query.ExecuteScriptRequest
	(*ExecuteScriptMetadata)(nil),          // 28: Ydb.Query.ExecuteScriptMetadata
	(*FetchScriptResultsRequest)(nil),      // 29: Ydb.Query.FetchScriptResultsRequest
	(*FetchScriptResultsResponse)(nil),     // 30: Ydb.Query.FetchScriptResultsResponse
	(*Script)(nil),                         // 31: Ydb.Query.Script
	nil,                                    // 32: Ydb.Query.ExecuteQueryRequest.ParametersEntry
	nil,                                    // 33: Ydb.Query.ExecuteScriptRequest.ParametersEntry
	(Ydb.StatusIds_StatusCode)(0),          // 34: Ydb.StatusIds.StatusCode
	(*Ydb_Issue.IssueMessage)(nil),         // 35: Ydb.Issue.IssueMessage
	(*Ydb.Column)(nil),                     // 36: Ydb.Column
	(*Ydb.ResultSet)(nil),                  // 37: Ydb.ResultSet
	(*Ydb_TableStats.QueryStats)(nil),      // 38: Ydb.TableStats.QueryStats
	(*Ydb_Operations.OperationParams)(nil), // 39: Ydb.Operations.OperationParams
	(*durationpb.Duration)(nil),            // 40: google.protobuf.Duration
	(*Ydb.TypedValue)(nil),                 // 41: Ydb.TypedValue
}
var file_protos_ydb_query_proto_depIdxs = []int32{
	34, // 0: Ydb.Query.CreateSessionResponse.status:type_name -> Ydb.StatusIds.StatusCode
	35, // 1: Ydb.Query.CreateSessionResponse.issues:type_name -> Ydb.Issue.IssueMessage
	34, // 2: Ydb.Query.DeleteSessionResponse.status:type_name -> Ydb.StatusIds.StatusCode
	35, // 3: Ydb.Query.DeleteSessionResponse.issues:type_name -> Ydb.Issue.IssueMessage
	34, // 4: Ydb.Query.SessionState.status:type_name -> Ydb.StatusIds.StatusCode
	35, // 5: Ydb.Query.SessionState.issues:type_name -> Ydb.Issue.IssueMessage
	10, // 6: Ydb.Query.TransactionSettings.serializable_read_write:type_name -> Ydb.Query.SerializableModeSettings
	11, // 7: Ydb.Query.TransactionSettings.online_read_only:type_name -> Ydb.Query.OnlineModeSettings
	12, // 8: Ydb.Query.TransactionSettings.stale_read_only:type_name -> Ydb.Query.StaleModeSettings
	13, // 9: Ydb.Query.TransactionSettings.snapshot_read_only:type_name -> Ydb.Query.SnapshotModeSettings
	14, // 10: Ydb.Query.TransactionControl.begin_tx:type_name -> Ydb.Query.TransactionSettings
	14, // 11: Ydb.Query.BeginTransactionRequest.tx_settings:type_name -> Ydb.Query.TransactionSettings
	34, // 12: Ydb.Query.BeginTransactionResponse.status:type_name -> Ydb.StatusIds.StatusCode
	35, // 13: Ydb.Query.BeginTransactionResponse.issues:type_name -> Ydb.Issue.IssueMessage
	17, // 14: Ydb.Query.BeginTransactionResponse.tx_meta:type_name -> Ydb.Query.TransactionMeta
	34, // 15: Ydb.Query.CommitTransactionResponse.status:type_name -> Ydb.StatusIds.StatusCode
	35, // 16: Ydb.Query.CommitTransactionResponse.issues:type_name -> Ydb.Issue.IssueMessage
	34, // 17: Ydb.Query.RollbackTransactionResponse.status:type_name -> Ydb.StatusIds.StatusCode
	35, // 18: Ydb.Query.RollbackTransactionResponse.issues:type_name -> Ydb.Issue.IssueMessage
	0,  // 19: Ydb.Query.QueryContent.syntax:type_name -> Ydb.Query.Syntax
	1,  // 20: Ydb.Query.ExecuteQueryRequest.exec_mode:type_name -> Ydb.Query.ExecMode
	15, // 21: Ydb.Query.ExecuteQueryRequest.tx_control:type_name -> Ydb.Query.TransactionControl
	23, // 22: Ydb.Query.ExecuteQueryRequest.query_content:type_name -> Ydb.Query.QueryContent
	32, // 23: Ydb.Query.ExecuteQueryRequest.parameters:type_name -> Ydb.Query.ExecuteQueryRequest.ParametersEntry
	2,  // 24: Ydb.Query.ExecuteQueryRequest.stats_mode:type_name -> Ydb.Query.StatsMode
	36, // 25: Ydb.Query.ResultSetMeta.columns:type_name -> Ydb.Column
	34, // 26: Ydb.Query.ExecuteQueryResponsePart.status:type_name -> Ydb.StatusIds.StatusCode
	35, // 27: Ydb.Query.ExecuteQueryResponsePart.issues:type_name -> Ydb.Issue.IssueMessage
	37, // 28: Ydb.Query.ExecuteQueryResponsePart.result_set:type_name -> Ydb.ResultSet
	38, // 29: Ydb.Query.ExecuteQueryResponsePart.exec_stats:type_name -> Ydb.TableStats.QueryStats
	17, // 30: Ydb.Query.ExecuteQueryResponsePart.tx_meta:type_name -> Ydb.Query.TransactionMeta
	39, // 31: Ydb.Query.ExecuteScriptRequest.operation_params:type_name -> Ydb.Operations.OperationParams
	1,  // 32: Ydb.Query.ExecuteScriptRequest.exec_mode:type_name -> Ydb.Query.ExecMode
	23, // 33: Ydb.Query.ExecuteScriptRequest.script_content:type_name -> Ydb.Query.QueryContent
	33, // 34: Ydb.Query.ExecuteScriptRequest.parameters:type_name -> Ydb.Query.ExecuteScriptRequest.ParametersEntry
	2,  // 35: Ydb.Query.ExecuteScriptRequest.stats_mode:type_name -> Ydb.Query.StatsMode
	40, // 36: Ydb.Query.ExecuteScriptRequest.results_ttl:type_name -> google.protobuf.Duration
	3,  // 37: Ydb.Query.ExecuteScriptMetadata.exec_status:type_name -> Ydb.Query.ExecStatus
	23, // 38: Ydb.Query.ExecuteScriptMetadata.script_content:type_name -> Ydb.Query.QueryContent
	25, // 39: Ydb.Query.ExecuteScriptMetadata.result_sets_meta:type_name -> Ydb.Query.ResultSetMeta
	1,  // 40: Ydb.Query.ExecuteScriptMetadata.exec_mode:type_name -> Ydb.Query.ExecMode
	38, // 41: Ydb.Query.ExecuteScriptMetadata.exec_stats:type_name -> Ydb.TableStats.QueryStats
	34, // 42: Ydb.Query.FetchScriptResultsResponse.status:type_name -> Ydb.StatusIds.StatusCode
	35, // 43: Ydb.Query.FetchScriptResultsResponse.issues:type_name -> Ydb.Issue.IssueMessage
	37, // 44: Ydb.Query.FetchScriptResultsResponse.result_set:type_name -> Ydb.ResultSet
	23, // 45: Ydb.Query.Script.script_content:type_name -> Ydb.Query.QueryContent
	41, // 46: Ydb.Query.ExecuteQueryRequest.ParametersEntry.value:type_name -> Ydb.TypedValue
	41, // 47: Ydb.Query.ExecuteScriptRequest.ParametersEntry.value:type_name -> Ydb.TypedValue
	48, // [48:48] is the sub-list for method output_type
	48, // [48:48] is the sub-list for method input_type
	48, // [48:48] is the sub-list for extension type_name
	48, // [48:48] is the sub-list for extension extendee
	0,  // [0:48] is the sub-list for field type_name
}

func init() { file_protos_ydb_query_proto_init() }
func file_protos_ydb_query_proto_init() {
	if File_protos_ydb_query_proto != nil {
		return
	}
	file_protos_ydb_query_proto_msgTypes[10].OneofWrappers = []any{
		(*TransactionSettings_SerializableReadWrite)(nil),
		(*TransactionSettings_OnlineReadOnly)(nil),
		(*TransactionSettings_StaleReadOnly)(nil),
		(*TransactionSettings_SnapshotReadOnly)(nil),
	}
	file_protos_ydb_query_proto_msgTypes[11].OneofWrappers = []any{
		(*TransactionControl_TxId)(nil),
		(*TransactionControl_BeginTx)(nil),
	}
	file_protos_ydb_query_proto_msgTypes[20].OneofWrappers = []any{
		(*ExecuteQueryRequest_QueryContent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_ydb_query_proto_rawDesc), len(file_protos_ydb_query_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_ydb_query_proto_goTypes,
		DependencyIndexes: file_protos_ydb_query_proto_depIdxs,
		EnumInfos:         file_protos_ydb_query_proto_enumTypes,
		MessageInfos:      file_protos_ydb_query_proto_msgTypes,
	}.Build()
	File_protos_ydb_query_proto = out.File
	file_protos_ydb_query_proto_goTypes = nil
	file_protos_ydb_query_proto_depIdxs = nil
}
